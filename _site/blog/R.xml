<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Noam Ross - R</title>
 <link href="http://www.noamross.net/blog/R.xml" rel="self"/>
 <link href="http://www.noamross.net"/>
 <updated>2013-04-04T15:39:46-07:00</updated>
 <id>http://www.noamross.net</id>
 <author>
   <name>Noam Ross</name>
   <email>noam.ross@gmail.com</email>
 </author>

 
 <entry>
   <title>Demographic analysis using the `popbio` library and some other fun stuff</title>
   <link href="http://www.noamross.net/blog/2013/4/4/oleary-popbio-presentation.html"/>
   <updated>2013-04-04T11:16:55-07:00</updated>
   <id>hhttp://www.noamross.net/blog/2013/4/4/oleary-popbio-presentation</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;&lt;em&gt;This week at the &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt; we had a great presentation by Kara Moore O’Leary on using the &lt;a href=&quot;http://cran.r-project.org/web/packages/popbio/&quot;&gt;&lt;code&gt;popbio&lt;/code&gt; package&lt;/a&gt; to examine rare plant demographics. The following is her script run through &lt;code&gt;knitr&lt;/code&gt;. You can download the original script and associated data &lt;a href=&quot;&quot;&gt;here&lt;/a&gt;. Find out more about Kara and her work at her website &lt;a href=&quot;http://dynamicecosciences.wordpress.com/&quot;&gt;here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;demographic-analysis-using-the-popbio-library-and-some-other-fun-stuff&quot;&gt;Demographic analysis using the popbio library and some other fun stuff&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;A population viability type analysis for a rare herbacious perennial plant, &lt;em&gt;Penstemon albomarginatus&lt;/em&gt;, for its only remaining California population&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Objectives:&lt;/p&gt;
&lt;ol style=&quot;list-style-type: decimal&quot;&gt;
&lt;li&gt;Estimating the population growth rate - deterministic and stochastic methods&lt;/li&gt;
&lt;li&gt;Sensitivity and elasticity analysis - which transitions/rate are most variable, sensitive to change&lt;/li&gt;
&lt;li&gt;Projecting the population stochastically for different scenarios, observing variation in growth rate&lt;/li&gt;
&lt;li&gt;Quasi extinction probability&lt;/li&gt;
&lt;li&gt;Estimating vital rates from real data, which will never be as good/much the data that you would like to have for a PVA - some therapy for me, and maybe you too&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Load popbio and some other helpful libraries. I use the dropdown menu in RStudio to install libraries, it seems to work more consistently for my mac than scripting the installs, sorry.&lt;br /&gt;Am I missing something basic about installing packages?&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(popbio)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(plyr)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(reshape)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have already done a bit of magic on my data get here, most or all of which is suggested in the Morris and Doak 2005 book Quantitative population biology. That book was an excellent guide to this kind of analysis. If you want to go deep (and deeper) into this kind of analysis you should get borrow or steal Morris and Doak 2005 and Caswell 2002 from the start! They are both really excellent and straightforward and you’ll be able to answer a lot of the questions that you have along the way. Most of the functions in popbio are based on functions in these two books. Many of the popbio examples are on their data and generate the same graphs etc.&lt;/p&gt;
&lt;p&gt;What you need for a class/stage structured demographic model:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a bunch of individuals (maybe in different populations)&lt;/li&gt;
&lt;li&gt;annual survival rates&lt;/li&gt;
&lt;li&gt;annual class or stage transition rates&lt;/li&gt;
&lt;li&gt;annual fecundity, ie. probability of contribution to the juvenile class in the next year&lt;/li&gt;
&lt;li&gt;these data for a lot of years, preferably 10 or more (but we do what we can with less)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The crux for plants is that its challenging to 1) count all seeds produced annually and 2) know how many seeds really yeilds a juvenile in any year. I am doing a bit of work on these issues from limited field data. If you have a well behaved penguin that you can collar and track and you know produces 2 live juveniles each season, your PVA might be a bit simpler.&lt;/p&gt;
&lt;p&gt;Our field data had surivival for each year, mean plant diameter, and inflorescence count classes. From this I found the median inflorescence number for each class MEDIAN_INLF I assigned each plant to CLASS based on its xDIAM_cm. I convinced myself that this had biological meaning by looking at the relationship between size class and survival. Whatever classes or stages you use, you should be confident that they are meaningful for your study species. OR use an integral projection model (IPM) instead. These allow you to use continuous variables like size or age rather than classes. nice abbreviated dataset&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;andre &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;karadat.csv&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(andre)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## &amp;#39;data.frame&amp;#39;:    1221 obs. of  4 variables:
##  $ PLANT_UNQ: Factor w/ 395 levels &amp;quot;1_703&amp;quot;,&amp;quot;1_704&amp;quot;,..: 238 240 249 253 258 263 250 255 259 239 ...
##  $ YEAR     : int  1994 1994 1994 1994 1994 1994 1994 1994 1994 1994 ...
##  $ CLASS    : Factor w/ 6 levels &amp;quot;A1&amp;quot;,&amp;quot;A2&amp;quot;,&amp;quot;A3&amp;quot;,..: 1 1 1 1 1 1 2 2 2 3 ...
##  $ SEEDS    : num  71.8 0 71.8 0 71.8 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;head2&lt;/span&gt;(andre)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      PLANT_UNQ YEAR CLASS SEEDS
## 1          A_1 1994    A1 71.75
## 2          A_3 1994    A1  0.00
## 3         B_13 1994    A1 71.75
## .            .    .     .     .
## 1221    6_772A 2012     J  0.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s look at the stages/classes&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;levels&lt;/span&gt;(andre$CLASS)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] &amp;quot;A1&amp;quot;   &amp;quot;A2&amp;quot;   &amp;quot;A3&amp;quot;   &amp;quot;A4&amp;quot;   &amp;quot;dead&amp;quot; &amp;quot;J&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# dead. After that it can be omitted.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;estimating-fecundity&quot;&gt;1. ESTIMATING FECUNDITY&lt;/h2&gt;
&lt;p&gt;The big challenge for plants = estimating seeds/indiv –&amp;gt; juveniles produced the next year based on a few fruit and seed counts and a lot of inflorescence class data&lt;/p&gt;
&lt;h3 id=&quot;part-1-how-to-estimate-seed-production-per-plant&quot;&gt;Part 1: How to estimate seed production per plant?&lt;/h3&gt;
&lt;p&gt;Multiply seeds/infl from field observations by inflorescence number. Ideally you would have seed counts for each plant, but in the absence of those nearly impossible data, I’m using a few seeds/fruit counts * fruits/infl counts from 2011 and 2012.&lt;/p&gt;
&lt;h3 id=&quot;part-2-how-many-seeds-makes-an-emergent-juvenile&quot;&gt;Part 2: How many seeds makes an emergent juvenile?&lt;/h3&gt;
&lt;p&gt;I’ll add some notes on how I made these estimates at the end of this script, but let’s start today with a dataset ready to go for popbio I’m sure that every PVA has a hurdle or five to leap before you have the vital rate data ready to go. I’ve added estimated seeds produced per individual per year as a column in this simple dataset more on how I generated that later if we are interested&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(andre)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## &amp;#39;data.frame&amp;#39;:    1221 obs. of  4 variables:
##  $ PLANT_UNQ: Factor w/ 395 levels &amp;quot;1_703&amp;quot;,&amp;quot;1_704&amp;quot;,..: 238 240 249 253 258 263 250 255 259 239 ...
##  $ YEAR     : int  1994 1994 1994 1994 1994 1994 1994 1994 1994 1994 ...
##  $ CLASS    : Factor w/ 6 levels &amp;quot;A1&amp;quot;,&amp;quot;A2&amp;quot;,&amp;quot;A3&amp;quot;,..: 1 1 1 1 1 1 2 2 2 3 ...
##  $ SEEDS    : num  71.8 0 71.8 0 71.8 ...&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;pick-a-starting-population-vector&quot;&gt;2. PICK A STARTING POPULATION VECTOR&lt;/h2&gt;
&lt;p&gt;this is the # of individuals in each class/stage at the start of your model. you should play around with this to see how it effects the outcome. My model is insensitive to realistic changes in this vector. Here are the “options”, the number in each class observed annually&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;n_options &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(andre, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;YEAR&amp;quot;&lt;/span&gt;), function(df) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;table&lt;/span&gt;(df$CLASS)))
n_options&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##    YEAR A1 A2 A3 A4 dead   J
## 1  1994  6  3  2  2    0  13
## 2  1995 31 17 13 11    5  81
## 3  1996 49 15 14  6   52  16
## 4  1997 36 19 10  4   30   2
## 5  1998 10 22 13 17    9   0
## 6  1999  8 16 24 11    3   0
## 7  2000  6 17 17  8   11   0
## 8  2001  1 11 16 14    6   0
## 9  2002 13 14  6  0    9   0
## 10 2003  4  8  6  0   14   1
## 11 2004  0  0  0  0   19   0
## 12 2011 22 23 12  6    0 173
## 13 2012  6  1  0  1  172  34&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;picked starting population vector from 1995, the first year with 9 observed populations&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;n95 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;81&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;11&lt;/span&gt;)
n =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;n95&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you can also see that I only have J class individuals for a subset of the years. Check your data for missing bits like this. Perhaps your collaborator is forgetting to tell you that they didn’t survey for new juveniles from 1996-2003. It happens!&lt;/p&gt;
&lt;h2 id=&quot;generate-a-transition-matrix&quot;&gt;3. GENERATE A TRANSITION MATRIX&lt;/h2&gt;
&lt;p&gt;this matrix links each individual to its fate in the next year/cycle/season this is why you need each individual to be “dead” for a year, but no longer. If your raw data is like mine and only taken on live plants, “dead” might be something you have to add. make columns for year2, fate, and seeds2 for the whole census&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;trans &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;merge&lt;/span&gt;(andre, andre, &lt;span class=&quot;dt&quot;&gt;by =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;PLANT_UNQ&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sort =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;), YEAR.x ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;YEAR.y -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;head2&lt;/span&gt;(trans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      PLANT_UNQ YEAR.x CLASS.x SEEDS.x YEAR.y CLASS.y SEEDS.y
## 3          A_1   1994      A1   71.75   1995      A2   258.3
## 8          A_1   1995      A2  258.30   1996    dead     0.0
## 13         A_3   1996      A1   71.75   1997      A2   258.3
## .            .      .       .       .      .       .       .
## 6117     9_317   2011       J   71.75   2012       J     0.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;rename rows and columns to improve clarity (I use the names used by popbio, which are similar to Morris and Doak) I think I worked out somewhat painfully that you need these particular column names.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;rownames&lt;/span&gt;(trans) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(trans)
&lt;span class=&quot;kw&quot;&gt;colnames&lt;/span&gt;(trans)[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;plant&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;year&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;stage&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;seeds&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;year2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;fate&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;st&quot;&gt;&amp;quot;seeds2&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;head2&lt;/span&gt;(trans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     plant year stage  seeds year2 fate seeds2
## 1     A_1 1994    A1  71.75  1995   A2  258.3
## 2     A_1 1995    A2 258.30  1996 dead    0.0
## 3     A_3 1996    A1  71.75  1997   A2  258.3
## .       .    .     .      .     .    .      .
## 825 9_317 2011     J  71.75  2012    J    0.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add individual fertility estimates from the calculations above&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;seedlingtrans &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.00305&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;# This is the rate at which a seed becomes a J individual (I estimated this elsewhere, see Appendix below)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;adding in the number of J individuals produced by each individual&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;trans$J &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;trans$seeds *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;seedlingtrans  &lt;span class=&quot;co&quot;&gt;# note that J is not an integer, which is totally fine, its a rate of J production&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;head2&lt;/span&gt;(trans)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     plant year stage  seeds year2 fate seeds2      J
## 1     A_1 1994    A1  71.75  1995   A2  258.3 0.2188
## 2     A_1 1995    A2 258.30  1996 dead    0.0 0.7878
## 3     A_3 1996    A1  71.75  1997   A2  258.3 0.2188
## .       .    .     .      .     .    .      .      .
## 825 9_317 2011     J  71.75  2012    J    0.0 0.2188&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;generate-annual-matrices-the-simple-way-for-3-easy-years&quot;&gt;4. GENERATE ANNUAL MATRICES — THE SIMPLE WAY for 3 easy years&lt;/h2&gt;
&lt;h3 id=&quot;name-stages&quot;&gt;NAME STAGES&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;stages &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;J&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;A1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;A2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;A3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;A4&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you must have a vector named stages in this way for your own clases or stages used in the “stage” vector of your data frame&lt;/p&gt;
&lt;h3 id=&quot;set-iterations&quot;&gt;SET ITERATIONS&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;it &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;# set the number of time steps for a deterministic model&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make a demographic projection matrix for each year like so: 1994&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;trans94 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(trans, year ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1994&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(plant, stage, fate, J))
(proj94 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;projection.matrix&lt;/span&gt;(trans94, stage, fate, J, &lt;span class=&quot;dt&quot;&gt;sort =&lt;/span&gt; stages))  &lt;span class=&quot;co&quot;&gt;#this gives you a projection matrix for 1994&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     
##            J     A1     A2     A3    A4
##   J  0.07692 0.1459 0.7878 0.7878 4.355
##   A1 0.53846 0.3333 0.3333 0.0000 0.000
##   A2 0.07692 0.3333 0.0000 0.0000 0.000
##   A3 0.00000 0.1667 0.3333 0.5000 0.000
##   A4 0.00000 0.0000 0.3333 0.5000 1.000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you can do a simple deterministic projection of the matrix for just this year&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(p94 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pop.projection&lt;/span&gt;(proj94, n, it))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## $lambda
## [1] 1.496
## 
## $stable.stage
##       J      A1      A2      A3      A4 
## 0.48307 0.24671 0.07983 0.06803 0.12235 
## 
## $stage.vectors
##     0     1      2      3      4      5     6      7      8      9     10
## J  81 82.29 142.62 223.46 338.78 502.17 745.4 1112.5 1665.3 2493.0 3729.6
## A1 31 59.62  69.70 108.76 167.98 256.23 383.2  570.4  850.9 1272.2 1903.7
## A2 17 16.56  26.20  34.21  53.44  82.05 124.0  185.1  275.7  411.7  615.8
## A3 13 17.33  24.12  32.41  45.74  68.68 104.4  157.4  235.5  351.4  525.0
## A4 11 23.17  37.35  58.15  85.76 126.44 188.1  281.7  422.1  631.7  944.7
##        11   12    13    14    15    16    17    18     19     20     21
## J  5577.3 8340 12472 18653 27896 41720 62394 93313 139553 208707 312129
## A1 2848.1 4260  6370  9526 14247 21307 31865 47656  71271 106588 159407
## A2  921.5 1378  2061  3083  4610  6895 10311 15421  23063  34492  51584
## A3  785.1 1174  1757  2627  3929  5876  8787 13142  19654  29393  43959
## A4 1412.4 2112  3159  4724  7065 10567 15803 23633  35345  52859  79053
##        22     23      24      25      26      27      28      29       30
## J  466801 698120 1044066 1561441 2335197 3492380 5222992 7811190 11681943
## A1 238400 356536  533214  797443 1192607 1783591 2667431 3989249  5966079
## A2  77146 115374  172547  258051  385925  577166  863175 1290912  1930610
## A3  65742  98319  147041  219905  328877  491848  735578 1100086  1645222
## A4 118227 176813  264431  395467  591436  884516 1322829 1978343  2958690
##          31       32       33       34       35        36        37
## J  17470807 26128282 39075876 58439515 87398601 130708056 195479056
## A1  8922507 13343961 19956421 29845615 44635295  66753845  99833010
## A2  2887304  4318077  6457855  9657977 14443886  21601401  32305748
## A3  2460494  3679766  5503236  8230306 12308748  18408218  27530217
## A4  4424838  6617520  9896762 14800999 22135477  33104480  49509056
##           38        39        40        41        42        43        44
## J  292346643 437215941 653873694 977893912 1.462e+09 2.187e+09 3.271e+09
## A1 149304206 223290332 333939503 499419705 7.469e+08 1.117e+09 1.671e+09
## A2  48314520  72256272 108062106 161611144 2.417e+08 3.615e+08 5.406e+08
## A3  41172526  61575137  92088048 137721310 2.060e+08 3.080e+08 4.607e+08
## A4  74042747 110733850 165606843 247671569 3.704e+08 5.540e+08 8.285e+08
##           45        46        47        48        49        50        51
## J  4.892e+09 7.316e+09 1.094e+10 1.636e+10 2.447e+10 3.660e+10 5.474e+10
## A1 2.498e+09 3.736e+09 5.588e+09 8.357e+09 1.250e+10 1.869e+10 2.795e+10
## A2 8.085e+08 1.209e+09 1.808e+09 2.704e+09 4.044e+09 6.049e+09 9.046e+09
## A3 6.890e+08 1.030e+09 1.541e+09 2.305e+09 3.447e+09 5.154e+09 7.709e+09
## A4 1.239e+09 1.853e+09 2.771e+09 4.144e+09 6.198e+09 9.270e+09 1.386e+10
##           52        53        54        55        56        57        58
## J  8.186e+10 1.224e+11 1.831e+11 2.738e+11 4.095e+11 6.124e+11 9.159e+11
## A1 4.181e+10 6.252e+10 9.351e+10 1.398e+11 2.091e+11 3.128e+11 4.678e+11
## A2 1.353e+10 2.023e+10 3.026e+10 4.525e+10 6.768e+10 1.012e+11 1.514e+11
## A3 1.153e+10 1.724e+10 2.579e+10 3.856e+10 5.767e+10 8.625e+10 1.290e+11
## A4 2.073e+10 3.101e+10 4.637e+10 6.935e+10 1.037e+11 1.551e+11 2.320e+11
##           59        60        61        62        63        64        65
## J  1.370e+12 2.049e+12 3.064e+12 4.582e+12 6.852e+12 1.025e+13 1.533e+13
## A1 6.996e+11 1.046e+12 1.565e+12 2.340e+12 3.500e+12 5.234e+12 7.827e+12
## A2 2.264e+11 3.386e+11 5.063e+11 7.572e+11 1.132e+12 1.694e+12 2.533e+12
## A3 1.929e+11 2.885e+11 4.315e+11 6.453e+11 9.651e+11 1.443e+12 2.158e+12
## A4 3.469e+11 5.188e+11 7.759e+11 1.160e+12 1.736e+12 2.596e+12 3.882e+12
##           66        67        68        69        70        71        72
## J  2.292e+13 3.428e+13 5.127e+13 7.667e+13 1.147e+14 1.715e+14 2.565e+14
## A1 1.171e+13 1.751e+13 2.618e+13 3.916e+13 5.856e+13 8.758e+13 1.310e+14
## A2 3.788e+12 5.665e+12 8.473e+12 1.267e+13 1.895e+13 2.834e+13 4.238e+13
## A3 3.228e+12 4.828e+12 7.220e+12 1.080e+13 1.615e+13 2.415e+13 3.612e+13
## A4 5.805e+12 8.682e+12 1.298e+13 1.942e+13 2.904e+13 4.343e+13 6.495e+13
##           73        74        75        76        77        78        79
## J  3.836e+14 5.736e+14 8.579e+14 1.283e+15 1.919e+15 2.870e+15 4.292e+15
## A1 1.959e+14 2.930e+14 4.381e+14 6.552e+14 9.799e+14 1.466e+15 2.192e+15
## A2 6.339e+13 9.480e+13 1.418e+14 2.120e+14 3.171e+14 4.742e+14 7.092e+14
## A3 5.402e+13 8.079e+13 1.208e+14 1.807e+14 2.702e+14 4.041e+14 6.044e+14
## A4 9.714e+13 1.453e+14 2.173e+14 3.249e+14 4.860e+14 7.268e+14 1.087e+15
##           80        81        82        83        84        85        86
## J  6.418e+15 9.599e+15 1.436e+16 2.147e+16 3.211e+16 4.802e+16 7.181e+16
## A1 3.278e+15 4.902e+15 7.331e+15 1.096e+16 1.640e+16 2.452e+16 3.668e+16
## A2 1.061e+15 1.586e+15 2.372e+15 3.548e+15 5.306e+15 7.936e+15 1.187e+16
## A3 9.039e+14 1.352e+15 2.022e+15 3.024e+15 4.522e+15 6.763e+15 1.011e+16
## A4 1.626e+15 2.431e+15 3.636e+15 5.437e+15 8.132e+15 1.216e+16 1.819e+16
##           87        88        89        90        91        92        93
## J  1.074e+17 1.606e+17 2.402e+17 3.592e+17 5.373e+17 8.035e+17 1.202e+18
## A1 5.485e+16 8.203e+16 1.227e+17 1.835e+17 2.744e+17 4.104e+17 6.137e+17
## A2 1.775e+16 2.654e+16 3.970e+16 5.937e+16 8.879e+16 1.328e+17 1.986e+17
## A3 1.513e+16 2.262e+16 3.383e+16 5.059e+16 7.566e+16 1.132e+17 1.692e+17
## A4 2.720e+16 4.068e+16 6.084e+16 9.099e+16 1.361e+17 2.035e+17 3.043e+17
##           94        95        96        97        98        99
## J  1.797e+18 2.688e+18 4.020e+18 6.011e+18 8.990e+18 1.345e+19
## A1 9.178e+17 1.373e+18 2.053e+18 3.070e+18 4.591e+18 6.867e+18
## A2 2.970e+17 4.442e+17 6.643e+17 9.935e+17 1.486e+18 2.222e+18
## A3 2.531e+17 3.785e+17 5.661e+17 8.466e+17 1.266e+18 1.894e+18
## A4 4.552e+17 6.807e+17 1.018e+18 1.522e+18 2.277e+18 3.405e+18
## 
## $pop.sizes
##   [1] 1.530e+02 1.990e+02 3.000e+02 4.570e+02 6.917e+02 1.036e+03 1.545e+03
##   [8] 2.307e+03 3.449e+03 5.160e+03 7.719e+03 1.154e+04 1.726e+04 2.582e+04
##  [15] 3.861e+04 5.775e+04 8.636e+04 1.292e+05 1.932e+05 2.889e+05 4.320e+05
##  [22] 6.461e+05 9.663e+05 1.445e+06 2.161e+06 3.232e+06 4.834e+06 7.230e+06
##  [29] 1.081e+07 1.617e+07 2.418e+07 3.617e+07 5.409e+07 8.089e+07 1.210e+08
##  [36] 1.809e+08 2.706e+08 4.047e+08 6.052e+08 9.051e+08 1.354e+09 2.024e+09
##  [43] 3.027e+09 4.528e+09 6.771e+09 1.013e+10 1.514e+10 2.265e+10 3.387e+10
##  [50] 5.066e+10 7.576e+10 1.133e+11 1.695e+11 2.534e+11 3.790e+11 5.668e+11
##  [57] 8.477e+11 1.268e+12 1.896e+12 2.836e+12 4.241e+12 6.342e+12 9.485e+12
##  [64] 1.419e+13 2.121e+13 3.173e+13 4.745e+13 7.096e+13 1.061e+14 1.587e+14
##  [71] 2.374e+14 3.550e+14 5.309e+14 7.940e+14 1.187e+15 1.776e+15 2.656e+15
##  [78] 3.972e+15 5.940e+15 8.884e+15 1.329e+16 1.987e+16 2.972e+16 4.444e+16
##  [85] 6.646e+16 9.940e+16 1.487e+17 2.223e+17 3.325e+17 4.973e+17 7.437e+17
##  [92] 1.112e+18 1.663e+18 2.488e+18 3.720e+18 5.564e+18 8.321e+18 1.244e+19
##  [99] 1.861e+19 2.783e+19
## 
## $pop.changes
##  [1] 1.300 1.508 1.523 1.514 1.497 1.492 1.493 1.495 1.496 1.496 1.496
## [12] 1.495 1.495 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496
## [23] 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496
## [34] 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496
## [45] 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496
## [56] 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496
## [67] 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496
## [78] 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496
## [89] 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496 1.496&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(l94 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p94$lambda)  &lt;span class=&quot;co&quot;&gt;# wow! if we looked only at 1994 based on these estimates the population would be booming!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 1.496&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;stable.stage shows the proportion of the population in each stage class at the mythical equilibrium, 48% of plants are juveniles in 100 years note that the population has gone from around 200 individuals in 1994 to 2.8e+19 in 100 years, nice!&lt;/p&gt;
&lt;p&gt;Now make some matrices for other years 1995&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;trans95 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(trans, year ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1995&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(plant, stage, fate, J))
(proj95 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;projection.matrix&lt;/span&gt;(trans95, stage, fate, J, &lt;span class=&quot;dt&quot;&gt;sort =&lt;/span&gt; stages))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     
##           J     A1     A2      A3      A4
##   J  0.2000 0.2626 1.0298 3.52160 6.21499
##   A1 0.2125 0.7419 0.4706 0.07692 0.00000
##   A2 0.0000 0.1290 0.4706 0.15385 0.09091
##   A3 0.0000 0.0000 0.0000 0.76923 0.36364
##   A4 0.0000 0.0000 0.0000 0.00000 0.54545&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2011&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;trans11 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(trans, year ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2011&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(plant, stage, fate, J))
(proj11 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;projection.matrix&lt;/span&gt;(trans11, stage, fate, J, &lt;span class=&quot;dt&quot;&gt;sort =&lt;/span&gt; stages))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     
##           J      A1     A2     A3    A4
##   J  0.1573 0.98329 4.5710 8.0648 7.922
##   A1 0.0000 0.05556 0.3077 0.1429 0.000
##   A2 0.0000 0.00000 0.0000 0.0000 0.500
##   A3 0.0000 0.00000 0.0000 0.0000 0.000
##   A4 0.0000 0.00000 0.0000 0.1429 0.000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
p95 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pop.projection&lt;/span&gt;(proj95, n, it)
(l95 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p95$lambda)  &lt;span class=&quot;co&quot;&gt;# lambda is much lower in 1995&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 0.9954&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
(p11 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pop.projection&lt;/span&gt;(proj11, n, pi))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## $lambda
## [1] 0.3065
## 
## $stable.stage
##        J       A1       A2       A3       A4 
## 0.969161 0.021632 0.009207 0.000000 0.000000 
## 
## $stage.vectors
##     0       1       2
## J  81 312.916 97.7480
## A1 31   8.810  2.1818
## A2 17   5.500  0.9286
## A3 13   0.000  0.0000
## A4 11   1.857  0.0000
## 
## $pop.sizes
## [1] 153.0 329.1 100.9
## 
## $pop.changes
## [1] 2.1509 0.3065&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(l11 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;p11$lambda)  &lt;span class=&quot;co&quot;&gt;# and based on 2011 alone extinction is eminent. The gist here is we need lots of years of data to make any decent estimation&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 0.3065&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# of what the population is really likely to do (ie more than the three&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# here)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;deterministic-analaysis-of-these-3-well-behaved-years---basic-non-stochastic-pva&quot;&gt;5. DETERMINISTIC ANALAYSIS OF THESE 3 WELL BEHAVED YEARS - basic non-stochastic PVA&lt;/h2&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;thesearethemeanprojmats &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(proj94, proj95, proj11)  &lt;span class=&quot;co&quot;&gt;# make a list of the three matrices&lt;/span&gt;
(meanxprojmat &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(thesearethemeanprojmats))  &lt;span class=&quot;co&quot;&gt;# make a mean of the three projection matrices for deterministic analysis&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     
##            J      A1     A2      A3     A4
##   J  0.14475 0.46393 2.1295 4.12473 6.1639
##   A1 0.25032 0.37694 0.3705 0.07326 0.0000
##   A2 0.02564 0.15412 0.1569 0.05128 0.1970
##   A3 0.00000 0.05556 0.1111 0.42308 0.1212
##   A4 0.00000 0.00000 0.1111 0.21429 0.5152&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
n  &lt;span class=&quot;co&quot;&gt;# recall what n is, our starting population vector, ie the # of individuals in each class at the start of the projection&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 81 31 17 13 11&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(pprojme &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pop.projection&lt;/span&gt;(meanxprojmat, n))  &lt;span class=&quot;co&quot;&gt;# do the deterministic projection, lambda is the dominant left eigenvalue&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## $lambda
## [1] 1.089
## 
## $stable.stage
##       J      A1      A2      A3      A4 
## 0.61436 0.25469 0.06677 0.03730 0.02688 
## 
## $stage.vectors
##     0      1       2       3       4       5      6      7      8      9
## J  81 183.73 177.921 182.074 196.519 214.113 233.26 253.98 276.50 301.01
## A1 31  39.21  66.116  75.791  82.085  88.980  96.75 105.30 114.63 124.79
## A2 17  12.35  15.265  19.380  21.551  23.374  25.38  27.61  30.05  32.71
## A3 13  10.44   9.224  10.355  11.748  12.972  14.16  15.42  16.79  18.28
## A4 11  10.34   8.938   8.277   8.636   9.361  10.20  11.11  12.10  13.17
##        10     11     12     13     14     15     16     17     18     19
## J  327.68 356.72 388.33 422.74 460.21 500.99 545.38 593.72 646.33 703.61
## A1 135.85 147.88 160.99 175.26 190.79 207.69 226.10 246.14 267.95 291.69
## A2  35.61  38.77  42.20  45.94  50.02  54.45  59.27  64.53  70.24  76.47
## A3  19.90  21.66  23.58  25.67  27.94  30.42  33.11  36.05  39.24  42.72
## A4  14.33  15.60  16.99  18.49  20.13  21.92  23.86  25.97  28.27  30.78
## 
## $pop.sizes
##  [1]  153.0  256.1  277.5  295.9  320.5  348.8  379.7  413.4  450.1  490.0
## [11]  533.4  580.6  632.1  688.1  749.1  815.5  887.7  966.4 1052.0 1145.3
## 
## $pop.changes
##  [1] 1.674 1.083 1.066 1.083 1.088 1.089 1.089 1.089 1.089 1.089 1.089
## [12] 1.089 1.089 1.089 1.089 1.089 1.089 1.089 1.089&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(DetLamb &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;pprojme$lambda)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 1.089&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;run-stochastic-analyses-on-these-3-well-behaved-years&quot;&gt;6. RUN STOCHASTIC ANALYSES ON THESE 3 WELL BEHAVED YEARS&lt;/h2&gt;
&lt;p&gt;For a stochastic analysis, include all of the annual matrices, then make a random draw with replacement&lt;/p&gt;
&lt;p&gt;For a series of time step, or until stable stage distribution is reached.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;thesearethemeanprojmats  &lt;span class=&quot;co&quot;&gt;# our list of projection matrices&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [[1]]
##     
##            J     A1     A2     A3    A4
##   J  0.07692 0.1459 0.7878 0.7878 4.355
##   A1 0.53846 0.3333 0.3333 0.0000 0.000
##   A2 0.07692 0.3333 0.0000 0.0000 0.000
##   A3 0.00000 0.1667 0.3333 0.5000 0.000
##   A4 0.00000 0.0000 0.3333 0.5000 1.000
## 
## [[2]]
##     
##           J     A1     A2      A3      A4
##   J  0.2000 0.2626 1.0298 3.52160 6.21499
##   A1 0.2125 0.7419 0.4706 0.07692 0.00000
##   A2 0.0000 0.1290 0.4706 0.15385 0.09091
##   A3 0.0000 0.0000 0.0000 0.76923 0.36364
##   A4 0.0000 0.0000 0.0000 0.00000 0.54545
## 
## [[3]]
##     
##           J      A1     A2     A3    A4
##   J  0.1573 0.98329 4.5710 8.0648 7.922
##   A1 0.0000 0.05556 0.3077 0.1429 0.000
##   A2 0.0000 0.00000 0.0000 0.0000 0.500
##   A3 0.0000 0.00000 0.0000 0.0000 0.000
##   A4 0.0000 0.00000 0.0000 0.1429 0.000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
stochme &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;stoch.growth.rate&lt;/span&gt;(thesearethemeanprojmats, &lt;span class=&quot;dt&quot;&gt;prob =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;maxt =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50000&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;verbose =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] Calculating stochastic growth at time 1
## [1] Calculating stochastic growth at time 10000
## [1] Calculating stochastic growth at time 20000
## [1] Calculating stochastic growth at time 30000
## [1] Calculating stochastic growth at time 40000
## [1] Calculating stochastic growth at time 50000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;note that these stochastic approximations of lambda are in log form (not immediately comparable to pop.project$lambda)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(stochme$approx)  &lt;span class=&quot;co&quot;&gt;# is the analytic approximation of lambda via Tuljapakar&amp;#39;s method&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 0.946&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;stochme$approx  &lt;span class=&quot;co&quot;&gt;# this is more accurate (perhaps) when there is a lot of covariation in matrix elements&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] -0.05556&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(stochme$sim)  &lt;span class=&quot;co&quot;&gt;# gives stochastic growth rate by simulation, random draws of whole&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 0.8884&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;stochme$sim&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] -0.1183&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tuljapurkar’s approximation takes into account how stochastic variation in the matrix elements affects the long-term stochastic growth rate (Caswell 2001). It can be more accurate in cases where there is covariation between matrix elements within the same year but may not be as accurate when there is a high level of temporal variation (Morris and Doak 2002, Stubben et al. 2012).&lt;/p&gt;
&lt;h3 id=&quot;fun-with-stochastic-analyses&quot;&gt;Fun with stochastic analyses!&lt;/h3&gt;
&lt;p&gt;Its easy to give years “weights” in the stochastic model. For example, you can increase the drought rate by weighting drought years (2011)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;yearweight &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
moredrought &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;stoch.projection&lt;/span&gt;(thesearethemeanprojmats, n, &lt;span class=&quot;dt&quot;&gt;tmax =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;prob =&lt;/span&gt; yearweight, 
    &lt;span class=&quot;dt&quot;&gt;nreps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the output is population sizes, which are fun to graph when comparing models&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;yearweight &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
nodrought &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;stoch.projection&lt;/span&gt;(thesearethemeanprojmats, n, &lt;span class=&quot;dt&quot;&gt;tmax =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;prob =&lt;/span&gt; yearweight, 
    &lt;span class=&quot;dt&quot;&gt;nreps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;)

&lt;span class=&quot;kw&quot;&gt;par&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mfrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;hist&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(moredrought, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, sum)), &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;density =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;More drought&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;v =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log10&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;200&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;# puts a line at the starting population size for reference&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;hist&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(nodrought, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, sum)), &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;green3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;density =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;150&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;No drought&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;v =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log10&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;200&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-21.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;you can get fancy and put these on the same graph too to compare outcomes. y axis is frequency of final population size at tmax.&lt;/p&gt;
&lt;h2 id=&quot;quasi-extinction-based-on-these-3-well-behaved-years&quot;&gt;7. QUASI EXTINCTION BASED ON THESE 3 WELL BEHAVED YEARS&lt;/h2&gt;
&lt;p&gt;Another useful way to think about populations. Since our ability to really estimate lambda is based on the assumption of equilibrium at stable stage, it might be more realistic to think about comparing extinction probabilities for different scenarios that comparing lambdas. these are based on stochastic runs&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
obsd &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;stoch.quasi.ext&lt;/span&gt;(thesearethemeanprojmats, n, &lt;span class=&quot;dt&quot;&gt;prob =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Nx =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;tmax =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;maxruns =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;nreps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sumweight =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;verbose =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)

drt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;stoch.quasi.ext&lt;/span&gt;(thesearethemeanprojmats, n, &lt;span class=&quot;dt&quot;&gt;prob =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Nx =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;tmax =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;maxruns =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;nreps =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;500&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sumweight =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;verbose =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)

&lt;span class=&quot;kw&quot;&gt;par&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mfrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;matplot&lt;/span&gt;(obsd, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Quasi-extinction probability&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rainbow&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;las =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Observed climate&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Years&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;matplot&lt;/span&gt;(drt, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Quasi-extinction probability&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;rainbow&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;las =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Double drought&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Years&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-22.png&quot; /&gt;
&lt;/div&gt;
&lt;h2 id=&quot;sensitivity-and-elasticity&quot;&gt;8. SENSITIVITY AND ELASTICITY&lt;/h2&gt;
&lt;p&gt;SENSITIVITY is a measure of the amount of change is lambda give a small change in a matrix element.&lt;/p&gt;
&lt;p&gt;ELASTICITY is a measure of ``proportional’’ effect, i.e., the effect that a change in a given matrix element has as a proportional to the change in that element&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;meanxprojmat&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     
##            J      A1     A2      A3     A4
##   J  0.14475 0.46393 2.1295 4.12473 6.1639
##   A1 0.25032 0.37694 0.3705 0.07326 0.0000
##   A2 0.02564 0.15412 0.1569 0.05128 0.1970
##   A3 0.00000 0.05556 0.1111 0.42308 0.1212
##   A4 0.00000 0.00000 0.1111 0.21429 0.5152&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;for an overall look at sensitivity and elasticity use the mean projection matrix you could do separate analyses by year or type of year too to examine how sensitivity and elasticity vary among years&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(eigout &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;eigen.analysis&lt;/span&gt;(meanxprojmat))  &lt;span class=&quot;co&quot;&gt;# do the associated sensitivity analysis&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## $lambda1
## [1] 1.089
## 
## $stable.stage
##       J      A1      A2      A3      A4 
## 0.61436 0.25469 0.06677 0.03730 0.02688 
## 
## $sensitivities
##     
##           J      A1      A2      A3       A4
##   J  0.2255 0.09351 0.02451 0.01369 0.009867
##   A1 0.6930 0.28729 0.07532 0.04208 0.000000
##   A2 1.5373 0.63734 0.16708 0.09334 0.067253
##   A3 0.0000 1.13131 0.29658 0.16569 0.119377
##   A4 0.0000 0.00000 0.38356 0.21428 0.154386
## 
## $elasticities
##     
##            J      A1      A2       A3      A4
##   J  0.02999 0.03985 0.04795 0.051889 0.05587
##   A1 0.15935 0.09948 0.02564 0.002832 0.00000
##   A2 0.03621 0.09023 0.02408 0.004397 0.01217
##   A3 0.00000 0.05773 0.03027 0.064394 0.01329
##   A4 0.00000 0.00000 0.03915 0.042180 0.07306
## 
## $repro.value
##      J     A1     A2     A3     A4 
##  1.000  3.072  6.816 12.099 15.647 
## 
## $damping.ratio
## [1] 4.215&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;colSums&lt;/span&gt;(eigout$sensitivities)  &lt;span class=&quot;co&quot;&gt;# this gives the cumulative sensitivity of each stage/class, fun to graph&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      J     A1     A2     A3     A4 
## 2.4559 2.1494 0.9471 0.5291 0.3509&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;calculate fertility and survival sums&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(projsums &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;colSums&lt;/span&gt;(meanxprojmat))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      J     A1     A2     A3     A4 
## 0.4207 1.0505 2.8792 4.8866 6.9973&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(fert_row &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;meanxprojmat[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, ])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      J     A1     A2     A3     A4 
## 0.1448 0.4639 2.1295 4.1247 6.1639&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(surv_row &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;projsums -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fert_row)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      J     A1     A2     A3     A4 
## 0.2760 0.5866 0.7496 0.7619 0.8333&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;can do this for sens and elas too to make a bar chart&lt;/p&gt;
&lt;p&gt;make x where columes are name, sens and elas&lt;/p&gt;
&lt;p&gt;for my data I’m summing elasticity and sensitivity for each class. You could also pick the vital rates that are most meaningful in your own analysis&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(eigout &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;eigen.analysis&lt;/span&gt;(meanxprojmat))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## $lambda1
## [1] 1.089
## 
## $stable.stage
##       J      A1      A2      A3      A4 
## 0.61436 0.25469 0.06677 0.03730 0.02688 
## 
## $sensitivities
##     
##           J      A1      A2      A3       A4
##   J  0.2255 0.09351 0.02451 0.01369 0.009867
##   A1 0.6930 0.28729 0.07532 0.04208 0.000000
##   A2 1.5373 0.63734 0.16708 0.09334 0.067253
##   A3 0.0000 1.13131 0.29658 0.16569 0.119377
##   A4 0.0000 0.00000 0.38356 0.21428 0.154386
## 
## $elasticities
##     
##            J      A1      A2       A3      A4
##   J  0.02999 0.03985 0.04795 0.051889 0.05587
##   A1 0.15935 0.09948 0.02564 0.002832 0.00000
##   A2 0.03621 0.09023 0.02408 0.004397 0.01217
##   A3 0.00000 0.05773 0.03027 0.064394 0.01329
##   A4 0.00000 0.00000 0.03915 0.042180 0.07306
## 
## $repro.value
##      J     A1     A2     A3     A4 
##  1.000  3.072  6.816 12.099 15.647 
## 
## $damping.ratio
## [1] 4.215&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;eigout$sensitivities&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     
##           J      A1      A2      A3       A4
##   J  0.2255 0.09351 0.02451 0.01369 0.009867
##   A1 0.6930 0.28729 0.07532 0.04208 0.000000
##   A2 1.5373 0.63734 0.16708 0.09334 0.067253
##   A3 0.0000 1.13131 0.29658 0.16569 0.119377
##   A4 0.0000 0.00000 0.38356 0.21428 0.154386&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
(fert_row_s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$sensitivities[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, ])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##        J       A1       A2       A3       A4 
## 0.225549 0.093506 0.024513 0.013695 0.009867&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(surv_row_s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$sensitivities[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, ] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$sensitivities[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, ] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$sensitivities[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, 
    ] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$sensitivities[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, ])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      J     A1     A2     A3     A4 
## 2.2303 2.0559 0.9225 0.5154 0.3410&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;sensme &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;cbind&lt;/span&gt;(fert_row_s, surv_row_s))


(fert_row_e &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$elasticities[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, ])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##       J      A1      A2      A3      A4 
## 0.02999 0.03985 0.04795 0.05189 0.05587&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(surv_row_e &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$elasticities[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, ] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$elasticities[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, ] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$elasticities[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, 
    ] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;eigout$elasticities[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, ])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##       J      A1      A2      A3      A4 
## 0.19556 0.24744 0.11913 0.11380 0.09852&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(survtable &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(surv_row_s, surv_row_e)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##    surv_row_s surv_row_e
## J      2.2303    0.19556
## A1     2.0559    0.24744
## A2     0.9225    0.11913
## A3     0.5154    0.11380
## A4     0.3410    0.09852&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(ferttable &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(fert_row_s, fert_row_e)))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##    fert_row_s fert_row_e
## J    0.225549    0.02999
## A1   0.093506    0.03985
## A2   0.024513    0.04795
## A3   0.013695    0.05189
## A4   0.009867    0.05587&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;par&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;mfrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))
mynames &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Sensitivity&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Elasticity&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;barplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(survtable[, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;beside =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;las =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;3.5&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Stage class&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Growth and survival&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;h =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;barplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;t&lt;/span&gt;(ferttable[, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;beside =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;las =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Stage class&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Fertility&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;h =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;legend&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;topright&amp;quot;&lt;/span&gt;, mynames, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;grey.colors&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-25.png&quot; /&gt;
&lt;/div&gt;
&lt;h2 id=&quot;appendix-a.-how-i-generated-a-fecundity-estimate&quot;&gt;APPENDIX A. HOW I GENERATED A FECUNDITY ESTIMATE&lt;/h2&gt;
&lt;p&gt;I’m including this for plant folks who might like to see how I made fecundity estimates from real data I also have developed a script to simulate juvenile numbers and transition rates for the years in my dataset that are missing these data, and bootstraps of the whole model.&lt;/p&gt;
&lt;p&gt;Load up the raw-ish data&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;andre &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;D__composite9_13_2012.csv&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(andre)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## &amp;#39;data.frame&amp;#39;:    1693 obs. of  15 variables:
##  $ PLANT_UNQ   : Factor w/ 619 levels &amp;quot;1_701&amp;quot;,&amp;quot;1_702&amp;quot;,..: 462 464 473 477 482 487 474 479 483 463 ...
##  $ YEAR        : int  1994 1994 1994 1994 1994 1994 1994 1994 1994 1994 ...
##  $ CLASS       : Factor w/ 6 levels &amp;quot;A1&amp;quot;,&amp;quot;A2&amp;quot;,&amp;quot;A3&amp;quot;,..: 1 1 1 1 1 1 2 2 2 3 ...
##  $ OBS_ID      : int  1 3 20 24 11 16 21 26 12 2 ...
##  $ COHORT      : Factor w/ 18 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;,..: 10 10 11 11 11 11 11 11 11 10 ...
##  $ PLANT.NUM   : Factor w/ 460 levels &amp;quot;1&amp;quot;,&amp;quot;10&amp;quot;,&amp;quot;11&amp;quot;,..: 1 23 5 9 41 168 6 11 42 12 ...
##  $ xDIAM_cm    : num  12 11 17 12 18 12 23 22 29 32 ...
##  $ SEEDS_DC    : num  26.7 26.7 26.7 26.7 26.7 ...
##  $ MEDIAN_INFL : int  5 0 5 0 5 5 18 18 18 18 ...
##  $ INFL_CLASS  : int  1 0 1 0 1 1 2 2 2 2 ...
##  $ MAX_INFL    : int  111 0 111 0 111 111 123 123 123 123 ...
##  $ OBS_INLF    : int  NA NA NA NA NA NA NA NA NA NA ...
##  $ SEEDS_YR_INF: num  NA NA NA NA NA NA NA NA NA NA ...
##  $ CAGED       : Factor w/ 2 levels &amp;quot;N&amp;quot;,&amp;quot;Y&amp;quot;: 1 1 1 1 1 1 1 1 1 1 ...
##  $ WATERED     : Factor w/ 2 levels &amp;quot;N&amp;quot;,&amp;quot;Y&amp;quot;: 1 1 1 1 1 1 1 1 1 1 ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;BEST ESTIMATE OF SEED PRODUCTION: average of seeds/fruit, weighed average of fruits/infl where 0.14 is 1/8 drought years&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;andre$SEEDS &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;andre$MEDIAN_INFL *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;14.35&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;# = 14.35 seeds/infl&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The big crux Part 2: How many seeds makes a J plant the next year? ie what is the transition rate or fecundity rate? observed juveniles in each year (sadly not all years have the same # of cohorts, so I adjust for that below)&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;seedling_yr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(andre, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;YEAR&amp;quot;&lt;/span&gt;), function(df) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;sdlgs =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(df$CLASS ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &amp;quot;J&amp;quot;&lt;/span&gt;))))  &lt;span class=&quot;co&quot;&gt;# shows the OBSERVED # of J plants each year,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and some of these are not observation years and are omitted below&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;seedling_yr&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##    YEAR sdlgs
## 1  1994    13
## 2  1995    81
## 3  1996    16
## 4  1997     2
## 5  1998     0
## 6  1999     0
## 7  2000     0
## 8  2001     0
## 9  2002     0
## 10 2003     1
## 11 2004     0
## 12 2011   362
## 13 2012    57&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;seedlings for 9 cohorts based on census from each year&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;sdl94 =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;seedling_yr$sdlgs[(seedling_yr$YEAR ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1994&amp;quot;&lt;/span&gt;)] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;# this year had only 2 cohorts&lt;/span&gt;
sdl95 =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;seedling_yr$sdlgs[(seedling_yr$YEAR ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1995&amp;quot;&lt;/span&gt;)]
sdl11 =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;seedling_yr$sdlgs[(seedling_yr$YEAR ==&lt;span class=&quot;st&quot;&gt; &amp;quot;2011&amp;quot;&lt;/span&gt;)]
sdl12 =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;# in 2012 observed seedlings were 0&lt;/span&gt;

seedling_pick =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(sdl94, sdl95, sdl11, sdl12)
seedling_pick&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1]  58.5  81.0 362.0   0.0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;estimate seedlings as the mean of the 4 OBSERVED years: in the other years seedlings where not surveyed for&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(&lt;span class=&quot;dt&quot;&gt;seedlings =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(seedling_pick))  &lt;span class=&quot;co&quot;&gt;# = 125.375 seedlings/year on average&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 125.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;what’s the annual total seed production rate? add up all the seeds estimated to be produced in each year&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;seed_yr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(andre, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;YEAR&amp;quot;&lt;/span&gt;), function(df) &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;sumseeds =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(df$SEEDS))))
seed_yr&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##    YEAR sumseeds
## 1  1994     4434
## 2  1995    45834
## 3  1996    13302
## 4  1997    15426
## 5  1998    51976
## 6  1999    45030
## 7  2000    18913
## 8  2001    45576
## 9  2002     2597
## 10 2003     6257
## 11 2004        0
## 12 2011   158065
## 13 2012     3071&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;adjust so that 1994 has an estimate of all cohorts based on the observed 2 cohorts&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;seed_yr$sumseeds[(seedling_yr$YEAR ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1994&amp;quot;&lt;/span&gt;)] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(seed_yr$sumseeds[(seedling_yr$YEAR ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &amp;quot;1994&amp;quot;&lt;/span&gt;)] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;/&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;get mean seeds/year&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;avg_seeds_p_yr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(seed_yr$sumseeds)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;for each of the 4 years in which seedlings were observed, calculate an estimate of the transition rate from seed –&amp;gt; J&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(sdl.trans94 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sdl94/avg_seeds_p_yr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##  num 0.00179&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(sdl.trans95 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sdl95/avg_seeds_p_yr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##  num 0.00247&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(sdl.trans11 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sdl11/avg_seeds_p_yr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##  num 0.011&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;sdl.trans12 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;# no seedlings observed this year&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;looks at the options for transition rate&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(seedlingtrans_pick &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(sdl.trans94, sdl.trans95, sdl.trans11, sdl.trans12))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##  num [1:4] 0.00179 0.00247 0.01105 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pick the mean for this analysis&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;(seedlingtrans &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(seedlingtrans_pick))  &lt;span class=&quot;co&quot;&gt;# mean seedling transition rate  0.00305&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 0.003826&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now remove watered and caged plants from main dataset, these have different survival and transition rates. I included them thus far because we needed to get seed production estimates for them. Since they might have contributed to the observed juveniles&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;andre &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;andre[(andre$CAGED ==&lt;span class=&quot;st&quot;&gt; &amp;quot;N&amp;quot;&lt;/span&gt;), ]
andre &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;andre[(andre$WATERED ==&lt;span class=&quot;st&quot;&gt; &amp;quot;N&amp;quot;&lt;/span&gt;), ]
&lt;span class=&quot;kw&quot;&gt;head2&lt;/span&gt;(andre)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      PLANT_UNQ YEAR CLASS OBS_ID COHORT PLANT.NUM xDIAM_cm SEEDS_DC
## 1          A_1 1994    A1      1      A         1     12.0     26.7
## 2          A_3 1994    A1      3      A         3     11.0     26.7
## 3         B_13 1994    A1     20      B        13     17.0     26.7
## .            .    .     .      .      .         .        .        .
## 1675    6_772A 2012     J    608      6      772A      4.7      0.0
##      MEDIAN_INFL INFL_CLASS MAX_INFL OBS_INLF SEEDS_YR_INF CAGED WATERED
## 1              5          1      111       NA           NA     N       N
## 2              0          0        0       NA           NA     N       N
## 3              5          1      111       NA           NA     N       N
## .              .          .        .        .            .     .       .
## 1675           0          0        0        0            0     N       N
##      SEEDS
## 1    71.75
## 2     0.00
## 3    71.75
## .        .
## 1675  0.00&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;reduce datafile to include only PLANT_UNQ, YEAR, CLASS and SEEDS&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(andre)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## &amp;#39;data.frame&amp;#39;:    1221 obs. of  16 variables:
##  $ PLANT_UNQ   : Factor w/ 619 levels &amp;quot;1_701&amp;quot;,&amp;quot;1_702&amp;quot;,..: 462 464 473 477 482 487 474 479 483 463 ...
##  $ YEAR        : int  1994 1994 1994 1994 1994 1994 1994 1994 1994 1994 ...
##  $ CLASS       : Factor w/ 6 levels &amp;quot;A1&amp;quot;,&amp;quot;A2&amp;quot;,&amp;quot;A3&amp;quot;,..: 1 1 1 1 1 1 2 2 2 3 ...
##  $ OBS_ID      : int  1 3 20 24 11 16 21 26 12 2 ...
##  $ COHORT      : Factor w/ 18 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;,..: 10 10 11 11 11 11 11 11 11 10 ...
##  $ PLANT.NUM   : Factor w/ 460 levels &amp;quot;1&amp;quot;,&amp;quot;10&amp;quot;,&amp;quot;11&amp;quot;,..: 1 23 5 9 41 168 6 11 42 12 ...
##  $ xDIAM_cm    : num  12 11 17 12 18 12 23 22 29 32 ...
##  $ SEEDS_DC    : num  26.7 26.7 26.7 26.7 26.7 ...
##  $ MEDIAN_INFL : int  5 0 5 0 5 5 18 18 18 18 ...
##  $ INFL_CLASS  : int  1 0 1 0 1 1 2 2 2 2 ...
##  $ MAX_INFL    : int  111 0 111 0 111 111 123 123 123 123 ...
##  $ OBS_INLF    : int  NA NA NA NA NA NA NA NA NA NA ...
##  $ SEEDS_YR_INF: num  NA NA NA NA NA NA NA NA NA NA ...
##  $ CAGED       : Factor w/ 2 levels &amp;quot;N&amp;quot;,&amp;quot;Y&amp;quot;: 1 1 1 1 1 1 1 1 1 1 ...
##  $ WATERED     : Factor w/ 2 levels &amp;quot;N&amp;quot;,&amp;quot;Y&amp;quot;: 1 1 1 1 1 1 1 1 1 1 ...
##  $ SEEDS       : num  71.8 0 71.8 0 71.8 ...&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(andre[, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## &amp;#39;data.frame&amp;#39;:    1221 obs. of  4 variables:
##  $ PLANT_UNQ: Factor w/ 619 levels &amp;quot;1_701&amp;quot;,&amp;quot;1_702&amp;quot;,..: 462 464 473 477 482 487 474 479 483 463 ...
##  $ YEAR     : int  1994 1994 1994 1994 1994 1994 1994 1994 1994 1994 ...
##  $ CLASS    : Factor w/ 6 levels &amp;quot;A1&amp;quot;,&amp;quot;A2&amp;quot;,&amp;quot;A3&amp;quot;,..: 1 1 1 1 1 1 2 2 2 3 ...
##  $ SEEDS    : num  71.8 0 71.8 0 71.8 ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Go back to step 2.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Model Selection and Multi-Model Inference</title>
   <link href="http://www.noamross.net/blog/2013/2/20/model-selection-drug.html"/>
   <updated>2013-02-20T17:14:43-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2013/2/20/model-selection-drug</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;&lt;em&gt;At &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;D-RUG&lt;/a&gt; this week &lt;a href=&quot;rosehartman@gmail.com&quot;&gt;Rosemary Hartman&lt;/a&gt; presented a really useful case study in model selection, based on her work on frog habitat. Here is her code run through ‘knitr’. Original code and data are posted &lt;a href=&quot;https://gist.github.com/noamross/5001172&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;(yes, I am just doing this for the flying monkey)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Editor’s note: we’re giving away flying monkey dolls from our sponsor, &lt;a href=&quot;revolutionanalytics.com&quot;&gt;Revolution Analytics&lt;/a&gt;, to all our D-RUG presenters.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So, let’s say you want to find out where things are and why they are there. But there are a lot of reasons someone might be somewhere&lt;/p&gt;
&lt;p&gt;Let’s say these things are fishermen, And we aren’t sure what the reasons are yet.&lt;/p&gt;
&lt;p&gt;Start by making some good guesses. Maybe they all go to the big lakes. Maybe they all go to the lakes that CDFW stocks with fish. Maybe they go to the lakes with lots of frogs (not likely, but hey, why not try?) Once you have all your guesses, you need to figure out which one is right. There are two basic methods to use (or two that I have been exploring)&lt;/p&gt;
&lt;p&gt;Method #1: The kitchen sink&lt;/p&gt;
&lt;p&gt;load package “glmulti”&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(glmulti)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;load the data&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lakes.df2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;lakes.df2.csv&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;create a model that has all the predictor variables you would like to test&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;global.model &amp;lt;-&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;# number of fishermen&lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;                       &lt;/span&gt;stocked+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;# CDFW fish stocking y/n&lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;                       &lt;/span&gt;cows+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;# cattle grazing in area y/n&lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;                       &lt;/span&gt;herp.rich+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;# amphibian species richness&lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;                       &lt;/span&gt;fish.rich+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;# fish species richness&lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;                       &lt;/span&gt;visitors+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;co&quot;&gt;# total number of visitors&lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;                       &lt;/span&gt;logsize, &lt;span class=&quot;co&quot;&gt;# log of the area&lt;/span&gt;
                     &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt;lakes.df2) &lt;span class=&quot;co&quot;&gt;# data frame we got this from&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we will use the “glmulti” function to find the best model; this goes through every possible model and finds the best one.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fish.model &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glmulti&lt;/span&gt;(global.model, &lt;span class=&quot;co&quot;&gt;# use the model with built as a starting point&lt;/span&gt;
                      &lt;span class=&quot;dt&quot;&gt;level =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,  &lt;span class=&quot;co&quot;&gt;#  just look at main effects&lt;/span&gt;
                      &lt;span class=&quot;dt&quot;&gt;crit=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;aicc&amp;quot;&lt;/span&gt;) &lt;span class=&quot;co&quot;&gt;# use AICc because it works better than AIC for small sample sizes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Initialization...
## TASK: Exhaustive screening of candidate set.
## Fitting...
## 
## After 50 models:
## Best model: fish~1+cows+herp.rich+visitors+logsize
## Crit= 201.820969266156
## Mean crit= 355.848076682524&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-4.png&quot; /&gt;
&lt;/div&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Completed.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fish.model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## $name
## [1] &amp;quot;glmulti.analysis&amp;quot;
## 
## $method
## [1] &amp;quot;h&amp;quot;
## 
## $fitting
## [1] &amp;quot;glm&amp;quot;
## 
## $crit
## [1] &amp;quot;aicc&amp;quot;
## 
## $level
## [1] 1
## 
## $marginality
## [1] FALSE
## 
## $confsetsize
## [1] 100
## 
## $bestic
## [1] 201.8
## 
## $icvalues
##  [1] 201.8 203.4 204.7 205.0 206.4 206.5 206.5 208.3 225.4 227.7 230.6
## [12] 231.2 232.7 233.2 233.5 235.1 236.0 236.4 238.2 238.3 238.4 238.8
## [23] 240.7 240.9 258.2 259.3 260.2 261.0 261.1 261.7 262.0 262.6 265.1
## [34] 267.6 268.1 270.5 276.0 277.4 278.3 279.8 310.2 311.5 313.6 314.0
## [45] 315.4 316.2 319.0 319.7 500.6 502.0 502.5 503.0 503.8 504.8 511.3
## [56] 513.2 599.7 601.4 610.5 614.9 615.3 624.1 629.2 638.6
## 
## $bestmodel
## [1] &amp;quot;fish ~ 1 + cows + herp.rich + visitors + logsize&amp;quot;
## 
## $modelweights
##  [1] 4.485e-01 2.024e-01 1.075e-01 9.285e-02 4.464e-02 4.343e-02 4.310e-02
##  [8] 1.767e-02 3.399e-06 1.065e-06 2.477e-07 1.895e-07 8.849e-08 6.754e-08
## [15] 6.011e-08 2.630e-08 1.704e-08 1.404e-08 5.716e-09 5.287e-09 4.990e-09
## [22] 4.134e-09 1.618e-09 1.436e-09 2.540e-13 1.465e-13 9.334e-14 6.306e-14
## [29] 5.969e-14 4.361e-14 3.790e-14 2.885e-14 8.119e-15 2.304e-15 1.837e-15
## [36] 5.540e-16 3.542e-17 1.739e-17 1.096e-17 5.151e-18 1.300e-24 7.003e-25
## [43] 2.397e-25 1.957e-25 9.964e-26 6.413e-26 1.594e-26 1.123e-26 5.852e-66
## [50] 2.976e-66 2.260e-66 1.801e-66 1.220e-66 7.203e-67 2.847e-68 1.069e-68
## [57] 1.836e-87 7.713e-88 8.222e-90 9.195e-91 7.394e-91 9.070e-93 7.028e-94
## [64] 6.396e-96
## 
## $includeobjects
## [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That showed us the best model, now lets look at some of the others&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;weightable&lt;/span&gt;(fish.model)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##                                                                     model
## 1                        fish ~ 1 + cows + herp.rich + visitors + logsize
## 2            fish ~ 1 + cows + herp.rich + fish.rich + visitors + logsize
## 3              fish ~ 1 + stocked + cows + herp.rich + visitors + logsize
## 4                                    fish ~ 1 + cows + visitors + logsize
## 5                        fish ~ 1 + cows + fish.rich + visitors + logsize
## 6                          fish ~ 1 + stocked + cows + visitors + logsize
## 7  fish ~ 1 + stocked + cows + herp.rich + fish.rich + visitors + logsize
## 8              fish ~ 1 + stocked + cows + fish.rich + visitors + logsize
## 9                         fish ~ 1 + stocked + cows + herp.rich + logsize
## 10            fish ~ 1 + stocked + cows + herp.rich + fish.rich + logsize
## 11                                  fish ~ 1 + cows + herp.rich + logsize
## 12                                    fish ~ 1 + stocked + cows + logsize
## 13                                              fish ~ 1 + cows + logsize
## 14                      fish ~ 1 + cows + herp.rich + fish.rich + logsize
## 15                        fish ~ 1 + stocked + cows + fish.rich + logsize
## 16                                  fish ~ 1 + cows + fish.rich + logsize
## 17                              fish ~ 1 + herp.rich + visitors + logsize
## 18                                          fish ~ 1 + visitors + logsize
## 19                  fish ~ 1 + herp.rich + fish.rich + visitors + logsize
## 20                              fish ~ 1 + fish.rich + visitors + logsize
## 21                    fish ~ 1 + stocked + herp.rich + visitors + logsize
## 22                                fish ~ 1 + stocked + visitors + logsize
## 23        fish ~ 1 + stocked + herp.rich + fish.rich + visitors + logsize
## 24                    fish ~ 1 + stocked + fish.rich + visitors + logsize
## 25                     fish ~ 1 + cows + herp.rich + fish.rich + visitors
## 26                                 fish ~ 1 + cows + herp.rich + visitors
## 27           fish ~ 1 + stocked + cows + herp.rich + fish.rich + visitors
## 28                                 fish ~ 1 + cows + fish.rich + visitors
## 29                       fish ~ 1 + stocked + cows + herp.rich + visitors
## 30                                             fish ~ 1 + cows + visitors
## 31                       fish ~ 1 + stocked + cows + fish.rich + visitors
## 32                                   fish ~ 1 + stocked + cows + visitors
## 33                               fish ~ 1 + stocked + herp.rich + logsize
## 34                   fish ~ 1 + stocked + herp.rich + fish.rich + logsize
## 35                                           fish ~ 1 + stocked + logsize
## 36                               fish ~ 1 + stocked + fish.rich + logsize
## 37                                                     fish ~ 1 + logsize
## 38                                         fish ~ 1 + herp.rich + logsize
## 39                                         fish ~ 1 + fish.rich + logsize
## 40                             fish ~ 1 + herp.rich + fish.rich + logsize
## 41                      fish ~ 1 + stocked + cows + herp.rich + fish.rich
## 42                                  fish ~ 1 + stocked + cows + fish.rich
## 43                                            fish ~ 1 + cows + fish.rich
## 44                                fish ~ 1 + cows + herp.rich + fish.rich
## 45                                  fish ~ 1 + stocked + cows + herp.rich
## 46                                              fish ~ 1 + stocked + cows
## 47                                                        fish ~ 1 + cows
## 48                                            fish ~ 1 + cows + herp.rich
## 49                            fish ~ 1 + herp.rich + fish.rich + visitors
## 50                  fish ~ 1 + stocked + herp.rich + fish.rich + visitors
## 51                                        fish ~ 1 + herp.rich + visitors
## 52                                        fish ~ 1 + fish.rich + visitors
## 53                              fish ~ 1 + stocked + herp.rich + visitors
## 54                              fish ~ 1 + stocked + fish.rich + visitors
## 55                                                    fish ~ 1 + visitors
## 56                                          fish ~ 1 + stocked + visitors
## 57                             fish ~ 1 + stocked + herp.rich + fish.rich
## 58                                         fish ~ 1 + stocked + fish.rich
## 59                                         fish ~ 1 + stocked + herp.rich
## 60                                                   fish ~ 1 + fish.rich
## 61                                       fish ~ 1 + herp.rich + fish.rich
## 62                                                     fish ~ 1 + stocked
## 63                                                   fish ~ 1 + herp.rich
## 64                                                               fish ~ 1
##     aicc   weights
## 1  201.8 4.485e-01
## 2  203.4 2.024e-01
## 3  204.7 1.075e-01
## 4  205.0 9.285e-02
## 5  206.4 4.464e-02
## 6  206.5 4.343e-02
## 7  206.5 4.310e-02
## 8  208.3 1.767e-02
## 9  225.4 3.399e-06
## 10 227.7 1.065e-06
## 11 230.6 2.477e-07
## 12 231.2 1.895e-07
## 13 232.7 8.849e-08
## 14 233.2 6.754e-08
## 15 233.5 6.011e-08
## 16 235.1 2.630e-08
## 17 236.0 1.704e-08
## 18 236.4 1.404e-08
## 19 238.2 5.716e-09
## 20 238.3 5.287e-09
## 21 238.4 4.990e-09
## 22 238.8 4.134e-09
## 23 240.7 1.618e-09
## 24 240.9 1.436e-09
## 25 258.2 2.540e-13
## 26 259.3 1.465e-13
## 27 260.2 9.334e-14
## 28 261.0 6.306e-14
## 29 261.1 5.969e-14
## 30 261.7 4.361e-14
## 31 262.0 3.790e-14
## 32 262.6 2.885e-14
## 33 265.1 8.119e-15
## 34 267.6 2.304e-15
## 35 268.1 1.837e-15
## 36 270.5 5.540e-16
## 37 276.0 3.542e-17
## 38 277.4 1.739e-17
## 39 278.3 1.096e-17
## 40 279.8 5.151e-18
## 41 310.2 1.300e-24
## 42 311.5 7.003e-25
## 43 313.6 2.397e-25
## 44 314.0 1.957e-25
## 45 315.4 9.964e-26
## 46 316.2 6.413e-26
## 47 319.0 1.594e-26
## 48 319.7 1.123e-26
## 49 500.6 5.852e-66
## 50 502.0 2.976e-66
## 51 502.5 2.260e-66
## 52 503.0 1.801e-66
## 53 503.8 1.220e-66
## 54 504.8 7.203e-67
## 55 511.3 2.847e-68
## 56 513.2 1.069e-68
## 57 599.7 1.836e-87
## 58 601.4 7.713e-88
## 59 610.5 8.222e-90
## 60 614.9 9.195e-91
## 61 615.3 7.394e-91
## 62 624.1 9.070e-93
## 63 629.2 7.028e-94
## 64 638.6 6.396e-96&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So this is the best model&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herp.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(f)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Call:
## glm(formula = fish ~ 1 + cows + herp.rich + visitors + logsize, 
##     data = lakes.df2)
## 
## Deviance Residuals: 
##    Min      1Q  Median      3Q     Max  
## -4.744  -1.350  -0.243   0.986  10.483  
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&amp;gt;|t|)    
## (Intercept)  -0.5262     0.8914   -0.59    0.559    
## cowsy        -1.5214     1.2088   -1.26    0.217    
## herp.rich     0.7614     0.3219    2.37    0.024 *  
## visitors      0.1799     0.0277    6.49  1.8e-07 ***
## logsize       1.0498     1.1590    0.91    0.371    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## (Dispersion parameter for gaussian family taken to be 7.225)
## 
##     Null deviance: 791.60  on 39  degrees of freedom
## Residual deviance: 252.87  on 35  degrees of freedom
##   (79 observations deleted due to missingness)
## AIC: 199.3
## 
## Number of Fisher Scoring iterations: 2&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I hate trying to interpret models based on tables of coeficients. Let’s look at some graphs&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(visreg)
&lt;span class=&quot;kw&quot;&gt;visreg&lt;/span&gt;(f)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-71.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-72.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-73.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-74.png&quot; /&gt;&lt;/p&gt;
&lt;p&gt;But according to theory, models with AIC within two points of each other are basically equal. So what about the other models? Should we totally throw them out? Looking at the table of aicc weights, there is a pretty big jump between model 8 and model 9. So lets try averaging the top 8 models if we want to use this to make predictions, evaluate variable importance, etc.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(MuMIn)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;run the top 8 models&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herp.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fish.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)
f3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;stocked +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herp.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)
f4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)
f5 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fish.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)
f6 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;stocked +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)
f7 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;stocked +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herp.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fish.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)
f8 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(fish ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;stocked +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;cows +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;fish.rich +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;visitors +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logsize, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; lakes.df2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;average the models together&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;f.ave &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;model.avg&lt;/span&gt;(f, f2, f3, f4, f5, f6, f7, f8)
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(f.ave)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Call:
## model.avg.default(object = f, f2, f3, f4, f5, f6, f7, f8)
## 
## Component models:
##        df logLik  AICc Delta Weight
## 1346    6 -93.64 201.8  0.00   0.45
## 12346   7 -92.96 203.4  1.59   0.20
## 13456   7 -93.59 204.7  2.86   0.11
## 146     5 -96.60 205.0  3.15   0.09
## 1246    6 -95.95 206.4  4.61   0.04
## 1456    6 -95.97 206.5  4.67   0.04
## 123456  8 -92.93 206.5  4.68   0.04
## 12456   7 -95.39 208.3  6.47   0.02
## 
## Term codes:
##      cows fish.rich herp.rich   logsize   stocked  visitors 
##         1         2         3         4         5         6 
## 
## Model-averaged coefficients: 
##             Estimate Std. Error Adjusted SE z value Pr(&amp;gt;|z|)    
## (Intercept)  -0.5422     1.2363      1.2673    0.43    0.669    
## cowsy        -1.3751     1.2596      1.3019    1.06    0.291    
## herp.rich     0.7523     0.3274      0.3393    2.22    0.027 *  
## visitors      0.1841     0.0305      0.0316    5.83   &amp;lt;2e-16 ***
## logsize       0.7763     1.2689      1.3119    0.59    0.554    
## fish.rich     0.7784     0.7245      0.7512    1.04    0.300    
## stockedy     -0.7316     1.6009      1.6539    0.44    0.658    
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Full model-averaged coefficients (with shrinkage): 
##  (Intercept)  cowsy herp.rich visitors logsize fish.rich stockedy
##       -0.542 -1.375     0.603    0.184   0.776     0.240   -0.155
## 
## Relative variable importance:
##      cows   logsize  visitors herp.rich fish.rich   stocked 
##      1.00      1.00      1.00      0.80      0.31      0.21&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we know the relative variable importance, all of the avereged coefficents, etc, and can use the “predict” funciton to predict how many fishermen will be at the next lake. Graphing these are more difficult, so we’ll skip this for now. Ask me later if you really want to know.&lt;/p&gt;
&lt;p&gt;Model selection method #2: Use your brain We often can discard (or choose) some models a priori based on our knowlege of the system. It’s usually better to do it this way if you have several hundered possible combination of variables, or want to put in some interaction terms. I used this method for my frog data. load package bbmle&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(bbmle)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;load the data&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;fishlakes &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;fishlakes.csv&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Decide on which set of models you want to use. This is hard. A statistician who knows a lot more than I do told me so. I spent a long time playing around with different transformations, predictor variables, and combinations before I came up with a set of hypotheses (models) that I was happy with.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;m1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logveg +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bank.slope, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logveg +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;silt.total +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bank.slope, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;raca.basin +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logveg +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bank.slope, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logveg +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bank.slope, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m5 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logveg +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bank.slope +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;raca.basin, 
    &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m6 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;raca.basin *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m7 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herbacious +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;raca.basin +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;lakes.basin, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m8 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m9 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herbacious +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bank.slope +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logveg, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m10 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;raca.basin +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;herbacious +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;lakes.basin, 
    &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)
m11 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;bank.slope +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;logveg +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding:raca.basin, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s rank them via AICc&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;AICctab&lt;/span&gt;(m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11, &lt;span class=&quot;dt&quot;&gt;base =&lt;/span&gt; T, &lt;span class=&quot;dt&quot;&gt;weights =&lt;/span&gt; T, 
    &lt;span class=&quot;dt&quot;&gt;nobs =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(fishlakes))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##     AICc df dAICc weight 
## m11 35.9 5   0.0  0.79445
## m4  40.5 4   4.6  0.08072
## m9  40.9 5   5.1  0.06336
## m1  42.9 3   7.0  0.02424
## m5  43.0 5   7.1  0.02275
## m2  45.3 4   9.4  0.00734
## m3  45.3 4   9.4  0.00708
## m8  56.6 2  20.7  &amp;lt; 0.001
## m10 57.1 6  21.2  &amp;lt; 0.001
## m6  57.3 4  21.4  &amp;lt; 0.001
## m7  62.1 4  26.2  &amp;lt; 0.001&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Model m11 comes out ahead by quite a bit, but we’ll average the top two models, just to show you how its done.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;m.ave &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;model.avg&lt;/span&gt;(m4, m11)
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(m.ave)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Call:
## model.avg.default(object = m4, m11)
## 
## Component models:
##     df logLik  AICc Delta Weight
## 134  5 -12.09 35.84  0.00   0.91
## 123  4 -15.68 40.43  4.59   0.09
## 
## Term codes:
##               bank.slope            BUBO.breeding                   logveg 
##                        1                        2                        3 
## BUBO.breeding:raca.basin 
##                        4 
## 
## Model-averaged coefficients: 
##                           Estimate Std. Error Adjusted SE z value Pr(&amp;gt;|z|)
## (Intercept)                 -1.356      3.575       3.694    0.37    0.714
## bank.slope                 -19.935      8.233       8.503    2.34    0.019
## logveg                       1.783      1.366       1.409    1.26    0.206
## BUBO.breedingn:raca.basin   -0.965      0.973       1.006    0.96    0.337
## BUBO.breedingy:raca.basin    1.313      0.699       0.722    1.82    0.069
## BUBO.breedingy               2.077      1.055       1.090    1.91    0.057
##                            
## (Intercept)                
## bank.slope                *
## logveg                     
## BUBO.breedingn:raca.basin  
## BUBO.breedingy:raca.basin .
## BUBO.breedingy            .
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Full model-averaged coefficients (with shrinkage): 
##  (Intercept) bank.slope  logveg BUBO.breedingn:raca.basin
##       -1.356    -19.935   1.783                    -0.877
##  BUBO.breedingy:raca.basin BUBO.breedingy
##                      1.193          0.190
## 
## Relative variable importance:
##               bank.slope                   logveg BUBO.breeding:raca.basin 
##                     1.00                     1.00                     0.91 
##            BUBO.breeding 
##                     0.09&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# OK, there is a predictive model, but how good is it?&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s try cross-validation first. If this was a single model, we could try using the cv.glm function from the “boot” library like this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;boot&amp;quot;&lt;/span&gt;)
cost &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(r, &lt;span class=&quot;dt&quot;&gt;pi =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;) &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;abs&lt;/span&gt;(r -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;pi) &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt;)  ## cost function necessary for binomial data
m11.cv &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;cv.glm&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; fishlakes, m11, cost, &lt;span class=&quot;dt&quot;&gt;K =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;42&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;# use leave-one-out cross validation (can use K-fold cross validation for larger data sets)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now lets see what our error rate was:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;m11.cv$delta&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## [1] 0.2381 0.2438&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s not too bad.&lt;/p&gt;
&lt;p&gt;IF we want to check the error rate of an averaged model, you need to get more creative. I’ve written some code to do this for averaged models that only have two component models. It shouldn’t be too hard to adapt this for more models.&lt;/p&gt;
&lt;p&gt;function for leave one out cross validation of averaged models&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Cross &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(model1, model2, data, cost) {
    &lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(MuMIn)
    nobs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(data)
    model.ave &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;model.avg&lt;/span&gt;(model1, model2)
    values &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;nrow =&lt;/span&gt; nobs, &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)
    values[, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;data$treatment
    values[, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;predict&lt;/span&gt;(model.ave, &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;)
    CV =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
    for (i in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:nobs) {
        data2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;data[-i, ]  &lt;span class=&quot;co&quot;&gt;# leave out one observasion&lt;/span&gt;
        model12 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(model1$formula, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; model1$family, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data2)
        model22 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;glm&lt;/span&gt;(model2$formula, &lt;span class=&quot;dt&quot;&gt;family =&lt;/span&gt; model2$family, &lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; data2)
        model.ave2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;model.avg&lt;/span&gt;(model12, model22)
        values[i, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;predict&lt;/span&gt;(model.ave2, &lt;span class=&quot;dt&quot;&gt;newdata =&lt;/span&gt; data[i, ], &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;response&amp;quot;&lt;/span&gt;)
        values[i, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;round&lt;/span&gt;(values[i, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])
        if (values[i, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;values[i, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]) 
            (values[i, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) else values[i, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
        
    }
    cv =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;abs&lt;/span&gt;(values[, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;values[, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]) &amp;gt;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(cv)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the function on the component models&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;Cross&lt;/span&gt;(m11, m4, fishlakes, cost)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred

## [1] 0.2381&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That looks reasonable&lt;/p&gt;
&lt;p&gt;Another method to test model accurace is Area Under the Reciever Operater Curve (AUC) This is baisically a plot of true presences versus false presences in a presence-absense model.&lt;/p&gt;
&lt;p&gt;Load the library “pROC”&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(pROC)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make your reciever-operater curve&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;m.roc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;roc&lt;/span&gt;(fishlakes$treatment, &lt;span class=&quot;kw&quot;&gt;predict&lt;/span&gt;(m.ave, &lt;span class=&quot;dt&quot;&gt;backtransform =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(m.roc)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-22.png&quot; /&gt;
&lt;/div&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Call:
## roc.default(response = fishlakes$treatment, predictor = predict(m.ave,     backtransform = TRUE))
## 
## Data: predict(m.ave, backtransform = TRUE) in 24 controls (fishlakes$treatment 0) &amp;lt; 18 cases (fishlakes$treatment 1).
## Area under the curve: 0.949&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like a pretty good fit. Not too bad for the small size of the data set.&lt;/p&gt;
&lt;p&gt;And that’s all I got. Hopefully you will find it helpful. Let me know if there is anything else I have forgotton or done wrong.&lt;/p&gt;
&lt;p&gt;~ Rosemary&lt;/p&gt;
&lt;p&gt;rosehartman@gmail.com&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Mason Earles on interfacing R with the Forest Vegetation Simulator</title>
   <link href="http://www.noamross.net/blog/2013/2/13/mason-earles-on-interfacing-r-with-fvs.html"/>
   <updated>2013-02-13T15:06:42-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2013/2/13/mason-earles-on-interfacing-r-with-fvs</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;&lt;a href=&quot;http://jmearles.net/&quot;&gt;Mason Earles&lt;/a&gt; gave a great presentation this week at &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt; about linking R with the &lt;a href=&quot;http://www.fs.fed.us/fmsc/fvs/&quot;&gt;Forest Vegetation Simulator (FVS)&lt;/a&gt;. FVS is a model developed by the US Forest Service to simulate forest growth over time. It’s written in FORTRAN and has been around since the 1970s.&lt;/p&gt;
&lt;p&gt;FVS has recently gone open-source (its &lt;a href=&quot;http://code.google.com/p/open-fvs/&quot;&gt;repository is on google code&lt;/a&gt;), and now has &lt;a href=&quot;http://code.google.com/p/open-fvs/wiki/rFVS&quot;&gt;an alpha-level API which can be called from R&lt;/a&gt;. Mason showed us how he used the API along with some text manipulation functions to make the programs work together. Then he showed us how he used this to do some Monte Carlo simulations to look at the effects of stochastic fire and drought events.&lt;/p&gt;
&lt;p&gt;Here are Mason’s slides:&lt;/p&gt;
&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/16516293&quot; width=&quot;800&quot; height=&quot;600&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;</content>
 </entry>
 
 <entry>
   <title>Ryan Peek on using xts and ggplot for time-series data</title>
   <link href="http://www.noamross.net/blog/2013/2/6/xtsmarkdown.html"/>
   <updated>2013-02-06T15:44:25-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2013/2/6/xtsmarkdown</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;At &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt; today, &lt;a href=&quot;http://watershed.ucdavis.edu/people/ryan-peek&quot;&gt;Ryan Peek&lt;/a&gt; gave a presentation on how he takes data from his field instruments and visualizes it in R. Here are his notes. The original *.Rmd file and data can be found &lt;a href=&quot;https://gist.github.com/noamross/4727029&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;short-how-to-on-using-xts-and-ggplot-for-time-series-data&quot;&gt;SHORT HOW-TO ON USING XTS AND GGPLOT FOR TIME SERIES DATA&lt;/h2&gt;
&lt;p&gt;XTS is a very helpful package when working with time series data. I work with temperature and flow data frequently, so the ability to work with timeseries, and particularly to shift intervals (from 15 min to hourly or daily) can be very handy. Once data has been re-worked, &lt;strong&gt;ggplot2&lt;/strong&gt; is a great package to plot data of all types.&lt;/p&gt;
&lt;p&gt;First read in some data and format to POSIXlt. There are 2 types of time, POSIXlt and POSIXct. POSIXct is generally what ggplot uses and is based on seconds, while POSIXlt can be re-classed into individual components quite easily, but year zero is calculated from 1900 (so 2011 would be year 111).&lt;/p&gt;
&lt;h3 id=&quot;read-in-some-data&quot;&gt;Read in some data&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## READ IN FILE
inputfile &amp;lt;-&lt;span class=&quot;st&quot;&gt; &amp;quot;Air_Water_loggers_15min_example.csv&amp;quot;&lt;/span&gt;
file &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(inputfile, &lt;span class=&quot;dt&quot;&gt;stringsAsFactors =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
## FORMAT TIME COLUMN TO POSIXlt
file$time15 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;strptime&lt;/span&gt;(file$time15, &lt;span class=&quot;dt&quot;&gt;format =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;%m/%d/%Y %H:%M&amp;quot;&lt;/span&gt;)
## ROUND TO NEAREST HOUR
file$time15hr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;round&lt;/span&gt;(file$time15, &lt;span class=&quot;st&quot;&gt;&amp;quot;hour&amp;quot;&lt;/span&gt;)

## TO VIEW TIME CLASSES USE &amp;#39;str&amp;#39;
&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;unclass&lt;/span&gt;(file$time15))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## List of 9
##  $ sec  : num [1:6096] 0 0 0 0 0 0 0 0 0 0 ...
##  $ min  : int [1:6096] 15 30 45 0 15 30 45 0 15 30 ...
##  $ hour : int [1:6096] 0 0 0 1 1 1 1 2 2 2 ...
##  $ mday : int [1:6096] 30 30 30 30 30 30 30 30 30 30 ...
##  $ mon  : int [1:6096] 3 3 3 3 3 3 3 3 3 3 ...
##  $ year : int [1:6096] 112 112 112 112 112 112 112 112 112 112 ...
##  $ wday : int [1:6096] 1 1 1 1 1 1 1 1 1 1 ...
##  $ yday : int [1:6096] 120 120 120 120 120 120 120 120 120 120 ...
##  $ isdst: int [1:6096] 1 1 1 1 1 1 1 1 1 1 ...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that the &lt;strong&gt;$time15&lt;/strong&gt; column classes exist for all values even though data only exists to minutes. Also years are “112” and “111” instead of 2011 and 2012. Month and hour (24 hour clock) start at zero.&lt;/p&gt;
&lt;h3 id=&quot;load-the-xts-package-and-make-into-an-xts-object&quot;&gt;Load the XTS package and make into an xts object&lt;/h3&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(xts)
## MAKE XTS

## make XTS format using time column for the data columns of interest
df.xts &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xts&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; file[, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;)], &lt;span class=&quot;dt&quot;&gt;order.by =&lt;/span&gt; file[, &lt;span class=&quot;st&quot;&gt;&amp;quot;time15&amp;quot;&lt;/span&gt;])
&lt;span class=&quot;kw&quot;&gt;head&lt;/span&gt;(df.xts)  &lt;span class=&quot;co&quot;&gt;# notice the row names are now the &amp;#39;time15&amp;#39; column&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##                     RUB_sol MFA_sol NFA_sol NFY_sol SFY_baro_air
## 2012-04-30 00:15:00   11.93   12.69   11.26    8.19         9.43
## 2012-04-30 00:30:00   11.88   12.63   11.28    8.18         9.25
## 2012-04-30 00:45:00   11.83   12.57   11.26    8.21         9.03
## 2012-04-30 01:00:00   11.78   12.51   11.23    8.22         8.82
## 2012-04-30 01:15:00   11.73   12.46   11.17    8.23         8.60
## 2012-04-30 01:30:00   11.68   12.40   11.15    8.24         8.42
##                     NFA_baro_air
## 2012-04-30 00:15:00        13.13
## 2012-04-30 00:30:00        12.93
## 2012-04-30 00:45:00        12.74
## 2012-04-30 01:00:00        12.61
## 2012-04-30 01:15:00        12.46
## 2012-04-30 01:30:00        12.34&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that the row names exist as the time series data from the &lt;em&gt;time15’&lt;/em&gt; column.&lt;/p&gt;
&lt;h4 id=&quot;then-run-any-function-along-a-given-time-interval-using-xts-functions&quot;&gt;Then run any function along a given time interval using XTS functions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;apply.daily - makes daily data&lt;/li&gt;
&lt;li&gt;apply.monthly - monthly&lt;/li&gt;
&lt;li&gt;period.apply(data,endpoints(data,on=“interval”,1)) # Using interval of your choice&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When using Rstudio, you can hit tab at any time to view potential options for a given command or function. Try &lt;em&gt;apply&lt;/em&gt;+TAB.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# MAKE DAILY AVG, MEAN, AND MAX&lt;/span&gt;
dAvg &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;apply.daily&lt;/span&gt;(df.xts, function(x) &lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(x, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, mean))  &lt;span class=&quot;co&quot;&gt;# daily mean&lt;/span&gt;
dMin &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;apply.daily&lt;/span&gt;(df.xts, function(x) &lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(x, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, min))  &lt;span class=&quot;co&quot;&gt;# daily min&lt;/span&gt;
dMax &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;apply.daily&lt;/span&gt;(df.xts, function(x) &lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(x, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, max))  &lt;span class=&quot;co&quot;&gt;# daily max&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;# OR MAKE HOURLY (OR PREFERRED TIME INTERVAL)&lt;/span&gt;
hrAvg &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;period.apply&lt;/span&gt;(df.xts, &lt;span class=&quot;kw&quot;&gt;endpoints&lt;/span&gt;(df.xts, &lt;span class=&quot;dt&quot;&gt;on =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;hours&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), function(x) &lt;span class=&quot;kw&quot;&gt;apply&lt;/span&gt;(x, 
    &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, mean))  &lt;span class=&quot;co&quot;&gt;# avg over 1 hour period&lt;/span&gt;

&lt;span class=&quot;co&quot;&gt;# RENAME COLUMN NAMES TO MAKE RECOMBINING EASIER&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dAvg) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sub&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;_sol$&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;.avg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dAvg))
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dAvg) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sub&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;_air$&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;.avg&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dAvg))
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMax) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sub&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;_sol$&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;.max&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMax))
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMax) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sub&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;_air$&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;.max&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMax))
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMin) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sub&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;_sol$&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;.min&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMin))
&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMin) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sub&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;_air$&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;.min&amp;quot;&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(dMin))

Day &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;datetime =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;index&lt;/span&gt;(dAvg), dAvg[, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;)], dMax[, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;)], dMin[, 
    &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;)], &lt;span class=&quot;dt&quot;&gt;row.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# WRITE NEW FILE TO A CSV write.csv(Hour,&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# file=&amp;#39;Airwatertemps_hourly_example.csv&amp;#39;, row.names=FALSE)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When making a dataframe from an xts object, important to note that you must use &lt;em&gt;index()&lt;/em&gt; instead of row.names to pull the time stamp/date into a new dataframe.&lt;/p&gt;
&lt;h4 id=&quot;make-a-ggplot-of-daily-temperatures-showing-a-max-and-min-using-geom_ribbon&quot;&gt;Make a ggplot of daily temperatures showing a max and min using &lt;em&gt;geom_ribbon&lt;/em&gt;&lt;/h4&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(scales)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This plot is complex, and code is provided to view as you like. Main components are: * &lt;strong&gt;ggplot&lt;/strong&gt;: this sets the data and x acess * &lt;strong&gt;geom_line&lt;/strong&gt;: this is to plot lines, custom colors are set by including color &lt;em&gt;within&lt;/em&gt; the aes call * &lt;strong&gt;geom_ribbon&lt;/strong&gt;: this is to plot the filled max and min ribbon in the background *&lt;strong&gt;scale_color/fill_manual&lt;/strong&gt;: this allows you to define custom colors for each geom, must match exactly with the color=“&amp;quot; or fill=”&amp;quot;&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;RUB &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(Day, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; datetime)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; NFA_baro.avg, &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;AIR&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;size =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;linetype =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_ribbon&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;ymax =&lt;/span&gt; NFA_baro.max, 
    &lt;span class=&quot;dt&quot;&gt;ymin =&lt;/span&gt; NFA_baro.min, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;AIR Max/Min&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;colour =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;darkorange&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;linetype =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_ribbon&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;ymax =&lt;/span&gt; RUB.max, &lt;span class=&quot;dt&quot;&gt;ymin =&lt;/span&gt; RUB.min, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;RUB Max/Min&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;colour =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;darkgreen&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;linetype =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; RUB.avg, 
    &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;RUB-Water&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;size =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.9&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;linetype =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_ribbon&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(datetime, 
    &lt;span class=&quot;dt&quot;&gt;ymax =&lt;/span&gt; MFA.max, &lt;span class=&quot;dt&quot;&gt;ymin =&lt;/span&gt; MFA.min, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;MFA Max/Min&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;colour =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;gray40&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;linetype =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; MFA.avg, &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;MFA-Water&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;size =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.9&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;linetype =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Daily Temperature ( &amp;quot;&lt;/span&gt;, 
    degree, &lt;span class=&quot;st&quot;&gt;&amp;quot;C)&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;))) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_x_datetime&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.POSIXct&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;2012-05-10 12:00&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;kw&quot;&gt;as.POSIXct&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;2012-05-30 12:00&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;dt&quot;&gt;labels =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;date_format&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;%b-%d&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;date_breaks&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;7 days&amp;quot;&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;by =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;42&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;labels =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
        &lt;span class=&quot;dv&quot;&gt;42&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;by =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;labs&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;title =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Daily Air and Water Temperature: Rubicon&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_color_manual&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Mean&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;AIR&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;RUB-Water&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;MFA-Water&amp;quot;&lt;/span&gt;), 
        &lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;RUB-Water&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt; =&lt;span class=&quot;st&quot;&gt; &amp;quot;darkgreen&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;MFA-Water&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt; =&lt;span class=&quot;st&quot;&gt; &amp;quot;darkmagenta&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;AIR =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_fill_manual&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot; Max/Min&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;AIR Max/Min&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;RUB Max/Min&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;MFA Max/Min&amp;quot;&lt;/span&gt;), 
        &lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;AIR Max/Min&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt; =&lt;span class=&quot;st&quot;&gt; &amp;quot;gold&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;MFA Max/Min&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt; =&lt;span class=&quot;st&quot;&gt; &amp;quot;darkmagenta&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;dt&quot;&gt;RUB Max/Min&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;`&lt;/span&gt; =&lt;span class=&quot;st&quot;&gt; &amp;quot;darkolivegreen3&amp;quot;&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;legend.direction =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;horizontal&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;legend.position =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;bottom&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;legend.key =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), 
        &lt;span class=&quot;dt&quot;&gt;legend.background =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_rect&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;white&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;colour =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;gray30&amp;quot;&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;guides&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;guide_legend&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;keywidth =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.9&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;keyheight =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;))

RUB&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/unnamed-chunk-1.png&quot; /&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Steve Culman on the `plyr` Package</title>
   <link href="http://www.noamross.net/blog/2013/1/17/steve-culman-on-plyr.html"/>
   <updated>2013-01-17T10:11:48-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2013/1/17/steve-culman-on-plyr</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;At &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt; yesteray, &lt;a href=&quot;http://ucanr.edu/sites/Jackson_Lab/Steve_Culman_519/&quot;&gt;Steve Culman&lt;/a&gt; gave us an introduction to the &lt;code&gt;plyr&lt;/code&gt; package and how to use it to manipulate data. Here’s his presentation, and the accompanying demonstration script:&lt;/p&gt;
&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/16043843&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&quot; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt; &lt;/iframe&gt; 

&lt;script src=&quot;https://gist.github.com/4558068.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Steve’s talk is based on &lt;a href=&quot;http://www.jstatsoft.org/v40/i01/paper&quot;&gt;this paper by Hadley Wickham in the Journal of Statistical Software&lt;/a&gt;. A lot of useful related resources are at &lt;a href=&quot;http://plyr.had.co.nz/&quot;&gt;Hadley Wickham’s &lt;code&gt;plyr&lt;/code&gt; website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We had a quick exchange about using &lt;code&gt;plyr&lt;/code&gt; for parallel processing. More on that was discussed on the listserv &lt;a href=&quot;https://groups.google.com/forum/#!msg/davis-rug/VLIXz5i3vZI/lWVNpRnr930J&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Don't R alone! A guide to tools for collaboration with R</title>
   <link href="http://www.noamross.net/blog/2013/1/7/collaborating-with-r.html"/>
   <updated>2013-01-07T09:10:36-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2013/1/7/collaborating-with-r</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;This a brief guide to using R in collaborative, social ways. R is a powerful open-source programming language for data analysis, statistics, and visualization, but much of its power derives from a large, engaged &lt;em&gt;community&lt;/em&gt; of users. This is an introduction to tools for engaging the community to improve your R code and collaborate with others.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;(Am I missing anything? Let me know in the &lt;a href=&quot;#disqus_thread&quot;&gt;comments&lt;/a&gt; and I’ll update this guide.)&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;topics&quot;&gt;Topics&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#asking-questions-via-e-mail-listservs-and-bulletin-boards&quot;&gt;Asking questions via e-mail, listservs and bulletin boards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sharing-r-scripts-with-gist.github.com&quot;&gt;Sharing R scripts with &lt;code&gt;gist.github.com&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#sharing-reports-of-code-and-results-with-knitr&quot;&gt;Sharing reports of code and results with &lt;code&gt;knitr&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#collaborating-and-version-control&quot;&gt;Collaborating and version control&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#dropbox&quot;&gt;Dropbox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#git-and-github&quot;&gt;Git and Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#package-creation-and-sharing&quot;&gt;Package creation and sharing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#rstudio&quot;&gt;RStudio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#interactive-r-with-shiny&quot;&gt;Interactive R with Shiny&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#upcoming-tools-for-real-time-interactive-and-collaborative-programming&quot;&gt;Upcoming tools for real-time, interactive and collaborative programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#engaging-with-r-communities-online&quot;&gt;Engaging with R Communities Online&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;asking-questions-via-e-mail-listservs-and-bulletin-boards&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Asking questions via e-mail, listservs and bulletin boards&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of the best ways to tap into the knowledge of the R community is to use the listservs and websites devoted to answering questions about R. There are a large number of these online forums. Some of the most popular are the &lt;a href=&quot;https://stat.ethz.ch/mailman/listinfo/r-help&quot;&gt;R-help&lt;/a&gt; listserv, the progamming Q&amp;amp;A site &lt;a href=&quot;http://stackoverflow.com/questions/tagged/r&quot;&gt;Stack Overflow&lt;/a&gt;, and the statistics Q&amp;amp;A site &lt;a href=&quot;http://stats.stackexchange.com/&quot;&gt;Cross-Validated&lt;/a&gt;. (Be sure to look at the [R] tags on these two sites.) There are also &lt;a href=&quot;http://www.r-project.org/mail.html&quot;&gt;specialty listservs&lt;/a&gt; like &lt;a href=&quot;https://stat.ethz.ch/mailman/listinfo/r-sig-ecology&quot;&gt;R-sig-ecology&lt;/a&gt;, or &lt;a href=&quot;http://blog.revolutionanalytics.com/local-r-groups.html&quot;&gt;local forums&lt;/a&gt; like the &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/davis-rug&quot;&gt;Davis R Users’ Group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These forums are great places to get help with your R questions. To get good answers, though its important to know how to ask good questions. Key to a good question is a &lt;strong&gt;minimal reproducible example&lt;/strong&gt; (MRE). An MRE is a bit of code that, when copy-and-pasted from an e-mail into R, will reproduce the results or problem you are asking about. Here is a &lt;a href=&quot;http://stackoverflow.com/a/5963610/1757441&quot;&gt;great guide to producing a reproducible example&lt;/a&gt;. A few important components:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;a minimal dataset, necessary to reproduce the error&lt;/li&gt;
&lt;li&gt;the minimal runnable code necessary to reproduce the error, which can be run on the given dataset.&lt;/li&gt;
&lt;li&gt;the necessary information on the used packages, R version and system it is run on.&lt;/li&gt;
&lt;li&gt;in case of random processes, a seed (set by set.seed()) for reproducibility&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;One useful trick for producing an MRE is the &lt;code&gt;dput()&lt;/code&gt; command. &lt;code&gt;dput&lt;/code&gt; takes any object in R and prints it in a form that can be copy-and-pasted. For instance, say you have a data frame like this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
df&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##   a  b
## 1 1  6
## 2 2  7
## 3 3  8
## 4 4  9
## 5 5 10&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running &lt;code&gt;dput&lt;/code&gt; creates text that can be entered into R make an identical structure&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;dput&lt;/span&gt;(df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## structure(list(a = 1:5, b = 6:10), .Names = c(&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;), row.names = c(NA, 
## -5L), class = &amp;quot;data.frame&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can insert this data into your MRE by typing:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;structure&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;list&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;.Names =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;), 
  &lt;span class=&quot;dt&quot;&gt;row.names =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;ot&quot;&gt;NA&lt;/span&gt;, -5L), &lt;span class=&quot;dt&quot;&gt;class =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;data.frame&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your real data is probably considerably larger and more complex, and could be in the form of a data frame, list, or any other number of objects. Try running &lt;code&gt;dput(mtcars)&lt;/code&gt; to see the results with a larger data set. It’s often shorter to use &lt;code&gt;dput&lt;/code&gt; on cleaned-up, manipulated data than including a lot of data-manipulation steps in your MRE. If your dataset is large, simply use &lt;code&gt;dput(head(mtcars))&lt;/code&gt; to share only the first few rows. &lt;a href=&quot;http://stackoverflow.com/questions/12647159/turning-a-data-frame-into-a-single-row&quot;&gt;Here&lt;/a&gt; is an example of how using this method yields useful responses.&lt;/p&gt;
&lt;p&gt;Similarly, it is easy to share more information about your set up using the &lt;code&gt;sessionInfo()&lt;/code&gt; function. It returns information about your R version, your platform, base, and loaded packages, all of which are really helpful for troubleshooting purposes. Simply copy and paste the output from the function alongside your question.&lt;/p&gt;
&lt;h2 id=&quot;sharing-r-scripts-with-gist.github.com&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Sharing R scripts with &lt;code&gt;gist.github.com&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Sometimes you want to share an R code that you’ve written. Creating a &lt;strong&gt;gist&lt;/strong&gt; is a great way to do so. Gists are have several advantages over sharing over e-mail:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can share the code just by sending a URL&lt;/li&gt;
&lt;li&gt;Syntax highlighting makes the code easier to read&lt;/li&gt;
&lt;li&gt;You can update the code and it will remember previous versions&lt;/li&gt;
&lt;li&gt;The gist can be public or private&lt;/li&gt;
&lt;li&gt;People can comment on the gist and have a conversation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To post your code as a gist, go to &lt;a href=&quot;http://gist.github.com&quot;&gt;http://gist.github.com&lt;/a&gt;, and paste your code, and put in a brief description. You’ll get an easily sharable web page like this:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gistexample.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Signing up for the website is not neccessary, but it is needed if you want to revise your gist in the future.&lt;/p&gt;
&lt;p&gt;A gist can include multiple files, so sometimes its useful for to include both an R script and your source data file in one gist.&lt;/p&gt;
&lt;h2 id=&quot;sharing-reports-of-code-and-results-with-knitr&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Sharing reports of code and results with &lt;code&gt;knitr&lt;/code&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Often you want to share the results of analyses you perform in R with colleagues or the broader online community. A good way to do this is with a &lt;em&gt;report&lt;/em&gt; - a document of text, code, and results (often graphs). &lt;code&gt;knitr&lt;/code&gt; is an R package for making reports that can be printed or shared on the web.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;knitr&lt;/code&gt; takes documents that are a mixture of text and code, extracts the code and runs it, and then inserts the code and results back in. This has several advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you change your code, all you have to do is re-run knitr, rather than run the code, copy-and-paste results, and then do re-formatting&lt;/li&gt;
&lt;li&gt;Colleagues who read your report can see exactly the steps you took to reach your results, and reproduce them if they want.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;knitr&lt;/code&gt; can work with a variety of different document types: HTML, LaTeX, etc., but most commonly people use &lt;strong&gt;markdown&lt;/strong&gt;, which is a simple syntax designed for producing web pages. Here’s what a short markdown document using &lt;code&gt;knitr&lt;/code&gt; looks like:&lt;/p&gt;
&lt;pre class=&quot;sourceCode markdown&quot;&gt;&lt;code&gt;Title
=====

This is an example document.  Here&amp;#39;s a summary of some data:

```{r}
summary(cars)
```

Here is a plot of that data:

```{r}
plot(cars)
```&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you save this file as &lt;code&gt;example.Rmd&lt;/code&gt; (R-markdown), and run&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(knitr)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(markdown)
&lt;span class=&quot;kw&quot;&gt;knit&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;example.Rmd&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;markdownToHTML&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;example.md&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You get an HTML file called &lt;code&gt;example.HTML&lt;/code&gt;. Open it in a browser and it looks like this:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/knitexample.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, your document has both your writing, code, and results, formatted in an easy-to-read way. You can e-mail these documents or post them online for easy sharing.&lt;/p&gt;
&lt;h2 id=&quot;collaborating-and-version-control&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Collaborating and version control&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are working with a team on a project that involves multiple R analyses and data sets, you’ll want a more robust system for collaboration that just e-mailing files around. Here are two options.&lt;/p&gt;
&lt;h3 id=&quot;dropbox&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Dropbox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;An easy way to share your R files and maintain version control is to use &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;. Dropbox is a service that syncs files across computers. If you and your collaborators share a Dropbox folder, changes will automatically stay up-to-date across all your computers. Importantly, Dropbox keeps previous versions of files and lets you revert to past versions, so you can go back if something in your code breaks:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/dropboxexample.png&quot; /&gt;
&lt;/div&gt;
&lt;h3 id=&quot;git-and-github&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Git and Github&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt; is a version-control system widely used by programmers. It’s much more powerful than Dropbox version control, with features that include&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fine-scale control of what files and folders change with each update&lt;/li&gt;
&lt;li&gt;Log messages to remind you of what changes were important with each version&lt;/li&gt;
&lt;li&gt;Creating parallel versions (branches) of projects&lt;/li&gt;
&lt;li&gt;Comparing different versions of files and folders&lt;/li&gt;
&lt;li&gt;Merging changes made on different branches or by different users.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Git has a bit of a learning curve, but if you do a lot of programming work in R or other languages, it is well worth it. To get started, see the documentation &lt;a href=&quot;https://github.com/hadley/devtools/wiki&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using Git alongside a web service like &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; or &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt; lets you collaborate on projects in a very powerful way. Collaborators can work on code simultaneously, merge changes and resolve conflicts through the website. If you choose to make the project &lt;strong&gt;open-source&lt;/strong&gt;, your code can be public and you can tap into the expertise of many other collaborators.&lt;/p&gt;
&lt;p&gt;The R package &lt;code&gt;devtools&lt;/code&gt; lets you download and run files directly from these websites.&lt;/p&gt;
&lt;h2 id=&quot;package-creation-and-sharing&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Package creation and sharing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;One of the great strengths of R is the collection of over 4,000 user created packages. You might want to create a package if you have developed a new method in R, or if you have a collection of helpful functions that would be useful to share. If you write a scientific publication using R for analysis, an accompanying package is a good way to make the data and methods accessible for other researchers to reproduce and build upon.&lt;/p&gt;
&lt;p&gt;Hadley Wickham has written a great guide to developing R packages, which can be found &lt;a href=&quot;https://github.com/hadley/devtools/wiki&quot;&gt;here&lt;/a&gt;. It accompanies his package &lt;code&gt;devtools&lt;/code&gt; which provides many useful tools for package development.&lt;/p&gt;
&lt;h2 id=&quot;rstudio&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;RStudio&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you want use the tools described above, it is helpful to use software that integrates them into your workflow. &lt;a href=&quot;http://www.rstudio.com/&quot;&gt;RStudio&lt;/a&gt; is a popular &lt;em&gt;integrated development environment&lt;/em&gt; (IDE). An IDE makes working in R easier by putting the R console, a text editor, file browser, help files, graphics and many other tools together into a cohesive interface. RStudio also integrates many of the collaborative tools described above. It is available for Mac, Windows, and Linux.&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/rstudio-windows.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;If you use Rstudio, &lt;code&gt;knitr&lt;/code&gt; is automated for you. Just hit the “Knit HTML” button once you have written your R-markdown document, and it will generate the web page and show a preview:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/knitbutton.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;An additional benefit of using &lt;code&gt;knitr&lt;/code&gt; from Rstudio is that it will give you the option of automatically uploading the HTML document to their server at &lt;a href=&quot;http://rpubs.com/&quot;&gt;http://rpubs.com/&lt;/a&gt; so you can share it with anyone. Just hit the “Publish” in the preview window:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/publish.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Like gists, documents at &lt;a href=&quot;http://rpubs.com/&quot;&gt;http://rpubs.com/&lt;/a&gt; can be updated and easily shared and accept comments.&lt;/p&gt;
&lt;p&gt;Git is also built into the Rstudio interface. Saving a version of your software is as easy as clicking a button. This makes the git learning curve a little easier:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gitexample.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Finally, the latest version of Rstudio has package creation tools based on the &lt;code&gt;devtools&lt;/code&gt; package, including tools for testing and documenting packages. Like its Git interface, RStudio’s package development tools make the process of package creation more intuitive:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/buildexample.png&quot; /&gt;
&lt;/div&gt;
&lt;h2 id=&quot;interactive-r-with-shiny&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Interactive R with Shiny&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A relatively new and exciting way to use R to share data analysis is &lt;a href=&quot;http://www.rstudio.com/shiny/&quot;&gt;Shiny&lt;/a&gt;. Shiny is an R package that lets you create &lt;em&gt;interactive&lt;/em&gt; web pages that let users explore your data and analysis. Here’s an example. Click on it to go to the interactive version:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.rstudio.com/shiny/&quot;&gt;&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/shinyexample.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;upcoming-tools-for-real-time-interactive-and-collaborative-programming&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Upcoming tools for real-time, interactive and collaborative programming&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the next year or so we will likely see tools for live, interactive coding that allow you to collaborate in real time on R scripts the way Google Docs allows such collaboration with documents. &lt;a href=&quot;https://www.stypi.com&quot;&gt;https://www.stypi.com&lt;/a&gt; is one such tool, though it doesn’t have R-specific options yet. Yihui Xie, the creator of &lt;code&gt;knitr&lt;/code&gt; has created an &lt;a href=&quot;http://glimmer.rstudio.com/yihui/knitr/&quot;&gt;interactive notebook&lt;/a&gt; based on Shiny and &lt;code&gt;knitr&lt;/code&gt; which runs your knitr/R code on the web, but it is just a proof-of-concept. Look out for new developments!&lt;/p&gt;
&lt;h2 id=&quot;engaging-with-r-communities-online&quot;&gt;&lt;a href=&quot;#TOC&quot;&gt;Engaging with R Communities Online&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you are looking for peers and collaborators in your work with R, there are a lot of places online to do so.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Listservs:&lt;/strong&gt;In addition the listservs mentioned above, there are many &lt;a href=&quot;http://www.r-project.org/mail.html&quot;&gt;specialty listservs&lt;/a&gt; for specific platforms and applications, and &lt;a href=&quot;http://blog.revolutionanalytics.com/local-r-groups.html&quot;&gt;local user groups&lt;/a&gt;. Many packages have listservs associated with them, too, where users can ask question and get information about the latest updates. If you are learning how to use a new package it’s helpful to sign up for these.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Blogs&lt;/strong&gt;: &lt;a href=&quot;r-bloggers.com&quot;&gt;R-bloggers&lt;/a&gt; is a great website that aggregates many blogs by people who use R. Blogs range from people writing &lt;em&gt;about&lt;/em&gt; R (e.g., tutorials), to people blogging &lt;em&gt;with&lt;/em&gt; R (e.g., &lt;code&gt;knitr&lt;/code&gt; documents of their latest analyses). Following the site feed will help you discover other people doing work similar to yours.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Twitter&lt;/strong&gt;: If you’re on twitter, the &lt;a href=&quot;https://twitter.com/search?q=%23rstats&quot;&gt;#rstats&lt;/a&gt; hashtag is commonly used to discuss R, and you can often get answers to short questions very quickly. Many of developers of R packages and software are on twitter, so you can get information straight from the source.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Code Hosting Sites&lt;/strong&gt;: Many R package developers host their projects on websites like &lt;a href=&quot;https://github.com/languages/R&quot;&gt;Github&lt;/a&gt; and &lt;a href=&quot;http://r-forge.r-project.org/&quot;&gt;R-forge&lt;/a&gt;. These sites have mechanisms for users to report bugs, make feature requests, and often find more information than is available in the documentation of a specific package. You can often find the site used by a developer by looking at it’s entry on &lt;a href=&quot;http://cran.r-project.org/web/packages/available_packages_by_name.html&quot;&gt;CRAN&lt;/a&gt; or the package revewing site &lt;a href=&quot;http://crantastic.org/&quot;&gt;crantastic&lt;/a&gt;.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Lauren Yamane on Matrix Population Models in R</title>
   <link href="http://www.noamross.net/blog/2012/11/30/lauren-yamane-on-matrix-population-models.html"/>
   <updated>2012-11-30T10:11:17-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/30/lauren-yamane-on-matrix-population-models</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;Last week in &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt;, Lauren Yamane showed us how she created and analyzed a stochastic age-structured population in R. Her examples are below. Her original scripts can be found as &lt;code&gt;*.Rmd&lt;/code&gt; files &lt;a href=&quot;https://gist.github.com/4197507&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A note to UC Davis students: This topic and others will be covered by Marissa Baskett and Sebastian Schreiber in their course this winter, &lt;em&gt;Computational methods in population biology&lt;/em&gt; (ECL298)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;a-discrete-time-age-structured-model-of-a-salmon-population-semelparous-that-can-live-to-age-5-with-fishing-and-environmental-stochasticity&quot;&gt;A discrete time, age-structured model of a salmon population (semelparous) that can live to age 5, with fishing and environmental stochasticity&lt;/h2&gt;
&lt;p&gt;Parameter values&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#alpha for Beverton-Holt stock-recruitment curve&lt;/span&gt;
b =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.00017&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#beta for Beverton-Holt&lt;/span&gt;
tf =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2000&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#number of time steps&lt;/span&gt;
N0 =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#initial population vector for 5 age classes&lt;/span&gt;
s =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.28&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#survival rate with fishing&lt;/span&gt;
e =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#fraction of age 3 fish that spawn early (age 4 is mean spawner age)&lt;/span&gt;
l =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#fraction of age 4 fish that spawn late as age 5 fish&lt;/span&gt;
sx =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(s, s, (s *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e)), (s *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(l)))  &lt;span class=&quot;co&quot;&gt;#survival vector for all ages with fishing, spawners die after spawning&lt;/span&gt;
t &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#start off at time=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make a function for the age-structured matrix&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Make a function for the age-structured matrix with fishing&lt;/span&gt;
AgeStructMatrix_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(sx, a, b, tf, N0) {
    sig_r =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;
    ncls =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(N0)  &lt;span class=&quot;co&quot;&gt;#Number of age classes&lt;/span&gt;
    Nt_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, tf, ncls)  &lt;span class=&quot;co&quot;&gt;#Initialize output matrix with time steps as rows, age classes as columns&lt;/span&gt;
    Nt_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, ] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;N0  &lt;span class=&quot;co&quot;&gt;#put initial values into first row of output matrix&lt;/span&gt;
    for (t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(tf -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) {
        &lt;span class=&quot;co&quot;&gt;#for time step t in 1:1999&lt;/span&gt;
        Pt =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(e *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Nt_F[t, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;((&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Nt_F[t, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Nt_F[t, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]  &lt;span class=&quot;co&quot;&gt;#number of spawners&lt;/span&gt;
        Nt_F[t +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;((a *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Pt)/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(b *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Pt))) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(sig_r *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;mean =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
            &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)))  &lt;span class=&quot;co&quot;&gt;#number of recruits with environmental stochasticity&lt;/span&gt;
        Nt_F[t +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:ncls] =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;sx *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;Nt_F[t, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(ncls -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)]  &lt;span class=&quot;co&quot;&gt;#number of age classes 2-5&lt;/span&gt;
    }
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(Nt_F)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run model by calling function&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Nt_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;AgeStructMatrix_F&lt;/span&gt;(sx, a, b, tf, N0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plot of time series with all 5 age classes&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;matplot&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:tf, Nt_F, &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Age-structured model with fishing&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ageclassplot.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Export text file for plot with age classes&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;colnames&lt;/span&gt;(Nt_F) &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Recruits&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age4&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age5&amp;quot;&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#Rename columns&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;write.table&lt;/span&gt;(Nt_F, &lt;span class=&quot;st&quot;&gt;&amp;quot;~/Desktop/Nt_F.txt&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;row.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;quote =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#comma separated&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or plot of time series for total population&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Nt_F_totals =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rowSums&lt;/span&gt;(Nt_F)
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:tf), Nt_F_totals, &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/totalpopplot.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Export text file for plot with total population&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;write.table&lt;/span&gt;(Nt_F_totals, &lt;span class=&quot;st&quot;&gt;&amp;quot;~/Desktop/Nt_F_totals.txt&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;row.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;quote =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;stability-analysis-of-deterministic-population-model&quot;&gt;Stability analysis of deterministic population model&lt;/h2&gt;
&lt;p&gt;This assumes that the partial differential equations that make up the Jacobian matrix have been determined analytically. Below are the parameters that were associated with my age-structured salmon model with fishing. I can compare the stability of the population with fishing to that with no fishing&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;e &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;
l &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;
s &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.28&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#survival with fishing&lt;/span&gt;
s_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.85&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#survival with no fishing&lt;/span&gt;
c &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/((e *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(s^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(s^&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(s^&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)))
c_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/((e *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(s_noF^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(s_noF^&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(s_noF^&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)))
alpha &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;
beta &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.00017&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fishing Jacobian&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;one_F &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((alpha *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e)/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;c)) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(-c +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), 
    ((alpha *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l))/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;c)) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(-c +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), 
    (alpha/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;c)) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(-c +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))
two_F &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(s, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
three_F &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
four_F &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
five_F &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, (l *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
jacobian_F &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(one_F, two_F, three_F, four_F, five_F)
jacobian_F&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#         [,1] [,2]   [,3]     [,4]  [,5]&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# one_F   0.00 0.00 2.5214 21.35558 23.88&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# two_F   0.28 0.00 0.0000  0.00000  0.00&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# three_F 0.00 0.28 0.0000  0.00000  0.00&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# four_F  0.00 0.00 0.2504  0.00000  0.00&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# five_F  0.00 0.00 0.0000  0.02957  0.00&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fishing Eigenvalues&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ev_F &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;eigen&lt;/span&gt;(jacobian_F)
ev1_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]))
ev2_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]))
ev3_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]))
ev4_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]))
ev5_F =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No Fishing Jacobian&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;one_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((alpha *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e)/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;c_noF)) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(-c_noF +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c_noF -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), ((alpha *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;l))/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;c_noF)) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(-c_noF +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c_noF -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), (alpha/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;c_noF)) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(-c_noF +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c_noF -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))
two_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(s_noF, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
three_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s_noF, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
four_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;e) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s_noF), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
five_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, (l *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;s_noF), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
jacobian_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(one_noF, two_noF, three_noF, four_noF, five_noF)
jacobian_noF&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#           [,1] [,2]     [,3]    [,4]   [,5]&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# one_noF   0.00 0.00 0.004625 0.03917 0.0438&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# two_noF   0.85 0.00 0.000000 0.00000 0.0000&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# three_noF 0.00 0.85 0.000000 0.00000 0.0000&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# four_noF  0.00 0.00 0.760240 0.00000 0.0000&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# five_noF  0.00 0.00 0.000000 0.08976 0.0000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No Fishing Eigenvalues&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ev_noF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;eigen&lt;/span&gt;(jacobian_noF)
ev1_noF =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]))
ev2_noF =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]))
ev3_noF =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]))
ev4_noF =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]))
ev5_noF =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]))

&lt;span class=&quot;co&quot;&gt;# Setup for plot, just remember to expand the plot interface first&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(plotrix)  &lt;span class=&quot;co&quot;&gt;#load plotrix&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plot the eigenvalues with legend to compare stability of both deterministic models&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;layout&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;))  &lt;span class=&quot;co&quot;&gt;#Layout with 2 rows, 3 columns,&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# the matrix tells you the number of the figure in each location. Since&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# the layout is byrow, it fills the first row first and then the 2nd row&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# no fishing plot&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(ev1_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev1_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;p&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Imaginary&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;title&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;No fishing&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;adj =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#plot dominant eigenvalue, with x-coordinate as real part and y-coordinate as imaginary part&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;draw.circle&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;radius =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;border =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#draw unit circle&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev2_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev2_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#2nd eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev3_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev3_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#3rd eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev4_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev4_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#4th eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev5_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev5_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#5th eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;h =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;v =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# fishing plot&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(ev1_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev1_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;p&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Imaginary&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;title&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Fishing&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;adj =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;draw.circle&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;radius =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;border =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev2_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev2_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev3_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev3_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev4_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev4_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev5_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev5_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;h =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;v =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# Legend&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;axes =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;frame.plot =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;title&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Legend&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;adj =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;9.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;7.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;5.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;3.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;9.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;7.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;5.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;3.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ploteigenvalues.png&quot; /&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>A quick function for editing CSV files in R</title>
   <link href="http://www.noamross.net/blog/2012/11/19/editing-csv-files-in-r.html"/>
   <updated>2012-11-19T13:47:25-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/19/editing-csv-files-in-r</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;I’ve been hunting for a lightweight CSV editor for OSX so I could to make fixes to data files and not need to fire up Excel. While you can edit a CSV file in any text editor, it’s a pain to navigate the files without a spreadsheet-like interface. Unfortunately &lt;a href=&quot;http://apple.stackexchange.com/questions/66214/are-there-any-free-and-lightweight-spreadsheet-programs-for-the-mac&quot;&gt;there doesn’t seem to be a good, free option out there&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Today I remembered R has a native XCode editor for editing data frames, and I realized I could write a function that would load the CSV as a data frame, let me edit it, then close and save it in CSV format again. Here’s the function. This is now part of my &lt;code&gt;.Rprofile&lt;/code&gt; file, and makes tweaking data files a snap:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#&amp;#39; Use the data editor for a CSV file&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; This function loads a CSV file, lets the user edit it in the native data&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; editor, then re-saves it, prompting the user for a new file name if &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; desired.&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; &lt;/span&gt;
fix.csv &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;function(file, &lt;span class=&quot;dt&quot;&gt;new.name=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;comment.char=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) {
  tmpframe &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(file, &lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;sep,&lt;span class=&quot;dt&quot;&gt;quote=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;colClasses=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;character&amp;quot;&lt;/span&gt;,
                       &lt;span class=&quot;dt&quot;&gt;stringsAsFactors=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;comment.char=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
                       &lt;span class=&quot;dt&quot;&gt;blank.lines.skip=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;na.strings=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)
  tmpframe &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;edit&lt;/span&gt;(tmpframe)
  if(&lt;span class=&quot;kw&quot;&gt;is.character&lt;/span&gt;(new.name)) {
    out.name &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;new.name
  } else if(new.name &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;) {
    out.name &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;readline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;prompt=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Enter file name to save (Hit enter to use original):&amp;quot;&lt;/span&gt;)
  } else {
    out.name &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;file
  }
  if(out.name==&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) out.name &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;file
  &lt;span class=&quot;kw&quot;&gt;write.table&lt;/span&gt;(tmpframe, &lt;span class=&quot;dt&quot;&gt;file=&lt;/span&gt;out.name, &lt;span class=&quot;dt&quot;&gt;append=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;quote=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;sep,
              &lt;span class=&quot;dt&quot;&gt;row.names=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here it is &lt;a href=&quot;https://gist.github.com/4114258&quot;&gt;as a gist&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This works in RStudio my Mac but unfortunately not when I’m working on my server, because RStudio server doesn’t support a data editor. (I know it’s been requested a few times - let’s hope they add it in!)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&amp;quot; &lt;a href=&quot;https://twitter.com/davidjayharris&quot;&gt;David Harris&lt;/a&gt; notes that “if you try this on a Mountain Lion Mac without X11/XQuartz, it will cause a fatal error.”&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Simulating Sudden Oak Death Dynamics</title>
   <link href="http://www.noamross.net/blog/2012/11/16/sod-dynamics-1.html"/>
   <updated>2012-11-16T10:22:42-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/16/sod-dynamics-1</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;I am working on a project with the &lt;a href=&quot;http://ucanr.edu/sites/rizzolab/&quot;&gt;Rizzo Lab&lt;/a&gt; examining the dynamics of Sudden Oak Death (SOD). I really have to write more about this, but today I’m just going to post the results of an initial exercise.&lt;/p&gt;
&lt;p&gt;Here I attempt to replicate model results from Cobb et al. (2012). The model in that paper simulates the spread of disease and resulting tree mortality and stand dynamics in a mixed system of tanoak, bay laurel, and redwood. In this system, only tanoak and bay laurel carry the disease, and it mostly only kills tanoak, but all three species compete for space in the forest. More detail on the model found in the paper and the paper’s supplement.&lt;/p&gt;
&lt;p&gt;I’m developing this model as an R package -&lt;code&gt;&amp;quot;SODDr&amp;quot;&lt;/code&gt; (Sudden Oak Death Dynamics in R), to replicate this work, you can install it from github. Note that this is a very rough package and is changing.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(devtools) &lt;span class=&quot;co&quot;&gt;# devtools enables intsallation from alternate code locations&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;install_github&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SODDr&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;noamross&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(SODDr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My model modifies the original in a few ways. First, it’s designed to be much more flexible, and make it easy to modify the number of species, size classes, and and disease parameters. Secondly, it is in a discrete- rather than continuous-time framework. This will make it easier to include stochasticity down the road, and ultimately fit it to actual data.&lt;/p&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;First, I load a CSV file of parameters&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;system.file&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;paper_tree_parms_eq.csv&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;package =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;SODDr&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;stringsAsFactors =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(treeparms.df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##   species ageclass S.mortality I.mortality S.recruit I.recruit
## 1       1        1      0.0061       0.019        NA        NA
## 2       1        2      0.0031       0.022     0.007     0.007
## 3       1        3      0.0011       0.035     0.020     0.020
## 4       1        4      0.0320       0.140     0.073     0.073
## 5       2        1      0.0200       0.020        NA        NA
## 6       3        1      0.0050       0.020        NA        NA
##   S.transition I.transition S.resprout I.resprout recover space
## 1      0.05212      0.05212          0        0.5    0.01    NA
## 2      0.01848      0.01848          0        0.5    0.01    NA
## 3      0.01473      0.01473          0        0.5    0.01    NA
## 4      0.00000      0.00000          0        0.5    0.01    NA
## 5      0.00000      0.00000          0        0.0    0.10     1
## 6      0.00000      0.00000          0        0.0    0.10     1
##            kernel.fn kernel.par1 kernel.par2  S.init I.init waifw1 waifw2
## 1 adjacent.dispersal         0.5       0.125 0.03860      0   0.33   0.33
## 2 adjacent.dispersal         0.5       0.125 0.09785      0   0.32   0.32
## 3 adjacent.dispersal         0.5       0.125 0.11379      0   0.30   0.30
## 4 adjacent.dispersal         0.5       0.125 0.04827      0   0.24   0.24
## 5 adjacent.dispersal         0.5       0.125 0.11550      0   0.30   0.30
## 6 adjacent.dispersal         0.5       0.125 0.32550      0   0.00   0.00
##   waifw3 waifw4 waifw5 waifw6
## 1   0.33   0.33   1.46      0
## 2   0.32   0.32   1.46      0
## 3   0.30   0.30   1.46      0
## 4   0.24   0.24   1.46      0
## 5   0.30   0.30   1.33      0
## 6   0.00   0.00   0.00      0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This data set includes all of the model parameters as defined by Cobb et al. (2012). For each species and age class, there are parameters for mortality, recruitment, transition between classes, the probability of resprouting, and recovering from disease. There are also parameters the the relative amount of space occupied by trees of each species/class.&lt;/p&gt;
&lt;p&gt;For each species/class, the table includes a kernel function to describe dispersal of disease spores from diseased trees, and parameters for that function. The last set of columns represent the “&amp;quot;Who Acquires Infection From Whom” (WAIFW) matrix (Anderson and May 1985), which describes the vulnerability of each class to spores originating from others.&lt;/p&gt;
&lt;p&gt;Note that several values, such as the space occupied by different tanoak size classes, and recruitment rates, are missing. This is because, per the original paper, I calculate these so as to parameterize the model for steady-state conditions in the absence of disease. Here I do that, using Equation 8 in the papers’ supplement:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;within&lt;/span&gt;(treeparms.df, {
    &lt;span class=&quot;co&quot;&gt;# Calculate the relative space requirements of tanoak size classes based&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# on initial conditions&lt;/span&gt;
    space[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])/S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])
    
    &lt;span class=&quot;co&quot;&gt;# Set recruitment rates to steady-state levels.  For Redwood and Bay, this&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# is simply the mortality rate divided by the density-dependence&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# coefficient at simulation start.  For tanoak, which has multiple size&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# classes, it&amp;#39;s a but more involved&lt;/span&gt;
    
    S.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    S.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    
    A2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
    A3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A2
    A4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]/S.mortality[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A3
    S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space)) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;        &lt;/span&gt;(S.recruit[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A2 +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A3 +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A4)
    
    
    I.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
    A2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The original model allows only dispersal between adjacent cells, so the parameters table calls the dispersal kernel &lt;code&gt;adjacent.dispersal&lt;/code&gt;, and gives two parameters. This function outputs the first parameter when within the cell, the second for dispersal to adjacent cells, and zero for other cells:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(adjacent.dispersal)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## function (distance, local, adjacent) 
## {
##     ifelse(distance &amp;lt; 0.5, local, ifelse(distance &amp;lt; 1.5, adjacent, 
##         0))
## }
## &amp;lt;environment: namespace:SODDr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next I set up the locations in the model. These must be in the form of a matrix with the first column being site numbers, and the second being &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates. &lt;code&gt;MakeLattice&lt;/code&gt; is a convenience function that creates a regularly spaced grid:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;locations &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;MakeLattice&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;nx =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ny =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;dist =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;head&lt;/span&gt;(locations)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      location x y
## [1,]        1 0 0
## [2,]        2 0 1
## [3,]        3 0 2
## [4,]        4 0 3
## [5,]        5 0 4
## [6,]        6 0 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I create a matrix of initial population values, which should be sized by number of locations by number of species/size classes &lt;em&gt;times 2&lt;/em&gt;. They should be in order of the classes as they appear in the data table, but alternating &lt;span class=&quot;math&quot;&gt;&lt;img style=&quot;vertical-align:middle&quot; src=&quot;http://latex.codecogs.com/png.latex?\inline S,I,S,I,\dots&quot; alt=&quot;S,I,S,I,\dots&quot; /&gt;&lt;/span&gt;. In this case, initial populations are uniform across the landscape and equal to the &lt;code&gt;init&lt;/code&gt; values from the parameters table.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;initial.vec =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.vector&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(treeparms.df$S.init, treeparms.df$I.init))
init &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; initial.vec, &lt;span class=&quot;dt&quot;&gt;nrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(treeparms.df), 
    &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we set the time steps for the model&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;time.steps &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;do-it&quot;&gt;Do it!&lt;/h2&gt;
&lt;p&gt;Running &lt;code&gt;SODModel&lt;/code&gt; runs the model and generates a dataframe of population by time, species, size class, and disease status&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;pop.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(pop.df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## &amp;#39;data.frame&amp;#39;:    480000 obs. of  6 variables:
##  $ Time      : int  1 1 1 1 1 1 1 1 1 1 ...
##  $ Location  : int  1 1 1 1 1 1 1 1 1 1 ...
##  $ Species   : Factor w/ 3 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;: 1 1 1 1 1 1 1 1 2 2 ...
##  $ AgeClass  : Factor w/ 4 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;: 1 1 2 2 3 3 4 4 1 1 ...
##  $ Disease   : Factor w/ 2 levels &amp;quot;S&amp;quot;,&amp;quot;I&amp;quot;: 1 2 1 2 1 2 1 2 1 2 ...
##  $ Population: num  0.0386 0 0.0978 0 0.1138 ...&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;Here are the results, broken up by species and age class:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(plyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Attaching package: &amp;#39;plyr&amp;#39;

## The following object(s) are masked from &amp;#39;package:twitteR&amp;#39;:
## 
## id&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;pop.df.totals &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
dynamic.plot &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(pop.df.totals, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; TotPop, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; Disease, 
    &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; AgeClass)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_area&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;position =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;stack&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;facet_grid&lt;/span&gt;(~Species)
dynamic.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/initrun.png&quot; alt=&quot;Population dynamics broken up by species (left to right, Tanoak, Bay, Redwood), and Size Class&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Population dynamics broken up by species (left to right, Tanoak, Bay, Redwood), and Size Class&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The plot shows that this isn’t quite steady-state, I suspect because of some rounding errors in copying parameters from the paper.&lt;/p&gt;
&lt;p&gt;We can make a plot in the style of Cobb et al. (2012), showing only the populations of small and large tanoaks as a proportion of the total population:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;paper.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1&amp;quot;&lt;/span&gt; |&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;AgeClass ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper.plot &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper.df, Species ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/papeplot.png&quot; alt=&quot;Tanoak as a fraction of total population over time, no disease&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak as a fraction of total population over time, no disease&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, let’s change the initial conditions to include disease and see what happens. I change the populations of tanoak and bay in one pixel to infectious instead of susceptible and run the model:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
pop2.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
pop2.df.totals &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop2.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
paper2.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop2.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1&amp;quot;&lt;/span&gt; |&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, 
    &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper2.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper2.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper2.plot &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper2.df, Species ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper2.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/disease1.png&quot; alt=&quot;Tanoak as a fraction of total population, using baseline initial conditions and introducing disease&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak as a fraction of total population, using baseline initial conditions and introducing disease&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Qualitatively, this looks a lot like the original result:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/cobb20124a.png&quot; alt=&quot;Figure 4a from Cobb et al. (2012)&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure 4a from Cobb et al. (2012)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The main difference is the overall rate of change, which is expected because I haven’t corrected any parameters for the change from continuous to discrete time.&lt;/p&gt;
&lt;p&gt;Now I simulate a scenario with mostly tanoak, some redwood, and no bay laurel, with disease, using the parameters previously calulated for the steady state without disease:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df$S.init &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.7&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), 
    &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.19&lt;/span&gt;)

initial.vec =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.vector&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(treeparms.df$S.init, treeparms.df$I.init))
init &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; initial.vec, &lt;span class=&quot;dt&quot;&gt;nrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(treeparms.df), 
    &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)

init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;

treeparms.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;within&lt;/span&gt;(treeparms.df, {
    &lt;span class=&quot;co&quot;&gt;# Calculate the relative space requirements of tanoak size classes based&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# on initial conditions&lt;/span&gt;
    space[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])/S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])
    
    &lt;span class=&quot;co&quot;&gt;# Set recruitment rates to steady-state levels.  For Redwood and Bay, this&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# is simply the mortality rate divided by the density-dependence&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# coefficient at simulation start.  For tanoak, which has multiple size&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# classes, it&amp;#39;s a but more involved&lt;/span&gt;
    
    S.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    S.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    
    A2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
    A3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A2
    A4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]/S.mortality[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A3
    S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space)) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;        &lt;/span&gt;(S.recruit[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A2 +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A3 +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A4)
    
    
    I.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
    A2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
})

pop3.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
pop3.df.totals &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop3.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
paper3.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop3.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1&amp;quot;&lt;/span&gt; |&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, 
    &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper3.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper3.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper3.plot &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper3.df, Species ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper3.plot&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: Removed 5 rows containing missing values (geom_path).&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/disease2.png&quot; alt=&quot;Tanoak dynamics under the Mostly Tanoak scenario&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak dynamics under the “Mostly Tanoak” scenario&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Again, qualitatively similar to the original results:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/cobb2012fig4b.png&quot; alt=&quot;Fig 4b from Cobb et al. (2012)&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Fig 4b from Cobb et al. (2012)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Finally, I simulate the “Mostly Redwood” scenario:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df$S.init &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.08&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), 
    &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.69&lt;/span&gt;)

initial.vec =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;as.vector&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(treeparms.df$S.init, treeparms.df$I.init))
init &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; initial.vec, &lt;span class=&quot;dt&quot;&gt;nrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(treeparms.df), 
    &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)

init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;

treeparms.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;within&lt;/span&gt;(treeparms.df, {
    &lt;span class=&quot;co&quot;&gt;# Calculate the relative space requirements of tanoak size classes based&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# on initial conditions&lt;/span&gt;
    space[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])/S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])
    
    &lt;span class=&quot;co&quot;&gt;# Set recruitment rates to steady-state levels.  For Redwood and Bay, this&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# is simply the mortality rate divided by the density-dependence&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# coefficient at simulation start.  For tanoak, which has multiple size&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# classes, it&amp;#39;s a but more involved&lt;/span&gt;
    
    S.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    S.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;I.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space))
    
    A2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
    A3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A2
    A4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]/S.mortality[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A3
    S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.mortality[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;space)) -&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;        &lt;/span&gt;(S.recruit[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A2 +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A3 +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;A4)
    
    
    I.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
    A2 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A3 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A4 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
})

pop4.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
pop4.df.totals &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop4.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
paper4.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop4.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;1&amp;quot;&lt;/span&gt; |&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;    &lt;/span&gt;AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, 
    &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper4.df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper4.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper4.plot &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper4.df, Species ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper4.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/disease3.png&quot; alt=&quot;Tanoak dynamics under the mostly redwood scenario&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak dynamics under the “mostly redwood” scenario&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Success! Same results as the original:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/cobb2012fig4c.png&quot; alt=&quot;Figure 4c from Cobb et al. (2012)&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure 4c from Cobb et al. (2012)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, for fun, let’s make an animation of how the disease progresses through the stand. I will use the “Mostly Tanoak” scenario&amp;quot;, and plot the adult population as intensity, and the fraction of trees diseased as hue.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;tanspc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(pop3.df, Species ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
tanspc$Species &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
tanspc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(tanspc, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;), function(x) {
    &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;TotTan =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(x$Population[&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(x$AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;3&amp;quot;&lt;/span&gt; |&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x$AgeClass ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;        &amp;quot;4&amp;quot;&lt;/span&gt;)]), &lt;span class=&quot;dt&quot;&gt;FracDisease =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(x$Population[&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(x$Disease ==&lt;span class=&quot;st&quot;&gt; &amp;quot;I&amp;quot;&lt;/span&gt; &amp;amp;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;(x$AgeClass ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;        &amp;quot;3&amp;quot;&lt;/span&gt; |&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;x$AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;4&amp;quot;&lt;/span&gt;))])/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(x$Population[&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(x$AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;3&amp;quot;&lt;/span&gt; |&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;        &lt;/span&gt;x$AgeClass ==&lt;span class=&quot;st&quot;&gt; &amp;quot;4&amp;quot;&lt;/span&gt;)]))
})
tanspc &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;merge&lt;/span&gt;(tanspc, &lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;by.x =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;by.y =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;location&amp;quot;&lt;/span&gt;)
dis.limits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(tanspc$FracDisease), &lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(tanspc$FracDisease))
pop.limits &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(tanspc$TotTan), &lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(tanspc$TotTan))
&lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(animation)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Loading required package: animation&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ani.options&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;nmax =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;loop =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;interval =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.2&lt;/span&gt;)
for (time in time.steps) {
    &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(tanspc, Time ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;time), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; y, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; FracDisease, 
        &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; TotTan)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;geom_tile&lt;/span&gt;() +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_alpha&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;TanoakPopulation&amp;quot;&lt;/span&gt;, 
        &lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;)) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;scale_fill_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Fraction Diseased&amp;quot;&lt;/span&gt;, 
        &lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;low =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;#408000&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;high =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;#FF8000&amp;quot;&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;rect =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;line =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;()))
}&lt;/code&gt;&lt;/pre&gt;
&lt;video   controls=&quot;controls&quot; loop=&quot;loop&quot;&gt;
&lt;source src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/tanoak-anim.mp4&quot; type=&quot;video/mp4&quot; /&gt;video of chunk tanoak-anim
&lt;/video&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;Anderson, R. M., and R. M. May. 1985. Age-related changes in the rate of disease transmission: implications for the design of vaccination programmes. J. Hyg. Camb.&lt;/p&gt;
&lt;p&gt;Cobb, R. C., J. a. N. Filipe, R. K. Meentemeyer, C. a Gilligan, and D. M. Rizzo. 2012. Ecosystem transformation by emerging infectious disease: loss of large tanoak from California forests. Journal of Ecology.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Exploring GAMs with Rosemary Hartman</title>
   <link href="http://www.noamross.net/blog/2012/11/9/gams-for-drug.html"/>
   <updated>2012-11-09T12:49:25-08:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/9/gams-for-drug</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;Today at &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt;, Rosemary Hartman took us through her work in progress fitting general additive models to organism presence/absence data. Below is her presentation and script. You can get the original script and data &lt;a href=&quot;https://gist.github.com/4048075&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, check the comments below for some discussion of other options for this type of analysis, such as boosted regression trees.&lt;/p&gt;
&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/15108978&quot; width=&quot;476&quot; height=&quot;400&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;


&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## GAMs using mgcv and amphibian presence/absence dataset
## code and data by Rosemary Hartman (rosehartman at gmail dot com)

## First, load the mgcv package (Simon Wood)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(mgcv)

## Now, attach your data set (or my data set)
fishlakes &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;fishlakes.csv&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;comment.char=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;)

## create a full exploritory model using varibles you think are biologically
## significant (this is pretty subjective, and where you need to use your brain)
## For my data set, I am trying to predict the presence of cascades frogs


fishlakes.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## &amp;quot;treatment&amp;quot; = breeding cascades frogs in lake
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## breeding toads in lake
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;count.RACApops.1K +&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;##  number of cascades frog populations within 1km
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## amount of silt in lake bed
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## total lake area with emergent aquatic vegetation
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## total lake area less than 10cm deep
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;## perportion of nearby water bodies with frogs weighted by distance
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;),  ## average slope
  &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## this is a logistic function since I have binomial data&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes.logr) ## Note, this model explains 68.5% of devience&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(area.10cm, k = 6) + 
##     s(weighted.dist, k = 6) + s(bank.slope, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.830      3.224    1.19    0.235  
## BUBO.breedingy      -3.393      1.646   -2.06    0.039 *
## count.RACApops.1K   -0.192      0.506   -0.38    0.705  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.51    0.47
## s(vegetated.area) 3.48   3.97   3.47    0.48
## s(area.10cm)      2.20   2.66   1.17    0.70
## s(weighted.dist)  2.24   2.73   2.56    0.41
## s(bank.slope)     2.22   2.68   5.02    0.14
## 
## R-sq.(adj) =  0.597   Deviance explained = 68.5%
## UBRE score = 0.091416  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;gam.check&lt;/span&gt;(fishlakes.logr) ## It seems to think my ks are too low, but raising them&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Method: UBRE   Optimizer: outer newton
## full convergence after 14 iterations.
## Gradient range [-4.272e-07,2.326e-07]
## (score 0.09142 &amp;amp; scale 1).
## Hessian positive definite, eigenvalue range [2.564e-07,0.05689].
## 
## Basis dimension (k) checking results. Low p-value (k-index&amp;lt;1) may
## indicate that k is too low, especially if edf is close to k&amp;#39;.
## 
##                      k&amp;#39;   edf k-index p-value
## s(silt.total)     5.000 1.000   0.691    0.02
## s(vegetated.area) 6.000 3.485   1.321    0.97
## s(area.10cm)      5.000 2.200   0.742    0.02
## s(weighted.dist)  5.000 2.237   1.064    0.63
## s(bank.slope)     5.000 2.219   0.965    0.42&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report1.png&quot; /&gt;
&lt;/div&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## gives huge overspecification. I&amp;#39;m not sure what to do about this.
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(fishlakes.logr) ## diagnostic plots for the smooths&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report2.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report3.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report4.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report5.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report6.png&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
## To choose my k&amp;#39;s, I looped through a bunch of different values for k, and basically 
## just played around until my model stopped overspecifying


for (i in &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;) { fishlakes.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm,  &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes);
                  x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes.logr);
                  y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;AIC&lt;/span&gt;(fishlakes.logr);
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(i)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(x)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(y)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 2
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.011      1.263    2.38    0.017 *
## count.RACApops.1K   -0.247      0.307   -0.80    0.421  
## BUBO.breedingy      -2.314      1.010   -2.29    0.022 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.05    0.82
## s(vegetated.area) 1.00   1.00   0.27    0.61
## s(bank.slope)     1.63   1.86   1.97    0.34
## s(area.10cm)      1.00   1.00   0.04    0.85
## s(weighted.dist)  1.80   1.96   2.34    0.30
## 
## R-sq.(adj) =  0.339   Deviance explained = 42.2%
## UBRE score = 0.21726  Scale est. = 1         n = 42
## [1] 51.12

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 3
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.011      1.263    2.38    0.017 *
## count.RACApops.1K   -0.247      0.307   -0.80    0.421  
## BUBO.breedingy      -2.314      1.010   -2.29    0.022 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.05    0.82
## s(vegetated.area) 1.00   1.00   0.27    0.61
## s(bank.slope)     1.63   1.86   1.97    0.34
## s(area.10cm)      1.00   1.00   0.04    0.85
## s(weighted.dist)  1.80   1.96   2.34    0.30
## 
## R-sq.(adj) =  0.339   Deviance explained = 42.2%
## UBRE score = 0.21726  Scale est. = 1         n = 42
## [1] 51.12

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 4
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.745      1.147    2.39    0.017 *
## count.RACApops.1K   -0.217      0.299   -0.73    0.468  
## BUBO.breedingy      -2.308      0.996   -2.32    0.020 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.06    0.81
## s(vegetated.area) 1.00   1.00   0.31    0.58
## s(bank.slope)     1.77   2.14   2.38    0.33
## s(area.10cm)      1.00   1.00   0.08    0.78
## s(weighted.dist)  1.86   2.25   2.53    0.32
## 
## R-sq.(adj) =  0.332   Deviance explained =   42%
## UBRE score = 0.22873  Scale est. = 1         n = 42
## [1] 51.61

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 5
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          -16.5     4857.1    0.00     1.00
## count.RACApops.1K     42.4      397.8    0.11     0.92
## BUBO.breedingy      -254.6     9152.1   -0.03     0.98
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.00    0.95
## s(vegetated.area) 2.32   2.36   0.00    1.00
## s(bank.slope)     1.52   1.57   0.01    0.99
## s(area.10cm)      3.06   3.07   0.02    1.00
## s(weighted.dist)  4.00   4.00   0.02    1.00
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29037  Scale est. = 1         n = 42
## [1] 29.8

## Warning: matrix not positive definite

## [1] 6
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5608    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86
## [1] 7
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)           6.56     366.37    0.02     0.99
## count.RACApops.1K     4.30      13.89    0.31     0.76
## BUBO.breedingy      -22.94      36.65   -0.63     0.53
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.02    0.88
## s(vegetated.area) 3.50   3.82   0.97    0.90
## s(bank.slope)     1.00   1.00   0.13    0.72
## s(area.10cm)      1.00   1.00   0.61    0.44
## s(weighted.dist)  4.02   4.21   1.32    0.88
## 
## R-sq.(adj) =      1   Deviance explained = 99.7%
## UBRE score = -0.35283  Scale est. = 1         n = 42
## [1] 27.18

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 8
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)         22.752    135.686    0.17     0.87
## count.RACApops.1K   -0.247     23.133   -0.01     0.99
## BUBO.breedingy     -29.877     67.934   -0.44     0.66
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     4.58   4.71   0.09    1.00
## s(vegetated.area) 3.19   3.31   0.01    1.00
## s(bank.slope)     1.00   1.00   0.06    0.80
## s(area.10cm)      2.14   2.23   0.02    0.99
## s(weighted.dist)  3.68   3.87   0.04    1.00
## 
## R-sq.(adj) =      1   Deviance explained = 99.9%
## UBRE score = -0.16157  Scale est. = 1         n = 42
## [1] 35.21&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
for (i in &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) { fishlakes.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm,  &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes);
                  x &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes.logr);
                  y &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;AIC&lt;/span&gt;(fishlakes.logr);
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(i)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(x)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(y)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: basis dimension, k, increased to minimum possible

## Warning: matrix not positive definite

## [1] 2
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5608    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86

## Warning: matrix not positive definite

## [1] 3
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5608    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86
## [1] 4
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)           76.6      427.3    0.18     0.86
## count.RACApops.1K     10.1       51.7    0.20     0.84
## BUBO.breedingy       -89.3      536.3   -0.17     0.87
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.00    0.97
## s(vegetated.area) 2.65   2.70   0.03    1.00
## s(bank.slope)     3.77   3.87   0.12    1.00
## s(area.10cm)      4.51   4.54   0.19    1.00
## s(weighted.dist)  1.87   1.90   0.03    0.98
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.19934  Scale est. = 1         n = 42
## [1] 33.63

## Warning: matrix not positive definite

## [1] 5
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5609    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86

## Warning: matrix not positive definite

## [1] 6
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.830      3.224    1.19    0.235  
## count.RACApops.1K   -0.192      0.506   -0.38    0.705  
## BUBO.breedingy      -3.393      1.646   -2.06    0.039 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.51    0.47
## s(vegetated.area) 3.48   3.97   3.47    0.48
## s(bank.slope)     2.22   2.68   4.07    0.21
## s(area.10cm)      2.20   2.66   1.09    0.72
## s(weighted.dist)  2.24   2.73   1.90    0.54
## 
## R-sq.(adj) =  0.597   Deviance explained = 68.5%
## UBRE score = 0.091416  Scale est. = 1         n = 42
## [1] 45.84
## [1] 7
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          55.26     358.87    0.15     0.88
## count.RACApops.1K     5.42      99.67    0.05     0.96
## BUBO.breedingy      -87.21     624.65   -0.14     0.89
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     4.96   4.99   0.09    1.00
## s(vegetated.area) 3.99   4.02   0.02    1.00
## s(bank.slope)     1.00   1.00   0.01    0.93
## s(area.10cm)      1.86   1.96   0.02    0.99
## s(weighted.dist)  1.03   1.03   0.01    0.92
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.24525  Scale est. = 1         n = 42
## [1] 31.7

## Warning: matrix not positive definite

## [1] 8
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          89.75   12140.84    0.01     0.99
## count.RACApops.1K    -3.53    1710.88    0.00     1.00
## BUBO.breedingy     -119.62    9443.72   -0.01     0.99
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     5.76   5.80      0       1
## s(vegetated.area) 2.03   2.04      0       1
## s(bank.slope)     1.18   1.19      0       1
## s(area.10cm)      1.84   1.90      0       1
## s(weighted.dist)  1.08   1.08      0       1
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29122  Scale est. = 1         n = 42
## [1] 29.77
## [1] 9
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)         48.947    655.719    0.07     0.94
## count.RACApops.1K   -0.137     82.969    0.00     1.00
## BUBO.breedingy     -73.934    546.328   -0.14     0.89
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     5.75   5.84   0.02    1.00
## s(vegetated.area) 2.00   2.01   0.01    1.00
## s(bank.slope)     1.00   1.00   0.01    0.91
## s(area.10cm)      1.86   1.95   0.01    0.99
## s(weighted.dist)  1.19   1.21   0.00    0.99
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29492  Scale est. = 1         n = 42
## [1] 29.61
## [1] 10
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)        54.2952   102.0865    0.53     0.59
## count.RACApops.1K  -0.0411    16.5558    0.00     1.00
## BUBO.breedingy    -75.4705   126.5539   -0.60     0.55
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     6.88   7.06   0.74    1.00
## s(vegetated.area) 3.09   3.16   0.22    0.98
## s(bank.slope)     1.04   1.05   0.22    0.66
## s(area.10cm)      2.42   2.67   0.38    0.92
## s(weighted.dist)  1.00   1.00   0.30    0.58
## 
## R-sq.(adj) =      1   Deviance explained = 99.8%
## UBRE score = -0.16704  Scale est. = 1         n = 42
## [1] 34.98&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
## In order to see which of the candidate terms are significant, I will run the model
## several times, dropping one term out each time and then do a likelyhood ratio test
## to see if adding the term leads to a significant improvement in residual deviance.

## fishlakes2.logr is the same model as fishlakes.logr without the &amp;quot;bank slope&amp;quot; term
fishlakes2.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;),
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes2.logr) ## This model only explains 34.1% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(area.10cm, k = 6) + 
##     s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.175      0.974    2.23    0.026 *
## BUBO.breedingy      -1.840      0.891   -2.07    0.039 *
## count.RACApops.1K   -0.294      0.290   -1.01    0.311  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(silt.total)     1.00   1.00   3.19   0.074 .
## s(vegetated.area) 1.00   1.00   0.46   0.499  
## s(area.10cm)      1.00   1.00   1.82   0.177  
## s(weighted.dist)  2.02   2.54   2.53   0.375  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =  0.279   Deviance explained = 34.1%
## UBRE score = 0.25725  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes2.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## There is a significant difference&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(area.10cm, k = 6) + 
##     s(weighted.dist, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      34.0       36.8                           
## 2      24.6        0.1 9.41     36.6  4.2e-05 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## in explanitory power between the two models, that means the &amp;quot;bank slope&amp;quot; term
## should be included in the final model

## Now do the same with the rest of the varibles
fishlakes3.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K +&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;)
                       +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), 
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except &amp;quot;weighted distance&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes3.logr) ## This model is way overspecified (100% of devience explained)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          77.43     282.28    0.27     0.78
## BUBO.breedingy     -120.75     510.54   -0.24     0.81
## count.RACApops.1K     2.83      64.25    0.04     0.96
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     4.77   4.80   0.08    1.00
## s(vegetated.area) 2.15   2.19   0.02    0.99
## s(bank.slope)     1.22   1.25   0.06    0.88
## s(area.10cm)      3.71   3.77   0.06    1.00
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29299  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes3.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## significant differnce!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)
## 1      27.2      0.008                       
## 2      24.6      0.127 2.59   -0.119         &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Include &amp;quot;weighted distance&amp;quot; in final model

fishlakes4.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +count.RACApops.1K+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), 
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except area under 10cm&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes4.logr) ## This model only explains 54.5% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.490      1.851    1.35    0.179  
## BUBO.breedingy      -1.997      1.100   -1.82    0.069 .
## count.RACApops.1K   -0.465      0.373   -1.25    0.213  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(silt.total)     1.00   1.00   0.03   0.852  
## s(vegetated.area) 3.29   3.81   4.86   0.276  
## s(bank.slope)     1.00   1.00   4.12   0.042 *
## s(weighted.dist)  1.40   1.70   0.81   0.591  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =  0.513   Deviance explained = 54.5%
## UBRE score = 0.066475  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes4.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## the difference is not&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(weighted.dist, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)   
## 1      32.3      25.40                          
## 2      24.6       0.13 7.73     25.3   0.0012 **
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## significant, leave &amp;quot;area under 10cm&amp;quot; out of final model

fishlakes5.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;)+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except number&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## of frog populations within 1km
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes5.logr) ## This model only explains 31.8% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + s(silt.total, k = 6) + s(vegetated.area, 
##     k = 7) + s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)       1.529      0.677    2.26    0.024 *
## BUBO.breedingy   -1.608      0.836   -1.92    0.054 .
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(silt.total)     1.00   1.00   2.76   0.097 .
## s(vegetated.area) 1.00   1.00   0.30   0.583  
## s(area.10cm)      1.00   1.00   1.56   0.212  
## s(weighted.dist)  1.94   2.45   2.26   0.403  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =   0.26   Deviance explained = 31.8%
## UBRE score = 0.23669  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes5.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## significant differnce!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + s(silt.total, k = 6) + s(vegetated.area, 
##     k = 7) + s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      35.1       38.1                           
## 2      24.6        0.1 10.5     37.9  5.6e-05 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Include &amp;quot;count RACA pops&amp;quot; in final model

fishlakes6.logr &amp;lt;-&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), 
                      &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all varibles except vegetated area&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes6.logr) ## This model explains 61.4% of deviance &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.967      1.717    2.31    0.021 *
## BUBO.breedingy      -3.711      1.561   -2.38    0.017 *
## count.RACApops.1K   -0.085      0.412   -0.21    0.836  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                   edf Ref.df Chi.sq p-value
## s(silt.total)    1.00   1.00   0.01    0.91
## s(bank.slope)    1.90   2.32   3.93    0.18
## s(area.10cm)     4.67   4.94   6.03    0.30
## s(weighted.dist) 1.93   2.38   2.05    0.43
## 
## R-sq.(adj) =  0.512   Deviance explained = 61.4%
## UBRE score = 0.10827  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes6.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## Only marginally significant&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      29.5      21.56                           
## 2      24.6       0.13 4.94     21.4  0.00063 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## maybe drop vegetated area out of final model

fishlakes7.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K+&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except silt
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes7.logr) ## This model explains 63.3% of deviance &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(vegetated.area, 
##     k = 7) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         4.6494     2.0998    2.21    0.027 *
## BUBO.breedingy     -4.2713     1.8364   -2.33    0.020 *
## count.RACApops.1K  -0.0772     0.4423   -0.17    0.862  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(vegetated.area) 1.00   1.00   0.14   0.707  
## s(bank.slope)     2.01   2.46   6.56   0.058 .
## s(area.10cm)      4.87   4.98   5.87   0.317  
## s(weighted.dist)  1.99   2.44   2.23   0.410  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =  0.524   Deviance explained = 63.3%
## UBRE score = 0.10056  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes7.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## No difference. Definitely&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(vegetated.area, 
##     k = 7) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      29.1      20.50                           
## 2      24.6       0.13 4.56     20.4  0.00072 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## drop silt out of final model

fishlakes8.logr &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K+&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;), 
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except toads&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes8.logr) ## This model only explains 49.7% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + s(vegetated.area, k = 7) + s(silt.total, 
##     k = 6) + s(bank.slope, k = 5) + s(area.10cm, k = 5) + s(weighted.dist, 
##     k = 5)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          1.074      1.926    0.56     0.58
## count.RACApops.1K   -0.338      0.343   -0.99     0.32
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(vegetated.area) 3.46   3.97   8.07   0.087 .
## s(silt.total)     1.00   1.00   0.00   0.979  
## s(bank.slope)     1.00   1.00   3.41   0.065 .
## s(area.10cm)      1.00   1.00   0.02   0.880  
## s(weighted.dist)  1.69   2.08   0.86   0.669  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =   0.41   Deviance explained = 49.7%
## UBRE score = 0.15144  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes8.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## significant differnce!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ count.RACApops.1K + s(vegetated.area, k = 7) + s(silt.total, 
##     k = 6) + s(bank.slope, k = 5) + s(area.10cm, k = 5) + s(weighted.dist, 
##     k = 5)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      31.8      28.06                           
## 2      24.6       0.13 7.28     27.9  0.00028 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Include breeding toads in final model

## Now that we know what variables we are using, we need to figure out how to put them all in 
## a useful model. 
fish1 &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;BUBO.breeding +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;count.RACApops.1K +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +
&lt;span class=&quot;st&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes)
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fish1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(bank.slope, 
##     k = 6) + s(vegetated.area, k = 7) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.918      2.071    1.41    0.159  
## BUBO.breedingy      -2.159      1.129   -1.91    0.056 .
## count.RACApops.1K   -0.397      0.383   -1.04    0.300  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(bank.slope)     1.71   2.13   3.99    0.15
## s(vegetated.area) 3.34   3.85   4.20    0.35
## s(weighted.dist)  1.63   2.01   0.99    0.61
## 
## R-sq.(adj) =  0.543   Deviance explained = 58.1%
## UBRE score = 0.017961  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
## Look at AICc of the models we have so far
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;bbmle&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;AICctab&lt;/span&gt;(fishlakes.logr, fishlakes2.logr, fishlakes4.logr, fishlakes5.logr, fishlakes6.logr, fishlakes7.logr, fishlakes8.logr, fish1,  &lt;span class=&quot;dt&quot;&gt;base =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;weights =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;nobs=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(fishlakes))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##                 AICc df               dAICc weight 
## fish1           49.4 9.69075868652962  0.0  0.66781
## fishlakes4.logr 51.4 9.69801565275897  2.0  0.23978
## fishlakes5.logr 55.2 6.94476085279448  5.8  0.03658
## fishlakes8.logr 55.7 10.1502612087597  6.3  0.02826
## fishlakes2.logr 57.2 8.02172340100704  7.8  0.01338
## fishlakes6.logr 58.4 12.4918149689505  9.0  0.00742
## fishlakes7.logr 58.9 12.8639006849105  9.5  0.00570
## fishlakes.logr  62.2 17.4287814751962 12.9  0.00107&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;

## Now we can come up with more models, look for interactions, cross-validate the
## best ones we have so far, or just give up. &lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 
</feed>