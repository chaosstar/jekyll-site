<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Noam Ross - R</title>
 <link href="http://www.noamross.net/blog/R.xml" rel="self"/>
 <link href="http://www.noamross.net"/>
 <updated>2013-01-01T17:38:26-07:00</updated>
 <id>http://www.noamross.net</id>
 <author>
   <name>Noam Ross</name>
   <email>noam.ross@gmail.com</email>
 </author>

 
 <entry>
   <title>Lauren Yamane on Matrix Population Models in R</title>
   <link href="http://www.noamross.net/blog/2012/11/30/lauren-yamane-on-matrix-population-models.html"/>
   <updated>2012-11-30T10:11:17-07:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/30/lauren-yamane-on-matrix-population-models</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;Last week in &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt;, Lauren Yamane showed us how she created and analyzed a stochastic age-structured population in R. Her examples are below. Her original scripts can be found as &lt;code&gt;*.Rmd&lt;/code&gt; files &lt;a href=&quot;https://gist.github.com/4197507&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A note to UC Davis students: This topic and others will be covered by Marissa Baskett and Sebastian Schreiber in their course this winter, &lt;em&gt;Computational methods in population biology&lt;/em&gt; (ECL298)&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id=&quot;a-discrete-time-age-structured-model-of-a-salmon-population-semelparous-that-can-live-to-age-5-with-fishing-and-environmental-stochasticity&quot;&gt;A discrete time, age-structured model of a salmon population (semelparous) that can live to age 5, with fishing and environmental stochasticity&lt;/h2&gt;
&lt;p&gt;Parameter values&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a = &lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#alpha for Beverton-Holt stock-recruitment curve&lt;/span&gt;
b = &lt;span class=&quot;fl&quot;&gt;0.00017&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#beta for Beverton-Holt&lt;/span&gt;
tf = &lt;span class=&quot;dv&quot;&gt;2000&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#number of time steps&lt;/span&gt;
N0 = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#initial population vector for 5 age classes&lt;/span&gt;
s = &lt;span class=&quot;fl&quot;&gt;0.28&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#survival rate with fishing&lt;/span&gt;
e = &lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#fraction of age 3 fish that spawn early (age 4 is mean spawner age)&lt;/span&gt;
l = &lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#fraction of age 4 fish that spawn late as age 5 fish&lt;/span&gt;
sx = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(s, s, (s * (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - e)), (s * (l)))  &lt;span class=&quot;co&quot;&gt;#survival vector for all ages with fishing, spawners die after spawning&lt;/span&gt;
t &amp;lt;- &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#start off at time=1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make a function for the age-structured matrix&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;# Make a function for the age-structured matrix with fishing&lt;/span&gt;
AgeStructMatrix_F = function(sx, a, b, tf, N0) {
    sig_r = &lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;
    ncls = &lt;span class=&quot;kw&quot;&gt;length&lt;/span&gt;(N0)  &lt;span class=&quot;co&quot;&gt;#Number of age classes&lt;/span&gt;
    Nt_F = &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, tf, ncls)  &lt;span class=&quot;co&quot;&gt;#Initialize output matrix with time steps as rows, age classes as columns&lt;/span&gt;
    Nt_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, ] = N0  &lt;span class=&quot;co&quot;&gt;#put initial values into first row of output matrix&lt;/span&gt;
    for (t in &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(tf - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)) {
        &lt;span class=&quot;co&quot;&gt;#for time step t in 1:1999&lt;/span&gt;
        Pt = (e * Nt_F[t, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]) + ((&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - l) * Nt_F[t, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) + Nt_F[t, &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]  &lt;span class=&quot;co&quot;&gt;#number of spawners&lt;/span&gt;
        Nt_F[t + &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] = ((a * Pt)/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; + (b * Pt))) * (&lt;span class=&quot;kw&quot;&gt;exp&lt;/span&gt;(sig_r * &lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;mean =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, 
            &lt;span class=&quot;dt&quot;&gt;sd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)))  &lt;span class=&quot;co&quot;&gt;#number of recruits with environmental stochasticity&lt;/span&gt;
        Nt_F[t + &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:ncls] = sx * Nt_F[t, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:(ncls - &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)]  &lt;span class=&quot;co&quot;&gt;#number of age classes 2-5&lt;/span&gt;
    }
    &lt;span class=&quot;kw&quot;&gt;return&lt;/span&gt;(Nt_F)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run model by calling function&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Nt_F = &lt;span class=&quot;kw&quot;&gt;AgeStructMatrix_F&lt;/span&gt;(sx, a, b, tf, N0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plot of time series with all 5 age classes&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;matplot&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:tf, Nt_F, &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Age-structured model with fishing&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ageclassplot.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Export text file for plot with age classes&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;colnames&lt;/span&gt;(Nt_F) &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Recruits&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age3&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age4&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Age5&amp;quot;&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#Rename columns&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;write.table&lt;/span&gt;(Nt_F, &lt;span class=&quot;st&quot;&gt;&amp;quot;~/Desktop/Nt_F.txt&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;row.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;quote =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#comma separated&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or plot of time series for total population&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;Nt_F_totals = &lt;span class=&quot;kw&quot;&gt;rowSums&lt;/span&gt;(Nt_F)
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:tf), Nt_F_totals, &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;l&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Population size&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;blue&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/totalpopplot.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Export text file for plot with total population&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;write.table&lt;/span&gt;(Nt_F_totals, &lt;span class=&quot;st&quot;&gt;&amp;quot;~/Desktop/Nt_F_totals.txt&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;row.names =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;quote =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;stability-analysis-of-deterministic-population-model&quot;&gt;Stability analysis of deterministic population model&lt;/h2&gt;
&lt;p&gt;This assumes that the partial differential equations that make up the Jacobian matrix have been determined analytically. Below are the parameters that were associated with my age-structured salmon model with fishing. I can compare the stability of the population with fishing to that with no fishing&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;e &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;
l &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.1056&lt;/span&gt;
s &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.28&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#survival with fishing&lt;/span&gt;
s_noF &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.85&lt;/span&gt;  &lt;span class=&quot;co&quot;&gt;#survival with no fishing&lt;/span&gt;
c &amp;lt;- &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/((e * (s^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - e) * (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - l) * (s^&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;) + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - e) * l * (s^&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)))
c_noF &amp;lt;- &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/((e * (s_noF^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - e) * (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - l) * (s_noF^&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;) + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - e) * l * (s_noF^&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)))
alpha &amp;lt;- &lt;span class=&quot;dv&quot;&gt;60&lt;/span&gt;
beta &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.00017&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fishing Jacobian&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;one_F &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((alpha * e)/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * c)) * (-c + alpha + &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c - alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), 
    ((alpha * (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - l))/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * c)) * (-c + alpha + &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c - alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), 
    (alpha/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * c)) * (-c + alpha + &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c - alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))
two_F &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(s, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
three_F &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
four_F &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - e) * s), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
five_F &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, (l * s), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
jacobian_F &amp;lt;- &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(one_F, two_F, three_F, four_F, five_F)
jacobian_F&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#         [,1] [,2]   [,3]     [,4]  [,5]&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# one_F   0.00 0.00 2.5214 21.35558 23.88&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# two_F   0.28 0.00 0.0000  0.00000  0.00&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# three_F 0.00 0.28 0.0000  0.00000  0.00&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# four_F  0.00 0.00 0.2504  0.00000  0.00&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# five_F  0.00 0.00 0.0000  0.02957  0.00&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fishing Eigenvalues&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ev_F &amp;lt;- &lt;span class=&quot;kw&quot;&gt;eigen&lt;/span&gt;(jacobian_F)
ev1_F = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]))
ev2_F = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]))
ev3_F = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]))
ev4_F = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]))
ev5_F = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_F$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No Fishing Jacobian&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;one_noF &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((alpha * e)/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * c_noF)) * (-c_noF + alpha + &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c_noF - 
    alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), ((alpha * (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - l))/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * c_noF)) * (-c_noF + alpha + 
    &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c_noF - alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;), (alpha/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; + (&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;/(&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * c_noF)) * (-c_noF + alpha + 
    &lt;span class=&quot;kw&quot;&gt;sqrt&lt;/span&gt;((c_noF - alpha)^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)))^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))
two_noF &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(s_noF, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
three_noF &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, s_noF, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
four_noF &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, ((&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - e) * s_noF), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
five_noF &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, (l * s_noF), &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
jacobian_noF &amp;lt;- &lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(one_noF, two_noF, three_noF, four_noF, five_noF)
jacobian_noF&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#           [,1] [,2]     [,3]    [,4]   [,5]&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# one_noF   0.00 0.00 0.004625 0.03917 0.0438&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# two_noF   0.85 0.00 0.000000 0.00000 0.0000&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# three_noF 0.00 0.85 0.000000 0.00000 0.0000&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# four_noF  0.00 0.00 0.760240 0.00000 0.0000&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# five_noF  0.00 0.00 0.000000 0.08976 0.0000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No Fishing Eigenvalues&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;ev_noF &amp;lt;- &lt;span class=&quot;kw&quot;&gt;eigen&lt;/span&gt;(jacobian_noF)
ev1_noF = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]))
ev2_noF = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]))
ev3_noF = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]))
ev4_noF = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]))
ev5_noF = &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;Re&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;Im&lt;/span&gt;(ev_noF$values[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]))

&lt;span class=&quot;co&quot;&gt;# Setup for plot, just remember to expand the plot interface first&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(plotrix)  &lt;span class=&quot;co&quot;&gt;#load plotrix&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plot the eigenvalues with legend to compare stability of both deterministic models&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;layout&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;), &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;))  &lt;span class=&quot;co&quot;&gt;#Layout with 2 rows, 3 columns,&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# the matrix tells you the number of the figure in each location. Since&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# the layout is byrow, it fills the first row first and then the 2nd row&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;# no fishing plot&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(ev1_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev1_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;p&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Imaginary&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;title&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;No fishing&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;adj =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#plot dominant eigenvalue, with x-coordinate as real part and y-coordinate as imaginary part&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;draw.circle&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;radius =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;border =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#draw unit circle&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev2_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev2_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#2nd eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev3_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev3_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#3rd eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev4_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev4_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#4th eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev5_noF[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev5_noF[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)  &lt;span class=&quot;co&quot;&gt;#5th eigenvalue&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;h =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;v =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# fishing plot&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(ev1_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev1_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;p&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Real&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Imaginary&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;xlim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;ylim =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(-&lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.25&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;title&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Fishing&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;adj =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;draw.circle&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;radius =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;border =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;black&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev2_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev2_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev3_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev3_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev4_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev4_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(ev5_F[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], ev5_F[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;h =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;abline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;a =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;b =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;v =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)

&lt;span class=&quot;co&quot;&gt;# Legend&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;axes =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;frame.plot =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;title&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Legend&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;adj =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;9.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;7.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;5.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;3.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;text&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;6.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.5&lt;/span&gt;, &lt;span class=&quot;kw&quot;&gt;expression&lt;/span&gt;(lambda[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;9.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;7.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;5.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;3.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;4.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;1.5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;cex =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;1.3&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ploteigenvalues.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;&lt;/p&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>A quick function for editing CSV files in R</title>
   <link href="http://www.noamross.net/blog/2012/11/19/editing-csv-files-in-r.html"/>
   <updated>2012-11-19T13:47:25-07:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/19/editing-csv-files-in-r</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;I’ve been hunting for a lightweight CSV editor for OSX so I could to make fixes to data files and not need to fire up Excel. While you can edit a CSV file in any text editor, it’s a pain to navigate the files without a spreadsheet-like interface. Unfortunately &lt;a href=&quot;http://apple.stackexchange.com/questions/66214/are-there-any-free-and-lightweight-spreadsheet-programs-for-the-mac&quot;&gt;there doesn’t seem to be a good, free option out there&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Today I remembered R has a native XCode editor for editing data frames, and I realized I could write a function that would load the CSV as a data frame, let me edit it, then close and save it in CSV format again. Here’s the function. This is now part of my &lt;code&gt;.Rprofile&lt;/code&gt; file, and makes tweaking data files a snap:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;co&quot;&gt;#&amp;#39; Use the data editor for a CSV file&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; This function loads a CSV file, lets the user edit it in the native data&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; editor, then re-saves it, prompting the user for a new file name if &lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; desired.&lt;/span&gt;
&lt;span class=&quot;co&quot;&gt;#&amp;#39; &lt;/span&gt;
fix.csv &amp;lt;- function(file, &lt;span class=&quot;dt&quot;&gt;new.name=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;,&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;comment.char=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) {
  tmpframe &amp;lt;- &lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(file, &lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;sep,&lt;span class=&quot;dt&quot;&gt;quote=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;colClasses=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;character&amp;quot;&lt;/span&gt;,
                       &lt;span class=&quot;dt&quot;&gt;stringsAsFactors=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;comment.char=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,
                       &lt;span class=&quot;dt&quot;&gt;blank.lines.skip=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;na.strings=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)
  tmpframe &amp;lt;- &lt;span class=&quot;kw&quot;&gt;edit&lt;/span&gt;(tmpframe)
  if(&lt;span class=&quot;kw&quot;&gt;is.character&lt;/span&gt;(new.name)) {
    out.name &amp;lt;- new.name
  } else if(new.name &amp;lt;- &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;) {
    out.name &amp;lt;- &lt;span class=&quot;kw&quot;&gt;readline&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;prompt=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;Enter file name to save (Hit enter to use original):&amp;quot;&lt;/span&gt;)
  } else {
    out.name &amp;lt;- file
  }
  if(out.name==&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;) out.name &amp;lt;- file
  &lt;span class=&quot;kw&quot;&gt;write.table&lt;/span&gt;(tmpframe, &lt;span class=&quot;dt&quot;&gt;file=&lt;/span&gt;out.name, &lt;span class=&quot;dt&quot;&gt;append=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;quote=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;sep,
              &lt;span class=&quot;dt&quot;&gt;row.names=&lt;/span&gt;&lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here it is &lt;a href=&quot;https://gist.github.com/4114258&quot;&gt;as a gist&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This works in RStudio my Mac but unfortunately not when I’m working on my server, because RStudio server doesn’t support a data editor. (I know it’s been requested a few times - let’s hope they add it in!)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;&amp;quot; &lt;a href=&quot;https://twitter.com/davidjayharris&quot;&gt;David Harris&lt;/a&gt; notes that “if you try this on a Mountain Lion Mac without X11/XQuartz, it will cause a fatal error.”&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Simulating Sudden Oak Death Dynamics</title>
   <link href="http://www.noamross.net/blog/2012/11/16/sod-dynamics-1.html"/>
   <updated>2012-11-16T10:22:42-07:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/16/sod-dynamics-1</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;I am working on a project with the &lt;a href=&quot;http://ucanr.edu/sites/rizzolab/&quot;&gt;Rizzo Lab&lt;/a&gt; examining the dynamics of [Sudden Oak Death]. I really have to write more about this, but today I’m just going to post the results of an initial exercise.&lt;/p&gt;
&lt;p&gt;Here I attempt to replicate model results from Cobb et al. (2012). The model in that paper simulates the spread of disease and resulting tree mortality and stand dynamics in a mixed system of tanoak, bay laurel, and redwood. In this system, only tanoak and bay laurel carry the disease, and it mostly only kills tanoak, but all three species compete for space in the forest.&lt;/p&gt;
&lt;p&gt;I’m developing this model as an R package -&lt;code&gt;&amp;quot;SODDr&amp;quot;&lt;/code&gt; (Sudden Oak Death Dynamics in R), to replicate this work, you can install it from github. Note that this is a very rough package and is changing, so you’ll need to install the version specific to this analysis:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(devtools) &lt;span class=&quot;co&quot;&gt;# devtools enables intsallation from alternate code locations&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;install_github&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;SODDr&amp;quot;&lt;/span&gt;,&lt;span class=&quot;st&quot;&gt;&amp;quot;noamross&amp;quot;&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;ref=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;1c139e1f98&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(SODDr)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;My model modifies the original in a few ways. First, it’s designed to be much more flexible, and make it easy to modify the number of species, size classes, and and disease parameters. Secondly, it is in a discrete- rather than continuous-time framework. This will make it easier to include stochasticity down the road, and ultimately fit it to actual data.&lt;/p&gt;
&lt;h2 id=&quot;setup&quot;&gt;Setup&lt;/h2&gt;
&lt;p&gt;First, I load a CSV file of parameters&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;system.file&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;paper_tree_parms_eq.csv&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;package =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;SODDr&amp;quot;&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;stringsAsFactors =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(treeparms.df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##   species ageclass S.mortality I.mortality S.recruit I.recruit
## 1       1        1      0.0061       0.019        NA        NA
## 2       1        2      0.0031       0.022     0.007     0.007
## 3       1        3      0.0011       0.035     0.020     0.020
## 4       1        4      0.0320       0.140     0.073     0.073
## 5       2        1      0.0200       0.020        NA        NA
## 6       3        1      0.0050       0.020        NA        NA
##   S.transition I.transition S.resprout I.resprout recover space
## 1      0.05212      0.05212          0        0.5    0.01    NA
## 2      0.01848      0.01848          0        0.5    0.01    NA
## 3      0.01473      0.01473          0        0.5    0.01    NA
## 4      0.00000      0.00000          0        0.5    0.01    NA
## 5      0.00000      0.00000          0        0.0    0.10     1
## 6      0.00000      0.00000          0        0.0    0.10     1
##            kernel.fn kernel.par1 kernel.par2  S.init I.init waifw1 waifw2
## 1 adjacent.dispersal         0.5       0.125 0.03860      0   0.33   0.33
## 2 adjacent.dispersal         0.5       0.125 0.09785      0   0.32   0.32
## 3 adjacent.dispersal         0.5       0.125 0.11379      0   0.30   0.30
## 4 adjacent.dispersal         0.5       0.125 0.04827      0   0.24   0.24
## 5 adjacent.dispersal         0.5       0.125 0.11550      0   0.30   0.30
## 6 adjacent.dispersal         0.5       0.125 0.32550      0   0.00   0.00
##   waifw3 waifw4 waifw5 waifw6
## 1   0.33   0.33   1.46      0
## 2   0.32   0.32   1.46      0
## 3   0.30   0.30   1.46      0
## 4   0.24   0.24   1.46      0
## 5   0.30   0.30   1.33      0
## 6   0.00   0.00   0.00      0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This data set includes all of the model parameters as defined by Cobb et al. (2012). For each species and age class, there are parameters for mortality, recruitment, transition between classes, the probability of resprouting, and recovering from disease. There are also parameters the the relative amount of space occupied by trees of each species/class.&lt;/p&gt;
&lt;p&gt;For each species/class, the table includes a kernel function to describe dispersal of disease spores from diseased trees, and parameters for that function. The last set of columns represent the “”Who Acquires Infection From Whom&amp;quot; (WAIFW) matrix (Anderson and May 1985), which describes the vulnerability of each class to spores originating from others.&lt;/p&gt;
&lt;p&gt;Note that several values, such as the space occupied by different tanoak size classes, and recruitment rates, are missing. This is because, per the original paper, I calculate these so as to parameterize the model for steady-state conditions in the absence of disease. Here I do that, using equation 8 in the papers’ supplement:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;within&lt;/span&gt;(treeparms.df, {
    &lt;span class=&quot;co&quot;&gt;# Calculate the relative space requirements of tanoak size classes based&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# on initial conditions&lt;/span&gt;
    space[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt; * (&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])/S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])
    
    &lt;span class=&quot;co&quot;&gt;# Set recruitment rates to steady-state levels.  For Redwood and Bay, this&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# is simply the mortality rate divided by the density-dependence&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# coefficient at simulation start.  For tanoak, which has multiple size&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# classes, it&amp;#39;s a but more involved&lt;/span&gt;
    
    S.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;- S.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;- I.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    S.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;- S.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;- I.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    
    A2 &amp;lt;- S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
    A3 &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])) * A2
    A4 &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]/S.mortality[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) * A3
    S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space)) - 
        (S.recruit[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] * A2 + S.recruit[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] * A3 + S.recruit[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] * A4)
    
    
    I.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
    A2 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A3 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A4 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The original model allows only dispersal between adjacent cells, so ameters table calls the dispersal kernel &lt;code&gt;adjacent.dispersal&lt;/code&gt;, and gives two parameters. This function outputs the first parameter when within the cell, the second for dispersal to adjacent cells, and zero for other cells:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(adjacent.dispersal)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## function (distance, local, adjacent) 
## {
##     ifelse(distance &amp;lt; 0.5, local, ifelse(distance &amp;lt; 1.5, adjacent, 
##         0))
## }
## &amp;lt;environment: namespace:SODDr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next I set up the locations in the model. These must be in the form of a matrix with the first column being site numbers, and the second being &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates. &lt;code&gt;MakeLattice&lt;/code&gt; is a convenience function that creates a regularly spaced grid:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;locations &amp;lt;- &lt;span class=&quot;kw&quot;&gt;MakeLattice&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;nx =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ny =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;dist =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;head&lt;/span&gt;(locations)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##      location x y
## [1,]        1 0 0
## [2,]        2 0 1
## [3,]        3 0 2
## [4,]        4 0 3
## [5,]        5 0 4
## [6,]        6 0 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, I create a matrix of initial population values, which should be sized by number of locations by number of species/size classes &lt;em&gt;times 2&lt;/em&gt;. They should be in order of the classes as they appear in the data table, but alternating &lt;img style=&quot;vertical-align:middle&quot; src=&quot;http://latex.codecogs.com/png.latex?\inline S,I,S,I\dots&quot; alt=&quot;S,I,S,I\dots&quot; /&gt;. In this case, initial populations are uniform across the landscape and equal to the &lt;code&gt;init&lt;/code&gt; values from the parameters table.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;initial.vec = &lt;span class=&quot;kw&quot;&gt;as.vector&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(treeparms.df$S.init, treeparms.df$I.init))
init &amp;lt;- &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; initial.vec, &lt;span class=&quot;dt&quot;&gt;nrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(treeparms.df), 
    &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we set the time steps for the model&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;time.steps &amp;lt;- &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;do-it&quot;&gt;Do it!&lt;/h2&gt;
&lt;p&gt;Running &lt;code&gt;SODModel&lt;/code&gt; runs the model and generates a dataframe of population by time, species, size class, and disease status&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;pop.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
&lt;span class=&quot;kw&quot;&gt;str&lt;/span&gt;(pop.df)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## &amp;#39;data.frame&amp;#39;:    480000 obs. of  6 variables:
##  $ Time      : int  1 1 1 1 1 1 1 1 1 1 ...
##  $ Location  : int  1 1 1 1 1 1 1 1 1 1 ...
##  $ Species   : Factor w/ 3 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;: 1 1 1 1 1 1 1 1 2 2 ...
##  $ AgeClass  : Factor w/ 4 levels &amp;quot;1&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;3&amp;quot;,&amp;quot;4&amp;quot;: 1 1 2 2 3 3 4 4 1 1 ...
##  $ Disease   : Factor w/ 2 levels &amp;quot;S&amp;quot;,&amp;quot;I&amp;quot;: 1 2 1 2 1 2 1 2 1 2 ...
##  $ Population: num  0.0386 0 0.0978 0 0.1138 ...&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;results&quot;&gt;Results&lt;/h2&gt;
&lt;p&gt;Here are the results, broken up by species and age class:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(plyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Attaching package: &amp;#39;plyr&amp;#39;

## The following object(s) are masked from &amp;#39;package:twitteR&amp;#39;:
## 
## id&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;pop.df.totals &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
dynamic.plot &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(pop.df.totals, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; TotPop, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; Disease, 
    &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; AgeClass)) + &lt;span class=&quot;kw&quot;&gt;geom_area&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;position =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;stack&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;facet_grid&lt;/span&gt;(~Species)
dynamic.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/initrun.png&quot; alt=&quot;Population dynamics broken up by species (left to right, Tanoak, Bay, Redwood), and Size Class&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Population dynamics broken up by species (left to right, Tanoak, Bay, Redwood), and Size Class&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The plot shows This isn’t quite steady-state, I suspect because of some rounding errors in copying parameters from the paper.&lt;/p&gt;
&lt;p&gt;We can make a plot in the style of Cobb et al. (2012), showing only the populations of small and large tanoaks as a proportion of the total population:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;paper.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; | AgeClass == 
    &lt;span class=&quot;st&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper.plot &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper.df, Species == &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) + &lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() + &lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/papeplot.png&quot; alt=&quot;Tanoak as a fraction of total population over time, no disease&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak as a fraction of total population over time, no disease&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, let’s change the initial conditions to include disease and see what happens. I change the populations of tanoak and bay in one pixel to infectious instead of healthy and run the model:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] &amp;lt;- init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;] &amp;lt;- init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
pop2.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
pop2.df.totals &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop2.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
paper2.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop2.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; | 
    AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, 
    &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper2.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper2.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper2.plot &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper2.df, Species == &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) + &lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() + &lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper2.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/disease1.png&quot; alt=&quot;Tanoak as a fraction of total population, using baseline initial conditions and introducing disease&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak as a fraction of total population, using baseline initial conditions and introducing disease&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Qualitatively, this looks a lot like the original result:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/cobb20124a.png&quot; alt=&quot;Figure 4a from Cobb et al. (2012)&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure 4a from Cobb et al. (2012)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The main difference is the overall rate of change, which is expected because I haven’t corrected any parameters for the change from continuous to discrete time.&lt;/p&gt;
&lt;p&gt;Now I simulate a scenario with mostly tanoak, some redwood, and no bay laurel, with disease, using the parameters previously calulated for the steady state without disease:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df$S.init &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.7&lt;/span&gt; * treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), 
    &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.19&lt;/span&gt;)

initial.vec = &lt;span class=&quot;kw&quot;&gt;as.vector&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(treeparms.df$S.init, treeparms.df$I.init))
init &amp;lt;- &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; initial.vec, &lt;span class=&quot;dt&quot;&gt;nrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(treeparms.df), 
    &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)

init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] &amp;lt;- init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;] &amp;lt;- init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;

treeparms.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;within&lt;/span&gt;(treeparms.df, {
    &lt;span class=&quot;co&quot;&gt;# Calculate the relative space requirements of tanoak size classes based&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# on initial conditions&lt;/span&gt;
    space[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt; * (&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])/S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])
    
    &lt;span class=&quot;co&quot;&gt;# Set recruitment rates to steady-state levels.  For Redwood and Bay, this&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# is simply the mortality rate divided by the density-dependence&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# coefficient at simulation start.  For tanoak, which has multiple size&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# classes, it&amp;#39;s a but more involved&lt;/span&gt;
    
    S.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;- S.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;- I.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    S.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;- S.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;- I.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    
    A2 &amp;lt;- S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
    A3 &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])) * A2
    A4 &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]/S.mortality[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) * A3
    S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space)) - 
        (S.recruit[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] * A2 + S.recruit[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] * A3 + S.recruit[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] * A4)
    
    
    I.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
    A2 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A3 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A4 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
})

pop3.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
pop3.df.totals &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop3.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
paper3.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop3.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; | 
    AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, 
    &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper3.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper3.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper3.plot &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper3.df, Species == &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) + &lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() + &lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper3.plot&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: Removed 5 rows containing missing values (geom_path).&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/disease2.png&quot; alt=&quot;Tanoak dynamics under the Mostly Tanoak scenario&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak dynamics under the “Mostly Tanoak” scenario&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Again, qualitatively similar to the original results:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/cobb2012fig4b.png&quot; alt=&quot;Fig 4b from Cobb et al. (2012)&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Fig 4b from Cobb et al. (2012)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Finally, I simulation the “Mostly Redwwod” scenario:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;treeparms.df$S.init &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.08&lt;/span&gt; * treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(treeparms.df$S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), 
    &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.69&lt;/span&gt;)

initial.vec = &lt;span class=&quot;kw&quot;&gt;as.vector&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;rbind&lt;/span&gt;(treeparms.df$S.init, treeparms.df$I.init))
init &amp;lt;- &lt;span class=&quot;kw&quot;&gt;matrix&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; initial.vec, &lt;span class=&quot;dt&quot;&gt;nrow =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;ncol =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(treeparms.df), 
    &lt;span class=&quot;dt&quot;&gt;byrow =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)

init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] &amp;lt;- init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;] &amp;lt;- init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;]
init[&lt;span class=&quot;dv&quot;&gt;190&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;9&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;

treeparms.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;within&lt;/span&gt;(treeparms.df, {
    &lt;span class=&quot;co&quot;&gt;# Calculate the relative space requirements of tanoak size classes based&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# on initial conditions&lt;/span&gt;
    space[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt; * (&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])/S.init[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;])
    
    &lt;span class=&quot;co&quot;&gt;# Set recruitment rates to steady-state levels.  For Redwood and Bay, this&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# is simply the mortality rate divided by the density-dependence&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# coefficient at simulation start.  For tanoak, which has multiple size&lt;/span&gt;
    &lt;span class=&quot;co&quot;&gt;# classes, it&amp;#39;s a but more involved&lt;/span&gt;
    
    S.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;- S.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;] &amp;lt;- I.mortality[&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    S.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;- S.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    I.recruit[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;] &amp;lt;- I.mortality[&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;]/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space))
    
    A2 &amp;lt;- S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;])
    A3 &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;]/(S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;])) * A2
    A4 &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]/S.mortality[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]) * A3
    S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- (S.transition[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] + S.mortality[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;])/(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt; - &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(S.init * space)) - 
        (S.recruit[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;] * A2 + S.recruit[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;] * A3 + S.recruit[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;] * A4)
    
    
    I.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &amp;lt;- S.recruit[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]
    A2 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A3 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
    A4 &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
})

pop4.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;SODModel&lt;/span&gt;(treeparms.df, locations, time.steps, init)
pop4.df.totals &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(pop4.df, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Disease&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;AgeClass&amp;quot;&lt;/span&gt;), 
    summarise, &lt;span class=&quot;dt&quot;&gt;TotPop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(Population))
paper4.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;transform&lt;/span&gt;(pop4.df.totals, &lt;span class=&quot;dt&quot;&gt;Size =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;ifelse&lt;/span&gt;(AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; | 
    AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Small&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Large&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Species&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;), summarise, 
    &lt;span class=&quot;dt&quot;&gt;SizePop =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(TotPop))
paper4.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(paper4.df, &lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, transform, &lt;span class=&quot;dt&quot;&gt;Pct =&lt;/span&gt; SizePop/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(SizePop))
paper4.plot &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(paper4.df, Species == &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Time, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Pct, 
    &lt;span class=&quot;dt&quot;&gt;lty =&lt;/span&gt; Size)) + &lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;lwd =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;scale_y_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.6&lt;/span&gt;), 
    &lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_x_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;expand =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_linetype_manual&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;values =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, 
    &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;theme_bw&lt;/span&gt;() + &lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;panel.grid.major =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;panel.grid.minor =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;())
paper4.plot&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/disease3.png&quot; alt=&quot;Tanoak dynamics under the mostly redwood scenario&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Tanoak dynamics under the “mostly redwood” scenario&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Success! Same results as the original:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/cobb2012fig4c.png&quot; alt=&quot;Figure 4c from Cobb et al. (2012)&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Figure 4c from Cobb et al. (2012)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Now, for fun, let’s make an animation of how the disease progresses through the stand. I will use the “Mostly Tanoak” scenario&amp;quot;, and plot the adult population as intensity, and the fraction of trees diseased as hue.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;tanspc &amp;lt;- &lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(pop3.df, Species == &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;)
tanspc$Species &amp;lt;- &lt;span class=&quot;ot&quot;&gt;NULL&lt;/span&gt;
tanspc &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ddply&lt;/span&gt;(tanspc, &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Time&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;), function(x) {
    &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;TotTan =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(x$Population[&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(x$AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt; | x$AgeClass == 
        &lt;span class=&quot;st&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;)]), &lt;span class=&quot;dt&quot;&gt;FracDisease =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(x$Population[&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(x$Disease == &lt;span class=&quot;st&quot;&gt;&amp;quot;I&amp;quot;&lt;/span&gt; &amp;amp; (x$AgeClass == 
        &lt;span class=&quot;st&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt; | x$AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;))])/&lt;span class=&quot;kw&quot;&gt;sum&lt;/span&gt;(x$Population[&lt;span class=&quot;kw&quot;&gt;which&lt;/span&gt;(x$AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt; | 
        x$AgeClass == &lt;span class=&quot;st&quot;&gt;&amp;quot;4&amp;quot;&lt;/span&gt;)]))
})
tanspc &amp;lt;- &lt;span class=&quot;kw&quot;&gt;merge&lt;/span&gt;(tanspc, &lt;span class=&quot;kw&quot;&gt;as.data.frame&lt;/span&gt;(locations), &lt;span class=&quot;dt&quot;&gt;by.x =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Location&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;by.y =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;location&amp;quot;&lt;/span&gt;)
dis.limits &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(tanspc$FracDisease), &lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(tanspc$FracDisease))
pop.limits &amp;lt;- &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;min&lt;/span&gt;(tanspc$TotTan), &lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(tanspc$TotTan))
&lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(animation)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Loading required package: animation&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ani.options&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;nmax =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;50&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;loop =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;interval =&lt;/span&gt; &lt;span class=&quot;fl&quot;&gt;0.2&lt;/span&gt;)
for (time in time.steps) {
    &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(tanspc, Time == time), &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; x, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; y, &lt;span class=&quot;dt&quot;&gt;fill =&lt;/span&gt; FracDisease, 
        &lt;span class=&quot;dt&quot;&gt;alpha =&lt;/span&gt; TotTan)) + &lt;span class=&quot;kw&quot;&gt;geom_tile&lt;/span&gt;() + &lt;span class=&quot;kw&quot;&gt;scale_alpha&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;TanoakPopulation&amp;quot;&lt;/span&gt;, 
        &lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;)) + &lt;span class=&quot;kw&quot;&gt;scale_fill_continuous&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Fraction Diseased&amp;quot;&lt;/span&gt;, 
        &lt;span class=&quot;dt&quot;&gt;limits =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;breaks =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;seq&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.25&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;low =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;#408000&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;high =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;#FF8000&amp;quot;&lt;/span&gt;) + 
        &lt;span class=&quot;kw&quot;&gt;theme&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;rect =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;line =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;element_blank&lt;/span&gt;()))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;video   controls=&quot;controls&quot; loop=&quot;loop&quot;&gt;&lt;source src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/tanoakdyn1/tanoak-anim.mp4&quot; type=&quot;video/mp4&quot; /&gt;video of chunk tanoak-anim&lt;/video&gt;&lt;/p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;p&gt;Anderson, R. M., and R. M. May. 1985. Age-related changes in the rate of disease transmission: implications for the design of vaccination programmes. J. Hyg. Camb.&lt;/p&gt;
&lt;p&gt;Cobb, R. C., J. a. N. Filipe, R. K. Meentemeyer, C. a Gilligan, and D. M. Rizzo. 2012. Ecosystem transformation by emerging infectious disease: loss of large tanoak from California forests. Journal of Ecology.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Exploring GAMs with Rosemary Hartman</title>
   <link href="http://www.noamross.net/blog/2012/11/9/gams-for-drug.html"/>
   <updated>2012-11-09T12:49:25-07:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/9/gams-for-drug</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;Today at &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;Davis R Users’ Group&lt;/a&gt;, Rosemary Hartman took us through her work in progress fitting general additive models to organism presence/absence data. Below is her presentation and script. You can get the original script and data &lt;a href=&quot;https://gist.github.com/4048075&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also, check the comments below for some discussion of other options for this type of analysis, such as boosted regression trees.&lt;/p&gt;
&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/15108978&quot; width=&quot;476&quot; height=&quot;400&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot;&gt;&lt;/iframe&gt;


&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## GAMs using mgcv and amphibian presence/absence dataset
## code and data by Rosemary Hartman (rosehartman at gmail dot com)

## First, load the mgcv package (Simon Wood)
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(mgcv)

## Now, attach your data set (or my data set)
fishlakes &amp;lt;- &lt;span class=&quot;kw&quot;&gt;read.csv&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;fishlakes.csv&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;comment.char=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;)

## create a full exploritory model using varibles you think are biologically
## significant (this is pretty subjective, and where you need to use your brain)
## For my data set, I am trying to predict the presence of cascades frogs


fishlakes.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ ## &amp;quot;treatment&amp;quot; = breeding cascades frogs in lake
  BUBO.breeding + ## breeding toads in lake
  count.RACApops.1K +  ##  number of cascades frog populations within 1km
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + ## amount of silt in lake bed
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) + ## total lake area with emergent aquatic vegetation
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + ## total lake area less than 10cm deep
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + ## perportion of nearby water bodies with frogs weighted by distance
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;),  ## average slope
  &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## this is a logistic function since I have binomial data&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes.logr) ## Note, this model explains 68.5% of devience&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(area.10cm, k = 6) + 
##     s(weighted.dist, k = 6) + s(bank.slope, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.830      3.224    1.19    0.235  
## BUBO.breedingy      -3.393      1.646   -2.06    0.039 *
## count.RACApops.1K   -0.192      0.506   -0.38    0.705  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.51    0.47
## s(vegetated.area) 3.48   3.97   3.47    0.48
## s(area.10cm)      2.20   2.66   1.17    0.70
## s(weighted.dist)  2.24   2.73   2.56    0.41
## s(bank.slope)     2.22   2.68   5.02    0.14
## 
## R-sq.(adj) =  0.597   Deviance explained = 68.5%
## UBRE score = 0.091416  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;gam.check&lt;/span&gt;(fishlakes.logr) ## It seems to think my ks are too low, but raising them&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Method: UBRE   Optimizer: outer newton
## full convergence after 14 iterations.
## Gradient range [-4.272e-07,2.326e-07]
## (score 0.09142 &amp;amp; scale 1).
## Hessian positive definite, eigenvalue range [2.564e-07,0.05689].
## 
## Basis dimension (k) checking results. Low p-value (k-index&amp;lt;1) may
## indicate that k is too low, especially if edf is close to k&amp;#39;.
## 
##                      k&amp;#39;   edf k-index p-value
## s(silt.total)     5.000 1.000   0.691    0.02
## s(vegetated.area) 6.000 3.485   1.321    0.97
## s(area.10cm)      5.000 2.200   0.742    0.02
## s(weighted.dist)  5.000 2.237   1.064    0.63
## s(bank.slope)     5.000 2.219   0.965    0.42&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report1.png&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## gives huge overspecification. I&amp;#39;m not sure what to do about this.
&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(fishlakes.logr) ## diagnostic plots for the smooths&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report2.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report3.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report4.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report5.png&quot; /&gt; &lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/gamfigs/gams-for-DRUG-Rmdauto-report6.png&quot; /&gt;&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
## To choose my k&amp;#39;s, I looped through a bunch of different values for k, and basically 
## just played around until my model stopped overspecifying


for (i in &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;8&lt;/span&gt;) { fishlakes.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ count.RACApops.1K + BUBO.breeding + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm,  &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes);
                  x &amp;lt;- &lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes.logr);
                  y &amp;lt;- &lt;span class=&quot;kw&quot;&gt;AIC&lt;/span&gt;(fishlakes.logr);
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(i)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(x)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(y)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: basis dimension, k, increased to minimum possible

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 2
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.011      1.263    2.38    0.017 *
## count.RACApops.1K   -0.247      0.307   -0.80    0.421  
## BUBO.breedingy      -2.314      1.010   -2.29    0.022 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.05    0.82
## s(vegetated.area) 1.00   1.00   0.27    0.61
## s(bank.slope)     1.63   1.86   1.97    0.34
## s(area.10cm)      1.00   1.00   0.04    0.85
## s(weighted.dist)  1.80   1.96   2.34    0.30
## 
## R-sq.(adj) =  0.339   Deviance explained = 42.2%
## UBRE score = 0.21726  Scale est. = 1         n = 42
## [1] 51.12

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 3
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.011      1.263    2.38    0.017 *
## count.RACApops.1K   -0.247      0.307   -0.80    0.421  
## BUBO.breedingy      -2.314      1.010   -2.29    0.022 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.05    0.82
## s(vegetated.area) 1.00   1.00   0.27    0.61
## s(bank.slope)     1.63   1.86   1.97    0.34
## s(area.10cm)      1.00   1.00   0.04    0.85
## s(weighted.dist)  1.80   1.96   2.34    0.30
## 
## R-sq.(adj) =  0.339   Deviance explained = 42.2%
## UBRE score = 0.21726  Scale est. = 1         n = 42
## [1] 51.12

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 4
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.745      1.147    2.39    0.017 *
## count.RACApops.1K   -0.217      0.299   -0.73    0.468  
## BUBO.breedingy      -2.308      0.996   -2.32    0.020 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.06    0.81
## s(vegetated.area) 1.00   1.00   0.31    0.58
## s(bank.slope)     1.77   2.14   2.38    0.33
## s(area.10cm)      1.00   1.00   0.08    0.78
## s(weighted.dist)  1.86   2.25   2.53    0.32
## 
## R-sq.(adj) =  0.332   Deviance explained =   42%
## UBRE score = 0.22873  Scale est. = 1         n = 42
## [1] 51.61

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 5
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          -16.5     4857.1    0.00     1.00
## count.RACApops.1K     42.4      397.8    0.11     0.92
## BUBO.breedingy      -254.6     9152.1   -0.03     0.98
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.00    0.95
## s(vegetated.area) 2.32   2.36   0.00    1.00
## s(bank.slope)     1.52   1.57   0.01    0.99
## s(area.10cm)      3.06   3.07   0.02    1.00
## s(weighted.dist)  4.00   4.00   0.02    1.00
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29037  Scale est. = 1         n = 42
## [1] 29.8

## Warning: matrix not positive definite

## [1] 6
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5608    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86
## [1] 7
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)           6.56     366.37    0.02     0.99
## count.RACApops.1K     4.30      13.89    0.31     0.76
## BUBO.breedingy      -22.94      36.65   -0.63     0.53
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.02    0.88
## s(vegetated.area) 3.50   3.82   0.97    0.90
## s(bank.slope)     1.00   1.00   0.13    0.72
## s(area.10cm)      1.00   1.00   0.61    0.44
## s(weighted.dist)  4.02   4.21   1.32    0.88
## 
## R-sq.(adj) =      1   Deviance explained = 99.7%
## UBRE score = -0.35283  Scale est. = 1         n = 42
## [1] 27.18

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite

## [1] 8
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = i) + s(bank.slope, k = i) + 
##     s(area.10cm, k = i) + s(weighted.dist, k = i)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)         22.752    135.686    0.17     0.87
## count.RACApops.1K   -0.247     23.133   -0.01     0.99
## BUBO.breedingy     -29.877     67.934   -0.44     0.66
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     4.58   4.71   0.09    1.00
## s(vegetated.area) 3.19   3.31   0.01    1.00
## s(bank.slope)     1.00   1.00   0.06    0.80
## s(area.10cm)      2.14   2.23   0.02    0.99
## s(weighted.dist)  3.68   3.87   0.04    1.00
## 
## R-sq.(adj) =      1   Deviance explained = 99.9%
## UBRE score = -0.16157  Scale est. = 1         n = 42
## [1] 35.21&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
for (i in &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;) { fishlakes.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ count.RACApops.1K + BUBO.breeding + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;i) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm,  &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes);
                  x &amp;lt;- &lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes.logr);
                  y &amp;lt;- &lt;span class=&quot;kw&quot;&gt;AIC&lt;/span&gt;(fishlakes.logr);
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(i)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(x)
                  &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(y)
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: basis dimension, k, increased to minimum possible

## Warning: matrix not positive definite

## [1] 2
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5608    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86

## Warning: matrix not positive definite

## [1] 3
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5608    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86
## [1] 4
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)           76.6      427.3    0.18     0.86
## count.RACApops.1K     10.1       51.7    0.20     0.84
## BUBO.breedingy       -89.3      536.3   -0.17     0.87
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.00    0.97
## s(vegetated.area) 2.65   2.70   0.03    1.00
## s(bank.slope)     3.77   3.87   0.12    1.00
## s(area.10cm)      4.51   4.54   0.19    1.00
## s(weighted.dist)  1.87   1.90   0.03    0.98
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.19934  Scale est. = 1         n = 42
## [1] 33.63

## Warning: matrix not positive definite

## [1] 5
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         5.4778     2.5609    2.14    0.032 *
## count.RACApops.1K  -0.0673     0.4763   -0.14    0.888  
## BUBO.breedingy     -4.9379     2.1801   -2.26    0.024 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.14    0.71
## s(vegetated.area) 1.00   1.00   0.38    0.54
## s(bank.slope)     2.14   2.60   3.51    0.25
## s(area.10cm)      5.00   5.00   5.46    0.36
## s(weighted.dist)  2.13   2.64   2.50    0.40
## 
## R-sq.(adj) =  0.523   Deviance explained = 65.4%
## UBRE score = 0.13954  Scale est. = 1         n = 42
## [1] 47.86

## Warning: matrix not positive definite

## [1] 6
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.830      3.224    1.19    0.235  
## count.RACApops.1K   -0.192      0.506   -0.38    0.705  
## BUBO.breedingy      -3.393      1.646   -2.06    0.039 *
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     1.00   1.00   0.51    0.47
## s(vegetated.area) 3.48   3.97   3.47    0.48
## s(bank.slope)     2.22   2.68   4.07    0.21
## s(area.10cm)      2.20   2.66   1.09    0.72
## s(weighted.dist)  2.24   2.73   1.90    0.54
## 
## R-sq.(adj) =  0.597   Deviance explained = 68.5%
## UBRE score = 0.091416  Scale est. = 1         n = 42
## [1] 45.84
## [1] 7
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          55.26     358.87    0.15     0.88
## count.RACApops.1K     5.42      99.67    0.05     0.96
## BUBO.breedingy      -87.21     624.65   -0.14     0.89
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     4.96   4.99   0.09    1.00
## s(vegetated.area) 3.99   4.02   0.02    1.00
## s(bank.slope)     1.00   1.00   0.01    0.93
## s(area.10cm)      1.86   1.96   0.02    0.99
## s(weighted.dist)  1.03   1.03   0.01    0.92
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.24525  Scale est. = 1         n = 42
## [1] 31.7

## Warning: matrix not positive definite

## [1] 8
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          89.75   12140.84    0.01     0.99
## count.RACApops.1K    -3.53    1710.88    0.00     1.00
## BUBO.breedingy     -119.62    9443.72   -0.01     0.99
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     5.76   5.80      0       1
## s(vegetated.area) 2.03   2.04      0       1
## s(bank.slope)     1.18   1.19      0       1
## s(area.10cm)      1.84   1.90      0       1
## s(weighted.dist)  1.08   1.08      0       1
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29122  Scale est. = 1         n = 42
## [1] 29.77
## [1] 9
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)         48.947    655.719    0.07     0.94
## count.RACApops.1K   -0.137     82.969    0.00     1.00
## BUBO.breedingy     -73.934    546.328   -0.14     0.89
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     5.75   5.84   0.02    1.00
## s(vegetated.area) 2.00   2.01   0.01    1.00
## s(bank.slope)     1.00   1.00   0.01    0.91
## s(area.10cm)      1.86   1.95   0.01    0.99
## s(weighted.dist)  1.19   1.21   0.00    0.99
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29492  Scale est. = 1         n = 42
## [1] 29.61
## [1] 10
## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)        54.2952   102.0865    0.53     0.59
## count.RACApops.1K  -0.0411    16.5558    0.00     1.00
## BUBO.breedingy    -75.4705   126.5539   -0.60     0.55
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     6.88   7.06   0.74    1.00
## s(vegetated.area) 3.09   3.16   0.22    0.98
## s(bank.slope)     1.04   1.05   0.22    0.66
## s(area.10cm)      2.42   2.67   0.38    0.92
## s(weighted.dist)  1.00   1.00   0.30    0.58
## 
## R-sq.(adj) =      1   Deviance explained = 99.8%
## UBRE score = -0.16704  Scale est. = 1         n = 42
## [1] 34.98&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
## In order to see which of the candidate terms are significant, I will run the model
## several times, dropping one term out each time and then do a likelyhood ratio test
## to see if adding the term leads to a significant improvement in residual deviance.

## fishlakes2.logr is the same model as fishlakes.logr without the &amp;quot;bank slope&amp;quot; term
fishlakes2.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ BUBO.breeding + count.RACApops.1K +
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;),
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes2.logr) ## This model only explains 34.1% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(area.10cm, k = 6) + 
##     s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.175      0.974    2.23    0.026 *
## BUBO.breedingy      -1.840      0.891   -2.07    0.039 *
## count.RACApops.1K   -0.294      0.290   -1.01    0.311  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(silt.total)     1.00   1.00   3.19   0.074 .
## s(vegetated.area) 1.00   1.00   0.46   0.499  
## s(area.10cm)      1.00   1.00   1.82   0.177  
## s(weighted.dist)  2.02   2.54   2.53   0.375  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =  0.279   Deviance explained = 34.1%
## UBRE score = 0.25725  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes2.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## There is a significant difference&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(area.10cm, k = 6) + 
##     s(weighted.dist, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      34.0       36.8                           
## 2      24.6        0.1 9.41     36.6  4.2e-05 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## in explanitory power between the two models, that means the &amp;quot;bank slope&amp;quot; term
## should be included in the final model

## Now do the same with the rest of the varibles
fishlakes3.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ BUBO.breeding + count.RACApops.1K +&lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;)
                       + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), 
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except &amp;quot;weighted distance&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes3.logr) ## This model is way overspecified (100% of devience explained)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          77.43     282.28    0.27     0.78
## BUBO.breedingy     -120.75     510.54   -0.24     0.81
## count.RACApops.1K     2.83      64.25    0.04     0.96
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(silt.total)     4.77   4.80   0.08    1.00
## s(vegetated.area) 2.15   2.19   0.02    0.99
## s(bank.slope)     1.22   1.25   0.06    0.88
## s(area.10cm)      3.71   3.77   0.06    1.00
## 
## R-sq.(adj) =      1   Deviance explained =  100%
## UBRE score = -0.29299  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes3.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## significant differnce!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)
## 1      27.2      0.008                       
## 2      24.6      0.127 2.59   -0.119         &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Include &amp;quot;weighted distance&amp;quot; in final model

fishlakes4.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ BUBO.breeding +count.RACApops.1K+ 
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) + 
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), 
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except area under 10cm&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes4.logr) ## This model only explains 54.5% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.490      1.851    1.35    0.179  
## BUBO.breedingy      -1.997      1.100   -1.82    0.069 .
## count.RACApops.1K   -0.465      0.373   -1.25    0.213  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(silt.total)     1.00   1.00   0.03   0.852  
## s(vegetated.area) 3.29   3.81   4.86   0.276  
## s(bank.slope)     1.00   1.00   4.12   0.042 *
## s(weighted.dist)  1.40   1.70   0.81   0.591  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =  0.513   Deviance explained = 54.5%
## UBRE score = 0.066475  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes4.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## the difference is not&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(weighted.dist, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)   
## 1      32.3      25.40                          
## 2      24.6       0.13 7.73     25.3   0.0012 **
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## significant, leave &amp;quot;area under 10cm&amp;quot; out of final model

fishlakes5.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ BUBO.breeding + 
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;)+ &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + 
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except number&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## of frog populations within 1km
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes5.logr) ## This model only explains 31.8% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + s(silt.total, k = 6) + s(vegetated.area, 
##     k = 7) + s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)       1.529      0.677    2.26    0.024 *
## BUBO.breedingy   -1.608      0.836   -1.92    0.054 .
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(silt.total)     1.00   1.00   2.76   0.097 .
## s(vegetated.area) 1.00   1.00   0.30   0.583  
## s(area.10cm)      1.00   1.00   1.56   0.212  
## s(weighted.dist)  1.94   2.45   2.26   0.403  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =   0.26   Deviance explained = 31.8%
## UBRE score = 0.23669  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes5.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## significant differnce!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + s(silt.total, k = 6) + s(vegetated.area, 
##     k = 7) + s(area.10cm, k = 6) + s(weighted.dist, k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      35.1       38.1                           
## 2      24.6        0.1 10.5     37.9  5.6e-05 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Include &amp;quot;count RACA pops&amp;quot; in final model

fishlakes6.logr &amp;lt;-&lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ BUBO.breeding + count.RACApops.1K+ 
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), 
                      &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all varibles except vegetated area&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes6.logr) ## This model explains 61.4% of deviance &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          3.967      1.717    2.31    0.021 *
## BUBO.breedingy      -3.711      1.561   -2.38    0.017 *
## count.RACApops.1K   -0.085      0.412   -0.21    0.836  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                   edf Ref.df Chi.sq p-value
## s(silt.total)    1.00   1.00   0.01    0.91
## s(bank.slope)    1.90   2.32   3.93    0.18
## s(area.10cm)     4.67   4.94   6.03    0.30
## s(weighted.dist) 1.93   2.38   2.05    0.43
## 
## R-sq.(adj) =  0.512   Deviance explained = 61.4%
## UBRE score = 0.10827  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes6.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## Only marginally significant&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(silt.total, 
##     k = 6) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      29.5      21.56                           
## 2      24.6       0.13 4.94     21.4  0.00063 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## maybe drop vegetated area out of final model

fishlakes7.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ BUBO.breeding + count.RACApops.1K+  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + 
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except silt
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes7.logr) ## This model explains 63.3% of deviance &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(vegetated.area, 
##     k = 7) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)         4.6494     2.0998    2.21    0.027 *
## BUBO.breedingy     -4.2713     1.8364   -2.33    0.020 *
## count.RACApops.1K  -0.0772     0.4423   -0.17    0.862  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(vegetated.area) 1.00   1.00   0.14   0.707  
## s(bank.slope)     2.01   2.46   6.56   0.058 .
## s(area.10cm)      4.87   4.98   5.87   0.317  
## s(weighted.dist)  1.99   2.44   2.23   0.410  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =  0.524   Deviance explained = 63.3%
## UBRE score = 0.10056  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes7.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## No difference. Definitely&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ BUBO.breeding + count.RACApops.1K + s(vegetated.area, 
##     k = 7) + s(bank.slope, k = 6) + s(area.10cm, k = 6) + s(weighted.dist, 
##     k = 6)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      29.1      20.50                           
## 2      24.6       0.13 4.56     20.4  0.00072 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## drop silt out of final model

fishlakes8.logr &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ count.RACApops.1K+ &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(silt.total, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) +
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(area.10cm, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;), 
                       &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes) ## all variables except toads&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Warning: matrix not positive definite

## Warning: matrix not positive definite

## Warning: matrix not positive definite&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fishlakes8.logr) ## This model only explains 49.7% of deviance&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ count.RACApops.1K + s(vegetated.area, k = 7) + s(silt.total, 
##     k = 6) + s(bank.slope, k = 5) + s(area.10cm, k = 5) + s(weighted.dist, 
##     k = 5)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)
## (Intercept)          1.074      1.926    0.56     0.58
## count.RACApops.1K   -0.338      0.343   -0.99     0.32
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value  
## s(vegetated.area) 3.46   3.97   8.07   0.087 .
## s(silt.total)     1.00   1.00   0.00   0.979  
## s(bank.slope)     1.00   1.00   3.41   0.065 .
## s(area.10cm)      1.00   1.00   0.02   0.880  
## s(weighted.dist)  1.69   2.08   0.86   0.669  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## R-sq.(adj) =   0.41   Deviance explained = 49.7%
## UBRE score = 0.15144  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;anova&lt;/span&gt;(fishlakes8.logr,  fishlakes.logr,  &lt;span class=&quot;dt&quot;&gt;test =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;LRT&amp;quot;&lt;/span&gt;) ## significant differnce!&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Analysis of Deviance Table
## 
## Model 1: treatment ~ count.RACApops.1K + s(vegetated.area, k = 7) + s(silt.total, 
##     k = 6) + s(bank.slope, k = 5) + s(area.10cm, k = 5) + s(weighted.dist, 
##     k = 5)
## Model 2: treatment ~ count.RACApops.1K + BUBO.breeding + s(silt.total, 
##     k = i) + s(vegetated.area, k = 7) + s(bank.slope, k = 6) + 
##     s(area.10cm, k = 6) + s(weighted.dist, k = 6)
##   Resid. Df Resid. Dev   Df Deviance Pr(&amp;gt;Chi)    
## 1      31.8      28.06                           
## 2      24.6       0.13 7.28     27.9  0.00028 ***
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 &lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## Include breeding toads in final model

## Now that we know what variables we are using, we need to figure out how to put them all in 
## a useful model. 
fish1 &amp;lt;- &lt;span class=&quot;kw&quot;&gt;gam&lt;/span&gt;(treatment ~ BUBO.breeding + count.RACApops.1K + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(bank.slope, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(vegetated.area, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;7&lt;/span&gt;) +
  &lt;span class=&quot;kw&quot;&gt;s&lt;/span&gt;(weighted.dist, &lt;span class=&quot;dt&quot;&gt;k=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;6&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;family=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;binomial&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;logit&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;data=&lt;/span&gt; fishlakes)
&lt;span class=&quot;kw&quot;&gt;summary&lt;/span&gt;(fish1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## 
## Family: binomial 
## Link function: logit 
## 
## Formula:
## treatment ~ BUBO.breeding + count.RACApops.1K + s(bank.slope, 
##     k = 6) + s(vegetated.area, k = 7) + s(weighted.dist, k = 6)
## 
## Parametric coefficients:
##                   Estimate Std. Error z value Pr(&amp;gt;|z|)  
## (Intercept)          2.918      2.071    1.41    0.159  
## BUBO.breedingy      -2.159      1.129   -1.91    0.056 .
## count.RACApops.1K   -0.397      0.383   -1.04    0.300  
## ---
## Signif. codes:  0 &amp;#39;***&amp;#39; 0.001 &amp;#39;**&amp;#39; 0.01 &amp;#39;*&amp;#39; 0.05 &amp;#39;.&amp;#39; 0.1 &amp;#39; &amp;#39; 1 
## 
## Approximate significance of smooth terms:
##                    edf Ref.df Chi.sq p-value
## s(bank.slope)     1.71   2.13   3.99    0.15
## s(vegetated.area) 3.34   3.85   4.20    0.35
## s(weighted.dist)  1.63   2.01   0.99    0.61
## 
## R-sq.(adj) =  0.543   Deviance explained = 58.1%
## UBRE score = 0.017961  Scale est. = 1         n = 42&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
## Look at AICc of the models we have so far
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;bbmle&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;AICctab&lt;/span&gt;(fishlakes.logr, fishlakes2.logr, fishlakes4.logr, fishlakes5.logr, fishlakes6.logr, fishlakes7.logr, fishlakes8.logr, fish1,  &lt;span class=&quot;dt&quot;&gt;base =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;weights =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;nobs=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;nrow&lt;/span&gt;(fishlakes))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##                 AICc df               dAICc weight 
## fish1           49.4 9.69075868652962  0.0  0.66781
## fishlakes4.logr 51.4 9.69801565275897  2.0  0.23978
## fishlakes5.logr 55.2 6.94476085279448  5.8  0.03658
## fishlakes8.logr 55.7 10.1502612087597  6.3  0.02826
## fishlakes2.logr 57.2 8.02172340100704  7.8  0.01338
## fishlakes6.logr 58.4 12.4918149689505  9.0  0.00742
## fishlakes7.logr 58.9 12.8639006849105  9.5  0.00570
## fishlakes.logr  62.2 17.4287814751962 12.9  0.00107&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;

## Now we can come up with more models, look for interactions, cross-validate the
## best ones we have so far, or just give up. &lt;/code&gt;&lt;/pre&gt;</content>
 </entry>
 
 <entry>
   <title>Ryan Peek on Customizing Your R Setup</title>
   <link href="http://www.noamross.net/blog/2012/11/2/rprofile.html"/>
   <updated>2012-11-02T11:37:00-06:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/11/2/rprofile</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;&lt;a href=&quot;http://watershed.ucdavis.edu/people/ryan-peek&quot;&gt;Ryan Peek&lt;/a&gt; showed us how to use an &lt;code&gt;.Rprofile&lt;/code&gt; file to customize your R setup. Here are his instructions and script:&lt;/p&gt;
&lt;h2 id=&quot;for-windows&quot;&gt;For Windows&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To change profile for R, go here:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C:\Program Files\R\R-2.15.1\etc&lt;/code&gt; (or whatever version you are using)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;Edit the “Rprofile.site” file&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart R&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;for-macs&quot;&gt;For Macs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create your Rprofile file. -use TextEdit or another editor to create a file called Rprofile.txt&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a terminal window, type:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt; cp Rprofile.txt .Rprofile&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(which copies the visible Rprofile.txt to the invisible .Rprofile)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can check this by doing &lt;code&gt;&amp;gt;ls -la&lt;/code&gt; again to see it in the directory listing.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart R&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that you can save &lt;code&gt;.Rprofile&lt;/code&gt; in your home directory, or, if you are using R Studio, in a &lt;em&gt;project&lt;/em&gt; directory. In the latter case, the profile will only be loaded when you load that project.&lt;/p&gt;
&lt;h3 id=&quot;things-to-put-in-the-.rprofile-file&quot;&gt;Things to put in the &lt;code&gt;.Rprofile&lt;/code&gt; file:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Set a local CRAN Mirror:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;local&lt;/span&gt;({r &amp;lt;- &lt;span class=&quot;kw&quot;&gt;getOption&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;repos&amp;quot;&lt;/span&gt;)
       r[&lt;span class=&quot;st&quot;&gt;&amp;quot;CRAN&amp;quot;&lt;/span&gt;] &amp;lt;- &lt;span class=&quot;st&quot;&gt;&amp;quot;http://cran.cnr.berkeley.edu/&amp;quot;&lt;/span&gt;
       &lt;span class=&quot;kw&quot;&gt;options&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;repos=&lt;/span&gt;r)})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Set machine-specific options:&lt;/em&gt;&lt;/strong&gt; If you use Dropbox or something similar to sync R files across computers, you can use &lt;code&gt;Sys.info()&lt;/code&gt; to set options specifically for your machine. This code sets the root path differently for different machines:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;if(&lt;span class=&quot;kw&quot;&gt;Sys.info&lt;/span&gt;()[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]==&lt;span class=&quot;st&quot;&gt;&amp;quot;Work-PC&amp;quot;&lt;/span&gt;) {
  root&amp;lt;-&lt;span class=&quot;st&quot;&gt;&amp;quot;C://Users//Ryan//Desktop//Dropbox//R//&amp;quot;&lt;/span&gt;
} else if(&lt;span class=&quot;kw&quot;&gt;Sys.info&lt;/span&gt;()[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]==&lt;span class=&quot;st&quot;&gt;&amp;quot;Mac.local&amp;quot;&lt;/span&gt;) {
  root&amp;lt;-&lt;span class=&quot;st&quot;&gt;&amp;quot;/Users/Ryan/Dropbox/R/&amp;quot;&lt;/span&gt;
} else {
  root&amp;lt;-&lt;span class=&quot;st&quot;&gt;&amp;quot;C://Users//rapeek//Dropbox//R//&amp;quot;&lt;/span&gt;
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Set a welcome message and load a file of other useful functions:&lt;/em&gt;&lt;/strong&gt; Anything in the &lt;code&gt;.First&lt;/code&gt; function is run on startup&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;.First &amp;lt;- function(){
    &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;Welcome to R!&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)
    &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;---------------&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)
    
    if(&lt;span class=&quot;kw&quot;&gt;file.exists&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;~/RbasicFunctions_example.r&amp;quot;&lt;/span&gt;)){
        &lt;span class=&quot;kw&quot;&gt;source&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;~/RbasicFunctions_example.r&amp;quot;&lt;/span&gt;)
        &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;RbasicFunctions_example.r was loaded, providing the following functions:&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)
        &lt;span class=&quot;kw&quot;&gt;cat&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;use  &amp;#39;print.functions()&amp;#39;  to view&lt;/span&gt;&lt;span class=&quot;ch&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&lt;/span&gt;,&lt;span class=&quot;dt&quot;&gt;sep=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;helper-functions&quot;&gt;Helper functions&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/4003343&quot;&gt;Here’s Ryan’s file&lt;/a&gt;, called above as &lt;code&gt;RbasicFunctions_example.r&lt;/code&gt;, which has his helper functions. Running &lt;code&gt;print.functions()&lt;/code&gt; will display a list of these with short explanations:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/4003343.js?file=RbasicFunctions_example.r&quot;&gt;&lt;/script&gt;

&lt;p&gt;A lot of other useful options for R profile files are found in &lt;a href=&quot;http://stackoverflow.com/questions/1189759/expert-r-users-whats-in-your-rprofile&quot;&gt;this Stack Overflow discussion&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Chris Hamm on using plot.new() for better combined plots</title>
   <link href="http://www.noamross.net/blog/2012/10/26/plotnew.html"/>
   <updated>2012-10-26T10:41:35-06:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/10/26/plotnew</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;At DRUG today, &lt;a href=&quot;https://www.msu.edu/~chamm/Welcome.html&quot;&gt;Chris Hamm&lt;/a&gt; (&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--
h='&amp;#x75;&amp;#x63;&amp;#100;&amp;#x61;&amp;#118;&amp;#x69;&amp;#x73;&amp;#46;&amp;#x65;&amp;#100;&amp;#x75;';a='&amp;#64;';n='&amp;#x63;&amp;#x61;&amp;#104;&amp;#x61;&amp;#x6d;&amp;#x6d;';e=n+a+h;
document.write('&lt;a h'+'ref'+'=&quot;ma'+'ilto'+':'+e+'&quot;&gt;'+'email'+'&lt;\/'+'a'+'&gt;');
// --&gt;
&lt;/script&gt;&lt;noscript&gt;&amp;#x65;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#108;&amp;#32;&amp;#40;&amp;#x63;&amp;#x61;&amp;#104;&amp;#x61;&amp;#x6d;&amp;#x6d;&amp;#32;&amp;#x61;&amp;#116;&amp;#32;&amp;#x75;&amp;#x63;&amp;#100;&amp;#x61;&amp;#118;&amp;#x69;&amp;#x73;&amp;#32;&amp;#100;&amp;#x6f;&amp;#116;&amp;#32;&amp;#x65;&amp;#100;&amp;#x75;&amp;#x29;&lt;/noscript&gt;) showed us an easier way to combine multiple figures into one plot using &lt;code&gt;plot.new&lt;/code&gt;, rather than &lt;code&gt;par(mfrow=...)&lt;/code&gt; Here’s his script:&lt;/p&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style type=&quot;text/css&quot;&gt;.knitr.inline {
  background-color: #f7f7f7;
  border:solid 1px #B0B0B0;
}
.error {
    font-weight: bold;
    color: #FF0000;
}, 
.warning {
    font-weight: bold;
} 
.message {
    font-style: italic;
} 
.source, .output, .warning, .error, .message {
    padding: 0em 1em;
  border:solid 1px #F7F7F7;
}
.source {
  background-color: #f7f7f7;
}
.rimage.left {
  text-align: left;
}
.rimage.right {
  text-align: right;
}
.rimage.center {
  text-align: center;
}

.source {
  color: #333333;
}
.background {
  color: #F7F7F7;
}

.number {
  color: #000000;
}

.functioncall {
  color: #800054;
  font-weight: bolder;
}

.string {
  color: #9999FF;
}

.keyword {
  font-weight: bolder;
  color: black;
}

.argument {
  color: #B04005;
}

.comment {
  color: #2E9957;
}

.roxygencomment {
  color: #707AB3;
}

.formalargs {
  color: #B04005;
}

.eqformalargs {
  color: #B04005;
}

.assignement {
  font-weight: bolder;
  color: #000000;
}

.package {
  color: #96B525;
}

.slot {
  font-style: italic;
}

.symbol {
  color: #000000;
}

.prompt {
  color: #333333;
}
&lt;/style&gt;
  &lt;title&gt;
A Report Generated by knitr
&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div class=&quot;chunk&quot;&gt;&lt;div class=&quot;rcode&quot;&gt;&lt;div class=&quot;source&quot;&gt;&lt;pre class=&quot;knitr r&quot;&gt;# &lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;() cahamm@ucdavis.edu

&lt;span class=&quot;comment&quot;&gt;#I discovered this plotting method when trying to add an inset figure&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# to a plot&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;# plot.new is part of the traditional graphics. This function starts a new plot with the&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;# scale of the x- and y- axes to (0,1) This allows you to specify the location of each
&lt;span class=&quot;comment&quot;&gt;# pane or inset and provides a high level of customizability for R graphics&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;############### Plotting multiple panes, the old way&lt;/span&gt;
&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(mfrow = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(3, 1))

&lt;span class=&quot;functioncall&quot;&gt;plot&lt;/span&gt;(P2B1$TMP, ylab = &lt;span class=&quot;string&quot;&gt;&quot;Degrees C&quot;&lt;/span&gt;, xlab = &lt;span class=&quot;string&quot;&gt;&quot;3 January - 13 March, 2011&quot;&lt;/span&gt;, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, lty = 1, 
    ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(-25, 15), xaxt = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;, lwd = 2)
&lt;span class=&quot;functioncall&quot;&gt;lines&lt;/span&gt;(P2T1$TMP, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, lty = 2, col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, lwd = 2)
# line at &lt;span class=&quot;functioncall&quot;&gt;DD50&lt;/span&gt; (10C = 50F)
&lt;span class=&quot;functioncall&quot;&gt;legend&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;topleft&quot;&lt;/span&gt;, legend = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Ground Level&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;1m Height&quot;&lt;/span&gt;), col = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;), lty = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(1, 
    2), lwd = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(2, 2), bty = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;)

&lt;span class=&quot;functioncall&quot;&gt;plot&lt;/span&gt;(P2B2$TMP, ylab = &lt;span class=&quot;string&quot;&gt;&quot;Degrees C&quot;&lt;/span&gt;, xlab = &lt;span class=&quot;string&quot;&gt;&quot;13 March - 7 May, 2011&quot;&lt;/span&gt;, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, lty = 1, lwd = 2, 
    ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(-10, 35), xaxt = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;)
&lt;span class=&quot;functioncall&quot;&gt;lines&lt;/span&gt;(P2T2$TMP, col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, lwd = 2, lty = 2)

&lt;span class=&quot;functioncall&quot;&gt;plot&lt;/span&gt;(P2B3$TMP, ylab = &lt;span class=&quot;string&quot;&gt;&quot;Degrees C&quot;&lt;/span&gt;, xlab = &lt;span class=&quot;string&quot;&gt;&quot;7 May - 16 July, 2011&quot;&lt;/span&gt;, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 
    38), xaxt = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;, lwd = 2)
&lt;span class=&quot;functioncall&quot;&gt;lines&lt;/span&gt;(P2T3$TMP, col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, lwd = 2, lty = 2)
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;rimage center&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/figure.plot.new/plot-new-T-Rhtmlauto-report1.png&quot;  class=&quot;plot&quot; /&gt;
&lt;/div&gt;&lt;div class=&quot;rcode&quot;&gt;
&lt;div class=&quot;source&quot;&gt;&lt;pre class=&quot;knitr r&quot;&gt;
&lt;span class=&quot;comment&quot;&gt;#### Using the new way&lt;/span&gt;
&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(mar = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(1, 5, 0, 0))  #set up the margins &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the overall plot
&lt;span class=&quot;functioncall&quot;&gt;quartz&lt;/span&gt;(height = 8, width = 8)
&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1, 0.65, 1), new = T)  #now tell it where you want the new plot, reads x1 x2, y1 &lt;span class=&quot;functioncall&quot;&gt;y2&lt;/span&gt; (left and right bounds, top and bottom bounds)
&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;warning&quot;&gt;&lt;pre class=&quot;knitr r&quot;&gt;## Warning: calling par(new=TRUE) with no plot
&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;source&quot;&gt;&lt;pre class=&quot;knitr r&quot;&gt;&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(mar = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(3, 6, 1, 1))  #set the margins &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; the new plot
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
&lt;span class=&quot;functioncall&quot;&gt;plot&lt;/span&gt;(P2B1$TMP, ylab = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, xlab = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, lty = 1, ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(-25, 15), xaxt = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;, lwd = 3, 
    las = 1, bty = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, cex.axis = 1.5)
&lt;span class=&quot;functioncall&quot;&gt;mtext&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;3 January - 13 March, 2011&quot;&lt;/span&gt;, side = 1, line = 0.5, adj = 0.5, cex = 1.5)
&lt;span class=&quot;functioncall&quot;&gt;lines&lt;/span&gt;(P2T1$TMP, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, lty = 4, col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, lwd = 2)
&lt;span class=&quot;functioncall&quot;&gt;legend&lt;/span&gt;(x = 0, y = 19, legend = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;1m Height&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Ground Level&quot;&lt;/span&gt;), col = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;), lty = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(4, 
    1), lwd = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(3, 2), bty = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;)

&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1, 0.35, 0.7), new = T)
&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(mar = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(3, 6, 1, 1))
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
&lt;span class=&quot;functioncall&quot;&gt;plot&lt;/span&gt;(P2B2$TMP, ylab = (&lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;functioncall&quot;&gt;Temperature&lt;/span&gt; (&quot;&lt;/span&gt;, degree, &lt;span class=&quot;string&quot;&gt;&quot;C)&quot;&lt;/span&gt;))), xlab = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, 
    lty = 1, lwd = 3, ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(-10, 35), xaxt = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;, bty = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, las = 1, cex.axis = 1.5, cex.lab = 1.5)
&lt;span class=&quot;functioncall&quot;&gt;lines&lt;/span&gt;(P2T2$TMP, col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, lwd = 2, lty = 4)
&lt;span class=&quot;functioncall&quot;&gt;mtext&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;13 March - 7 May, 2011&quot;&lt;/span&gt;, side = 1, line = 0.5, adj = 0.5, cex = 1.5)

&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1, 0, 0.35), new = T)
&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(mar = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(3, 6, 1, 1))
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
&lt;span class=&quot;functioncall&quot;&gt;plot&lt;/span&gt;(P2B3$TMP, ylab = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, xlab = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, type = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, lty = 1, ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 38), xaxt = &lt;span class=&quot;string&quot;&gt;&quot;n&quot;&lt;/span&gt;, lwd = 3, 
    las = 1, bty = &lt;span class=&quot;string&quot;&gt;&quot;l&quot;&lt;/span&gt;, cex.axis = 1.5)
&lt;span class=&quot;functioncall&quot;&gt;lines&lt;/span&gt;(P2T3$TMP, col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, lwd = 2, lty = 4)
&lt;span class=&quot;functioncall&quot;&gt;mtext&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;7 May - 16 July, 2011&quot;&lt;/span&gt;, side = 1, line = 0.5, adj = 0.5, cex = 1.5)
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;rimage center&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/figure.plot.new/plot-new-T-Rhtmlauto-report2.png&quot;  class=&quot;plot&quot; /&gt;
&lt;/div&gt;&lt;div class=&quot;rcode&quot;&gt;
&lt;div class=&quot;source&quot;&gt;&lt;pre class=&quot;knitr r&quot;&gt;
&lt;span class=&quot;comment&quot;&gt;############# Puting it all together&lt;/span&gt;
&lt;span class=&quot;functioncall&quot;&gt;library&lt;/span&gt;(MASS)
&lt;span class=&quot;functioncall&quot;&gt;library&lt;/span&gt;(MCMCpack)
&lt;span class=&quot;functioncall&quot;&gt;library&lt;/span&gt;(compositions)
&lt;span class=&quot;functioncall&quot;&gt;library&lt;/span&gt;(grDevices)

w &amp;lt;- &lt;span class=&quot;functioncall&quot;&gt;rdirichlet&lt;/span&gt;(50000, &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(5, 0.5, 2))
&lt;span class=&quot;functioncall&quot;&gt;colnames&lt;/span&gt;(w) &amp;lt;- &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;)
ind1 &amp;lt;- &lt;span class=&quot;functioncall&quot;&gt;rmultinom&lt;/span&gt;(1, 40, w[1, ])
ind2 &amp;lt;- &lt;span class=&quot;functioncall&quot;&gt;rmultinom&lt;/span&gt;(1, 22, w[2, ])



&lt;span class=&quot;functioncall&quot;&gt;quartz&lt;/span&gt;(width = 6.8, height = 4.5)
&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0.4, 0.6, 0.75, 0.95), mar = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 0, 0, 0))
&lt;span class=&quot;functioncall&quot;&gt;plot.rcomp&lt;/span&gt;(w, col = &lt;span class=&quot;functioncall&quot;&gt;rgb&lt;/span&gt;(1, 0, 0, 0.1), pch = &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt;, labels = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;))

&lt;span class=&quot;comment&quot;&gt;# Individual count data&lt;/span&gt;
&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1, 0.1, 0.3), new = &lt;span class=&quot;keyword&quot;&gt;TRUE&lt;/span&gt;)
# &lt;span class=&quot;functioncall&quot;&gt;plot.window&lt;/span&gt;(xlim=&lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0,1),ylim=&lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0,0.75))
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
# &lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.2,0.2,&lt;span class=&quot;string&quot;&gt;'x'&lt;/span&gt;,font=3,family=&lt;span class=&quot;string&quot;&gt;'Arial'&lt;/span&gt;,cex=2)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.1, 0.6, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;1A&quot;&lt;/span&gt;)]) == 36), pos = 4)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.1, 0.4, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;1B&quot;&lt;/span&gt;)]) == 1), pos = 4)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.1, 0.2, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;1C&quot;&lt;/span&gt;)]) == 3), pos = 4)

&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.4, 0.6, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;2A&quot;&lt;/span&gt;)]) == 15), pos = 4)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.4, 0.4, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;2B&quot;&lt;/span&gt;)]) == 3), pos = 4)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.4, 0.2, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;2C&quot;&lt;/span&gt;)]) == 11), pos = 4)

&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.74, 0.6, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;iA&quot;&lt;/span&gt;)]) == 13), pos = 4)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.74, 0.4, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;iB&quot;&lt;/span&gt;)]) == 4), pos = 4)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.74, 0.2, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(x[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;iC&quot;&lt;/span&gt;)]) == 5), pos = 4)


&lt;span class=&quot;comment&quot;&gt;# individual probs given count data&lt;/span&gt;
Px1 &amp;lt;- &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(36, 1, 3)/40
Px2 &amp;lt;- &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(15, 3, 11)/29
Px3 &amp;lt;- &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(13, 4, 5)/22

&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0.15, 0.25, 0.4, 0.6), new = &lt;span class=&quot;keyword&quot;&gt;TRUE&lt;/span&gt;)
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
&lt;span class=&quot;functioncall&quot;&gt;barplot&lt;/span&gt;(Px1, names.arg = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;), ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1), col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, cex.axis = 0.5, cex.names = 0.75, 
    las = 1)
&lt;span class=&quot;functioncall&quot;&gt;mtext&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A  B  C&quot;&lt;/span&gt;, side = 1)
&lt;span class=&quot;functioncall&quot;&gt;abline&lt;/span&gt;(h = 0, lwd = 2)

&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0.43, 0.53, 0.4, 0.6), new = &lt;span class=&quot;keyword&quot;&gt;TRUE&lt;/span&gt;)
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
&lt;span class=&quot;functioncall&quot;&gt;barplot&lt;/span&gt;(Px2, names.arg = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;), ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1), col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, cex.axis = 0.5, cex.names = 0.75, 
    las = 1)
&lt;span class=&quot;functioncall&quot;&gt;mtext&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A  B  C&quot;&lt;/span&gt;, side = 1)
&lt;span class=&quot;functioncall&quot;&gt;abline&lt;/span&gt;(h = 0, lwd = 2)

&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0.74, 0.84, 0.4, 0.6), new = &lt;span class=&quot;keyword&quot;&gt;TRUE&lt;/span&gt;)
# &lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig=&lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0.71,0.81,0.4,0.6),new=&lt;span class=&quot;keyword&quot;&gt;TRUE&lt;/span&gt;)
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
&lt;span class=&quot;functioncall&quot;&gt;barplot&lt;/span&gt;(Px3, names.arg = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;), ylim = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1), col = &lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;, cex.axis = 0.5, cex.names = 0.75, 
    las = 1)
&lt;span class=&quot;functioncall&quot;&gt;mtext&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;A  B  C&quot;&lt;/span&gt;, side = 1)
&lt;span class=&quot;functioncall&quot;&gt;abline&lt;/span&gt;(h = 0, lwd = 2)

&lt;span class=&quot;functioncall&quot;&gt;par&lt;/span&gt;(fig = &lt;span class=&quot;functioncall&quot;&gt;c&lt;/span&gt;(0, 1, 0, 1), new = &lt;span class=&quot;keyword&quot;&gt;TRUE&lt;/span&gt;)
&lt;span class=&quot;functioncall&quot;&gt;plot.new&lt;/span&gt;()
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.62, 0.51, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(...), pos = 2, cex = 2)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.08, 0.5, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(Px[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;1j&quot;&lt;/span&gt;, sep = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)]) == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;), pos = 2, cex = 1)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.38, 0.5, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(Px[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;2j&quot;&lt;/span&gt;, sep = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)]) == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;), pos = 2, cex = 1)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.71, 0.5, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(Px[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;ij&quot;&lt;/span&gt;, sep = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)]) == &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;), pos = 2, cex = 1)
# &lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.68,0.5,&lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(Px[&lt;span class=&quot;functioncall&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;'ij'&lt;/span&gt;,sep=&lt;span class=&quot;string&quot;&gt;''&lt;/span&gt;)])==&lt;span class=&quot;string&quot;&gt;''&lt;/span&gt;),pos=2,cex=1)

&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.04, 0.22, &lt;span class=&quot;string&quot;&gt;&quot;Individual\ncounts&quot;&lt;/span&gt;, pos = 1, cex = 1)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(-0.05, 0.65, &lt;span class=&quot;string&quot;&gt;&quot;Individual probabilities&quot;&lt;/span&gt;, pos = 4, cex = 1)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.04, 0.87, &lt;span class=&quot;string&quot;&gt;&quot;Population&quot;&lt;/span&gt;, pos = 1, cex = 1)

&lt;span class=&quot;functioncall&quot;&gt;arrows&lt;/span&gt;(0.16, 0.23, 0.16, 0.33, angle = 20, length = 0.15, lwd = 2)
&lt;span class=&quot;functioncall&quot;&gt;arrows&lt;/span&gt;(0.46, 0.23, 0.46, 0.33, angle = 20, length = 0.15, lwd = 2)
&lt;span class=&quot;functioncall&quot;&gt;arrows&lt;/span&gt;(0.795, 0.23, 0.795, 0.33, angle = 20, length = 0.15, lwd = 2)

&lt;span class=&quot;functioncall&quot;&gt;arrows&lt;/span&gt;(0.53, 0.75, 0.7, 0.63, angle = 20, length = 0.15, lwd = 2, code = 3)
&lt;span class=&quot;functioncall&quot;&gt;arrows&lt;/span&gt;(0.47, 0.75, 0.3, 0.63, angle = 20, length = 0.15, lwd = 2, code = 3)
&lt;span class=&quot;functioncall&quot;&gt;arrows&lt;/span&gt;(0.5, 0.75, 0.5, 0.63, angle = 20, length = 0.15, lwd = 2, code = 3)

&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.72, 0.89, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(alpha[&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;]) == &lt;span class=&quot;string&quot;&gt;&quot;5.0&quot;&lt;/span&gt;), pos = 1, cex = 1)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.72, 0.85, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(alpha[&lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt;]) == &lt;span class=&quot;string&quot;&gt;&quot;0.5&quot;&lt;/span&gt;), pos = 1, cex = 1)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.72, 0.81, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;italic&lt;/span&gt;(alpha[&lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;]) == &lt;span class=&quot;string&quot;&gt;&quot;2.0&quot;&lt;/span&gt;), pos = 1, cex = 1)

&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.92, 0.65, &lt;span class=&quot;string&quot;&gt;&quot;Multinomial&quot;&lt;/span&gt;)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.94, 0.87, &lt;span class=&quot;string&quot;&gt;&quot;Dirichlet&quot;&lt;/span&gt;)

&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.083, 0.95, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;underline&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hierarchical level&quot;&lt;/span&gt;)), cex = 1.2)
&lt;span class=&quot;functioncall&quot;&gt;text&lt;/span&gt;(0.89, 0.95, &lt;span class=&quot;functioncall&quot;&gt;expression&lt;/span&gt;(&lt;span class=&quot;functioncall&quot;&gt;underline&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Modeled distribution&quot;&lt;/span&gt;)), cex = 1.2)
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;rimage center&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/figure.plot.new/plot-new-T-Rhtmlauto-report3.png&quot;  class=&quot;plot&quot; /&gt;
&lt;/div&gt;&lt;div class=&quot;rcode&quot;&gt;
&lt;div class=&quot;source&quot;&gt;&lt;pre class=&quot;knitr r&quot;&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
 </entry>
 
 <entry>
   <title>Stella Copeland's Intro to Mixed Models in R</title>
   <link href="http://www.noamross.net/blog/2012/10/19/stella-copeland-on-mixed-models.html"/>
   <updated>2012-10-19T10:26:56-06:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/10/19/stella-copeland-on-mixed-models</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;In D-RUG today, &lt;a href=&quot;http://www.des.ucdavis.edu/faculty/Harrison/people/stella/copeland.html&quot;&gt;Stella Copeland&lt;/a&gt; gave a quick introduction to mixed models in R. Here’s the script that she presented:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/3919839.js?file=Mixed models R code - 10192012&quot;&gt;&lt;/script&gt;

&lt;p&gt;Get the data file for this script &lt;a href=&quot;https://gist.github.com/3919839#file_mixed_model_ex_data&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Stella also recommends &lt;a href=&quot;http://dx.doi.org/10.1016/j.tree.2008.10.008&quot;&gt;this paper&lt;/a&gt; by &lt;a href=&quot;http://www.math.mcmaster.ca/~bolker/&quot;&gt;Ben Bolker&lt;/a&gt; as a quick introduction to the topic.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>A quick introduction to ggplot()</title>
   <link href="http://www.noamross.net/blog/2012/10/5/ggplot-introduction.html"/>
   <updated>2012-10-05T12:05:10-06:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/10/5/ggplot-introduction</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;&lt;em&gt;I gave a short talk today to the [Davis R Users’ Group] about ggplot. This what I presented. Additional resources &lt;a href=&quot;#some-resources&quot;&gt;at the bottom of this post&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ggplot&lt;/code&gt; is an R package for data exploration and producing plots. It produces fantastic-looking graphics and allows one to slice and dice one’s data in many different ways.&lt;/p&gt;
&lt;h3 id=&quot;comparing-with-base-graphics&quot;&gt;Comparing with base graphics&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;(This example from &lt;a href=&quot;http://stackoverflow.com/questions/11679019/recreating-a-ggplot2-geom-point-using-base-graphics&quot;&gt;Stack Overflow&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;First, get the package:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;install.packages&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ggplot2&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(ggplot2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s say we wanted to plot some two-variable data, changing color and shape by the sub-category of data. Here’s a data set:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;data.df &amp;lt;- &lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Plant =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Plant1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Plant1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Plant1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Plant2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Plant2&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;st&quot;&gt;&amp;quot;Plant2&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Type =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Axis1 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.2&lt;/span&gt;, -&lt;span class=&quot;fl&quot;&gt;0.4&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.8&lt;/span&gt;, -&lt;span class=&quot;fl&quot;&gt;0.2&lt;/span&gt;, -&lt;span class=&quot;fl&quot;&gt;0.7&lt;/span&gt;, 
    &lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;Axis2 =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;, -&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;, -&lt;span class=&quot;fl&quot;&gt;0.3&lt;/span&gt;, -&lt;span class=&quot;fl&quot;&gt;0.1&lt;/span&gt;, -&lt;span class=&quot;fl&quot;&gt;0.8&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using normal R graphics, we might do this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;color_foo &amp;lt;- &lt;span class=&quot;kw&quot;&gt;colorRampPalette&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;lightblue&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;darkblue&amp;quot;&lt;/span&gt;))
colors &amp;lt;- &lt;span class=&quot;kw&quot;&gt;color_foo&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;)

&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;range&lt;/span&gt;(data.df[, &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;]), &lt;span class=&quot;kw&quot;&gt;range&lt;/span&gt;(data.df[, &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]), &lt;span class=&quot;dt&quot;&gt;xlab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Axis 1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;ylab =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Axis 2&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;n&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(data.df$Axis1, data.df$Axis2, &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)[data.df$Plant], &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; colors[data.df$Type])
&lt;span class=&quot;kw&quot;&gt;legend&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;topright&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;legend =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Plant1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Plant2&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;legend&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;bottomright&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;legend =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Type1&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Type2&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;Type3&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; colors)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-4.png&quot; alt=&quot;plot of chunk unnamed-chunk-4&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-4&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;With &lt;code&gt;ggplot&lt;/code&gt;, you just do this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(data.df, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; Axis1, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; Axis2, &lt;span class=&quot;dt&quot;&gt;shape =&lt;/span&gt; Plant, &lt;span class=&quot;dt&quot;&gt;color =&lt;/span&gt; Type)) + &lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;size =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-5.png&quot; alt=&quot;plot of chunk unnamed-chunk-5&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-5&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;And it looks much better!&lt;/p&gt;
&lt;p&gt;But &lt;code&gt;ggplot()&lt;/code&gt; really shines when you have a lot of data. Here’s an example of some fish survey data that I produced with it:&lt;/p&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/cohortplot.png&quot; alt=&quot;Sacramento splittail surveyed in Suisun Marsh, 1979-2011, data from Peter Moyle and Teejay O’Rear&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Sacramento splittail surveyed in Suisun Marsh, 1979-2011, data from Peter Moyle and Teejay O’Rear&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;tutorial&quot;&gt;Tutorial&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ggplot&lt;/code&gt; is best used on data in data frame form. Let’s look at a data set already in R, this about the sleep habits of different animal species&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;head&lt;/span&gt;(msleep)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##                         name      genus  vore        order conservation
## 1                    Cheetah   Acinonyx carni    Carnivora           lc
## 2                 Owl monkey      Aotus  omni     Primates         &amp;lt;NA&amp;gt;
## 3            Mountain beaver Aplodontia herbi     Rodentia           nt
## 4 Greater short-tailed shrew    Blarina  omni Soricomorpha           lc
## 5                        Cow        Bos herbi Artiodactyla domesticated
## 6           Three-toed sloth   Bradypus herbi       Pilosa         &amp;lt;NA&amp;gt;
##   sleep_total sleep_rem sleep_cycle awake brainwt  bodywt
## 1        12.1        NA          NA  11.9      NA  50.000
## 2        17.0       1.8          NA   7.0 0.01550   0.480
## 3        14.4       2.4          NA   9.6      NA   1.350
## 4        14.9       2.3      0.1333   9.1 0.00029   0.019
## 5         4.0       0.7      0.6667  20.0 0.42300 600.000
## 6        14.4       2.2      0.7667   9.6      NA   3.850&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, lets start with a basic plot. Let’s create a scatterplot of body weight against total hours sleep:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; msleep, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; bodywt, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; sleep_total))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;()
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Body Weight&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Total Hours Sleep&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ggtitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Some Sleep Data&amp;quot;&lt;/span&gt;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-7.png&quot; alt=&quot;plot of chunk unnamed-chunk-7&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-7&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let’s parse what we just did. The &lt;code&gt;ggplot()&lt;/code&gt; command creates a plot object. In it we assigned a data set. &lt;code&gt;aes()&lt;/code&gt; creates what Hadley Wickham calls an &lt;em&gt;aesthetic&lt;/em&gt;: a mapping of variables to various parts of the plot.&lt;/p&gt;
&lt;p&gt;We then add components to the plot. &lt;code&gt;geom_point()&lt;/code&gt; adds a layer of points, using the base aesthetic mapping. The third line adds labels. Typing the variable name &lt;code&gt;a&lt;/code&gt; displays the plot. Alternately, one can use the command &lt;code&gt;ggsave()&lt;/code&gt; to save the plot as a file, as in&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;ggsave&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;sleepplot.png&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;plot =&lt;/span&gt; a, &lt;span class=&quot;dt&quot;&gt;width =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;height =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, one of the great things we can do with &lt;code&gt;ggplot&lt;/code&gt; is slice the data different ways. For instance, we can plot another variable against color:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; msleep, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; bodywt, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; sleep_total, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; vore))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;()
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Body Weight&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Total Hours Sleep&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ggtitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Some Sleep Data&amp;quot;&lt;/span&gt;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-9.png&quot; alt=&quot;plot of chunk unnamed-chunk-9&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-9&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can also use map &lt;em&gt;size&lt;/em&gt; and &lt;em&gt;alpha&lt;/em&gt; (transparency) to variables.&lt;/p&gt;
&lt;p&gt;We can transform variables directly in the &lt;code&gt;ggplot&lt;/code&gt; call, as well:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; msleep, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(bodywt), &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; sleep_rem/sleep_total, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; vore))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;()
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Log Body Weight&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Fraction of Sleep that is REM&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ggtitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Some Sleep Data&amp;quot;&lt;/span&gt;) + 
    &lt;span class=&quot;kw&quot;&gt;scale_color_discrete&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Trophic Level&amp;quot;&lt;/span&gt;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-10.png&quot; alt=&quot;plot of chunk unnamed-chunk-10&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-10&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Within the &lt;code&gt;geom&lt;/code&gt; calls, we can change plotting options&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; msleep, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(bodywt), &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; sleep_rem/sleep_total, &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; vore))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;size =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Log Body Weight&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Fraction of Sleep that is REM&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ggtitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Some Sleep Data&amp;quot;&lt;/span&gt;) + 
    &lt;span class=&quot;kw&quot;&gt;scale_color_discrete&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Trophic Level&amp;quot;&lt;/span&gt;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-11.png&quot; alt=&quot;plot of chunk unnamed-chunk-11&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-11&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Another way to split up the way we look at data is with &lt;em&gt;facets&lt;/em&gt;. These break up the plot into multiple plots. If you are splitting the plot up by one variable, use &lt;code&gt;facet_wrap&lt;/code&gt;. If you are using two variables, use &lt;code&gt;facet_grid&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; msleep, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(bodywt), &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; sleep_rem/sleep_total))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;size =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;5&lt;/span&gt;)
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;facet_wrap&lt;/span&gt;(~vore)
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Log Body Weight&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Fraction of Sleep that is REM&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ggtitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Some Sleep Data&amp;quot;&lt;/span&gt;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-12.png&quot; alt=&quot;plot of chunk unnamed-chunk-12&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-12&lt;/p&gt;
&lt;/div&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; msleep, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;log&lt;/span&gt;(bodywt), &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; sleep_rem/sleep_total))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_point&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;size =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;)
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;facet_grid&lt;/span&gt;(conservation ~ vore)
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;xlab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Log Body Weight&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ylab&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Fraction of Sleep that is REM&amp;quot;&lt;/span&gt;) + &lt;span class=&quot;kw&quot;&gt;ggtitle&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Some Sleep Data&amp;quot;&lt;/span&gt;)
a&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-13.png&quot; alt=&quot;plot of chunk unnamed-chunk-13&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-13&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let’s use a different data set to so line plots:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;head&lt;/span&gt;(economics)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;##         date   pce    pop psavert uempmed unemploy
## 1 1967-06-30 507.8 198712     9.8     4.5     2944
## 2 1967-07-31 510.9 198911     9.8     4.7     2945
## 3 1967-08-31 516.7 199113     9.0     4.6     2958
## 4 1967-09-30 513.3 199311     9.8     4.9     3143
## 5 1967-10-31 518.5 199498     9.7     4.7     3066
## 6 1967-11-30 526.2 199657     9.4     4.8     3018&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; economics, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; date, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; unemploy))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;()
a&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-14.png&quot; alt=&quot;plot of chunk unnamed-chunk-14&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-14&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We can add statistical transformations to this series, for instance:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;a &amp;lt;- &lt;span class=&quot;kw&quot;&gt;ggplot&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;data =&lt;/span&gt; economics, &lt;span class=&quot;kw&quot;&gt;aes&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x =&lt;/span&gt; date, &lt;span class=&quot;dt&quot;&gt;y =&lt;/span&gt; unemploy))
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_line&lt;/span&gt;()
a &amp;lt;- a + &lt;span class=&quot;kw&quot;&gt;geom_smooth&lt;/span&gt;()
a&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;## geom_smooth: method=&amp;quot;auto&amp;quot; and size of largest group is &amp;lt;1000, so using
## loess. Use &amp;#39;method = x&amp;#39; to change the smoothing method.&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/ggplotfigs/unnamed-chunk-15.png&quot; alt=&quot;plot of chunk unnamed-chunk-15&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;plot of chunk unnamed-chunk-15&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id=&quot;some-resources&quot;&gt;Some resources:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ggplot2.org/&quot;&gt;The main ggplot website, including documentation and excerpts from the book&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Note that that the full book is not available at that website. However you can get it online via the UCD library &lt;a href=&quot;http://dx.doi.org/10.1007/978-0-387-98141-3&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The &lt;a href=&quot;http://learnr.wordpress.com/&quot;&gt;Learn R&lt;/a&gt; blog has some great examples.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://sape.inf.usi.ch/quick-reference/ggplot2&quot;&gt;A quick reference website that’s easier to understand than the documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.echen.me/2012/01/17/quick-introduction-to-ggplot2/&quot;&gt;A quick intro on a blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hadley/ggplot2/wiki/-opts()-List&quot;&gt;A key to the many obscure display options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The latest version of ggplot has an updated “themes” system by which you can modify many aspects of the cart just by adding &lt;code&gt;+ theme_x()&lt;/code&gt;. Details &lt;a href=&quot;http://sape.inf.usi.ch/quick-reference/ggplot2/themes&quot;&gt;here&lt;/a&gt; and updates in the new version &lt;a href=&quot;https://github.com/wch/ggplot2/wiki/New-theme-system&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Some &lt;a href=&quot;https://github.com/jrnold/ggthemes&quot;&gt;nice themes&lt;/a&gt; and an &lt;a href=&quot;http://stackoverflow.com/questions/12675147/how-can-we-make-xkcd-style-graphs-in-r&quot;&gt;XKCD theme!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>An R Users' Group in Davis</title>
   <link href="http://www.noamross.net/blog/2012/9/24/a-new-r-users--group.html"/>
   <updated>2012-09-24T11:05:27-06:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/9/24/a-new-r-users--group</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;I’m excited to share that we’ve started a new R users’ group at UC Davis! Right now our main purpose is to run weekly 2-hour work/hack sessions where R users can get together to work through problems together. More info &lt;a href=&quot;http://www.noamross.net/davis-r-users-group.html&quot;&gt;here&lt;/a&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Exploring Pollen Data</title>
   <link href="http://www.noamross.net/blog/2012/4/2/exploring-pollen-data-knit.html"/>
   <updated>2012-04-02T15:06:18-06:00</updated>
   <id>hhttp://www.noamross.net/blog/2012/4/2/exploring-pollen-data-knit</id>
   <content type="html">&lt;head&gt;
  &lt;style type=&quot;text/css&quot;  media=&quot;all&quot;&gt;
    table tbody {border-top:2px; border-bottom:2px;}
    table thead {border-bottom:1px;}
  &lt;/style&gt;
&lt;/head&gt; &lt;p&gt;I wrote a &lt;a href=&quot;https://github.com/noamross/Pollen/commit/a7ebd4a9f46466da4c420b9437c73f8b185be56b#pollendatafuntions.R&quot;&gt;few functions&lt;/a&gt; to grab data and from the &lt;a href=&quot;http://www.ncdc.noaa.gov/paleo/gpd.html&quot;&gt;Global Pollen Database&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;source&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;~/code/_Pollen/pollendatafuntions.R&amp;quot;&lt;/span&gt;)
## Loading required package: stratigraph
## Loading required package: grid
## Loading required package: graphics
## Loading required package: stats
billys &amp;lt;- &lt;span class=&quot;kw&quot;&gt;getpctAP&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;billys&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;plot =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)
## Number of taxa:  105 
## Number of levels:  77 &lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/a.png&quot; alt=&quot;Arboreal Pollen over time at Billy’s Lake&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;Arboreal Pollen over time at Billy’s Lake&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Clearly, there’s are trends at different time scales. The trouble with using S-Maps on this is that there are uneven sampling intervals. One option is to use linear interpolation to approximate even intervals:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;billyslin &amp;lt;- &lt;span class=&quot;kw&quot;&gt;linpctAP&lt;/span&gt;(billys, &lt;span class=&quot;dt&quot;&gt;ts =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)
billys &amp;lt;- &lt;span class=&quot;kw&quot;&gt;getpctAP&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;billys&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;plot =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;TRUE&lt;/span&gt;)
## Number of taxa:  105 
## Number of levels:  77 
&lt;span class=&quot;kw&quot;&gt;lines&lt;/span&gt;(billyslin[, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], billyslin[, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;points&lt;/span&gt;(billyslin[, &lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;], billyslin[, &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;], &lt;span class=&quot;dt&quot;&gt;col =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;red&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;pch =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;16&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&quot;figure&quot;&gt;
&lt;img src=&quot;http://dl.dropbox.com/u/3356641/blogstuff/b.png&quot; alt=&quot;With linearly interpolated evenly spaced samples&quot; /&gt;&lt;p class=&quot;caption&quot;&gt;With linearly interpolated evenly spaced samples&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This means introducing a new source of error into whatever model is ultimately used. What interval should be used to generate this? Here I created an equal number of points as are in the original data set. However, the sampling density is greater at more recent dates. S-Maps can handle missing data, but there need to be a good chunk of consecutive points.&lt;/p&gt;
&lt;p&gt;The other option is start thinking about how to generalize S-Maps for data sampled at unequal intervals.&lt;/p&gt;</content>
 </entry>
 
 
</feed>